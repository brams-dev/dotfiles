{"version":3,"sources":["file:///webpack/bootstrap","file:///external \"vscode\"","file:///external \"path\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\parse\\index.js","file:///external \"fs\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\safer-buffer\\safer.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\compare_asc\\index.js","file:///external \"buffer\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\en\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\vsls\\vscode.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_date\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_days_in_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\compare_desc\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_week\\index.js","file:///external \"stream\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\index.js","file:///external \"crypto\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\distance_in_words\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_day_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_valid\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_leap_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_month\\index.js","file:///external \"child_process\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\_lib\\getTimezoneOffsetInMilliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\are_ranges_overlapping\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\closest_index_to\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\closest_to\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_iso_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\en\\build_distance_in_words_locale\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\en\\build_format_locale\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\_lib\\build_formatting_tokens_reg_exp\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\distance_in_words_strict\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\distance_in_words_to_now\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\each_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_today\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_tomorrow\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_yesterday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\format\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_date\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_days_in_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_weeks_in_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_overlapping_days_in_ranges\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_time\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_after\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_before\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_equal\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_first_day_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_friday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_future\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_last_day_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_monday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_past\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_saturday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_sunday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_thursday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_today\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_tomorrow\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_tuesday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_wednesday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_weekend\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_within_range\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_yesterday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\max\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\min\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_date\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_day_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_iso_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_today\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_tomorrow\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_yesterday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\bom-handling.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\internal.js","file:///external \"string_decoder\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\utf16.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\utf7.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\sbcs-codec.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\sbcs-data.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\sbcs-data-generated.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\dbcs-codec.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\dbcs-data.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\streams.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\extend-node.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\tslib\\tslib.es6.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\comparers.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\ui\\config.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\constants.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\array.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\date.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\isObject.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_freeGlobal.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_root.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\now.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_Symbol.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_getRawTag.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_objectToString.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_baseGetTag.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\isObjectLike.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\isSymbol.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\toNumber.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\debounce.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\toFinite.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\toInteger.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\before.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\once.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\function.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\decorators\\gate.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\string.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\decorators\\log.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\iterable.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\object.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\version.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\searchTree.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\logger.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\annotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\messages.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\trackedDocument.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\documentTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\gitDocumentTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\shell.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\locator.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\gitUri.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\formatters\\formatter.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\formatters\\commitFormatter.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\file.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\formatters\\statusFormatter.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\commit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\blameCommit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\status.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\branch.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\diffParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\diff.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\logCommit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\remote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\provider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\azure-devops.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\bitbucket.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\bitbucket-server.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\custom.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\github.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\gitlab.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\factory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\repository.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\stashCommit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\tag.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\blameParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\branchParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\logParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\remoteParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\stashParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\statusParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\tagParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\treeParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\git.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\protocol.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\host.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\guest.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\vsls.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\gitService.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\ui\\shared\\colors.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\annotations.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\blameAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\gutterBlameAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\heatmapBlameAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\recentChangesAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\fileAnnotationController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\lineAnnotationController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\codelens\\codeLensProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\codelens\\codeLensController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\fsProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\hovers\\lineHoverController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\keyboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\statusbar\\statusBarController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\lineTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\gitLineTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\viewNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\commitFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\folderNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\commitNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\common.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\helpers.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchTrackingStatusNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchOrTagFolderNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\fileHistoryNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commonQuickPicks.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\branchesAndTagsQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\remotesQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\branchHistoryQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commitFileQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commitQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commitsQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\fileHistoryQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\repositoriesQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\repoStatusQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\stashListQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\fileHistoryTrackerNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\lineHistoryNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\lineHistoryTrackerNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\remoteNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\remotesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\stashFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\stashNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\stashesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\statusFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\statusFilesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\tagNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\tagsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\repositoryNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\repositoriesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\resultsCommitsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\resultsFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\resultsFilesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\compareResultsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\comparePickerNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\compareNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\searchNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\common.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\searchResultsCommitsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\viewBase.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\compareView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\fileHistoryView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\lineHistoryView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\repositoriesView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\searchView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\viewCommands.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\webviews\\webviewEditor.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\webviews\\settingsEditor.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\webviews\\welcomeEditor.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\container.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\configuration.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\annotations.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\closeUnchangedFiles.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\copyMessageToClipboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\copyRemoteFileUrlToClipboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\copyShaToClipboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffBranchWithBranch.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffDirectory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffLineWithPrevious.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffLineWithWorking.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWith.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithBranch.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithNext.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithPrevious.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithRevision.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithWorking.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\externalDiff.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openBranchesInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openBranchInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openChangedFiles.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openCommitInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openFileInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openFileRevision.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openRepoInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openWorkingFile.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\repositories.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\resetSuppressedWarnings.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\searchCommits.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showLastQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickBranchHistory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickCommitDetails.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickCommitFileDetails.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickCurrentBranchHistory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickFileHistory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickRepoStatus.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickStashList.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\stashApply.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\stashDelete.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\stashSave.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\supportGitLens.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\switchMode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\modesQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\toggleCodeLens.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\extension.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","getTimezoneOffsetInMilliseconds","isDate","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","DEFAULT_ADDITIONAL_DIGITS","parseTokenDateTimeDelimeter","parseTokenPlainTime","parseTokenYY","parseTokensYYY","parseTokenYYYY","parseTokensYYYYY","parseTokenMM","parseTokenDDD","parseTokenMMDD","parseTokenWww","parseTokenWwwD","parseTokenHH","parseTokenHHMM","parseTokenHHMMSS","parseTokenTimezone","parseTokenTimezoneZ","parseTokenTimezoneHH","parseTokenTimezoneHHMM","dayOfISOYear","isoYear","week","day","date","Date","setUTCFullYear","diff","getUTCDay","setUTCDate","getUTCDate","argument","dirtyOptions","getTime","additionalDigits","Number","dateStrings","dateString","timeString","array","split","test","token","exec","time","replace","timezone","splitDateString","parseYearResult","parseTokenYYY","parseTokenYYYYY","yearString","year","parseInt","restDateString","slice","length","centuryString","parseYear","month","dayOfYear","dayOfWeek","parseDate","offset","timestamp","hours","minutes","parseFloat","seconds","parseTime","timezoneString","absoluteOffset","fullTime","fullTimeDate","fullTimeDateNextDay","setDate","getDate","offsetDiff","parse","startOfISOWeek","dirtyDate","getFullYear","fourthOfJanuaryOfNextYear","setFullYear","setHours","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfWeek","weekStartsOn","buffer","Buffer","safer","Safer","from","Uint8Array","encodingOrOffset","TypeError","alloc","size","fill","encoding","RangeError","buf","kStringMaxLength","process","binding","e","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","dirtyAmount","amount","getISOYear","fourthOfJanuary","dirtyDateLeft","dirtyDateRight","timeLeft","timeRight","buildDistanceInWordsLocale","buildFormatLocale","distanceInWords","format","getDay","startOfDay","MILLISECONDS_IN_DAY","startOfDayLeft","startOfDayRight","timestampLeft","getTimezoneOffset","timestampRight","Math","round","getDaysInMonth","desiredMonth","getMonth","dateWithDesiredMonth","daysInMonth","setMonth","min","dateLeft","dateRight","bomHandling","iconv","encodings","defaultCharUnicode","defaultCharSingleByte","encode","str","options","encoder","getEncoder","res","write","trail","end","concat","decode","skipDecodeWarning","console","error","decoder","getDecoder","encodingExists","enc","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecOptions","codec","codecDef","encodingName","type","Error","toLowerCase","bomAware","addBOM","PrependBOM","stripBOM","StripBOM","nodeVer","versions","node","nodeVerArr","map","vscode","async","getApi","liveshareExtension","extensions","getExtension","extensionId","extensionApi","isActive","activate","getApiAsync","Role","Access","View","ViewItem","monthIndex","lastDayOfMonth","addDays","differenceInCalendarMonths","compareAsc","sign","difference","abs","differenceInMilliseconds","floor","ceil","startOfISOYear","MILLISECONDS_IN_WEEK","dateLeftStartOfWeek","dateRightStartOfWeek","addHours","addISOYears","addMilliseconds","addMinutes","addMonths","addQuarters","addSeconds","addWeeks","addYears","areRangesOverlapping","closestIndexTo","closestTo","compareDesc","differenceInCalendarDays","differenceInCalendarISOWeeks","differenceInCalendarISOYears","differenceInCalendarQuarters","differenceInCalendarWeeks","differenceInCalendarYears","differenceInDays","differenceInHours","differenceInISOYears","differenceInMinutes","differenceInMonths","differenceInQuarters","differenceInSeconds","differenceInWeeks","differenceInYears","distanceInWordsStrict","distanceInWordsToNow","eachDay","endOfDay","endOfHour","endOfISOWeek","endOfISOYear","endOfMinute","endOfMonth","endOfQuarter","endOfSecond","endOfToday","endOfTomorrow","endOfWeek","endOfYear","endOfYesterday","getDayOfYear","getDaysInYear","getHours","getISODay","getISOWeek","getISOWeeksInYear","getMilliseconds","getMinutes","getOverlappingDaysInRanges","getQuarter","getSeconds","getYear","isAfter","isBefore","isEqual","isFirstDayOfMonth","isFriday","isFuture","isLastDayOfMonth","isLeapYear","isMonday","isPast","isSameDay","isSameHour","isSameISOWeek","isSameISOYear","isSameMinute","isSameMonth","isSameQuarter","isSameSecond","isSameWeek","isSameYear","isSaturday","isSunday","isThisHour","isThisISOWeek","isThisISOYear","isThisMinute","isThisMonth","isThisQuarter","isThisSecond","isThisWeek","isThisYear","isThursday","isToday","isTomorrow","isTuesday","isValid","isWednesday","isWeekend","isWithinRange","isYesterday","lastDayOfISOWeek","lastDayOfISOYear","lastDayOfQuarter","lastDayOfWeek","lastDayOfYear","max","setDay","setDayOfYear","setISODay","setISOWeek","setISOYear","setMilliseconds","setMinutes","setQuarter","setSeconds","setYear","startOfHour","startOfMinute","startOfMonth","startOfQuarter","startOfSecond","startOfToday","startOfTomorrow","startOfYear","startOfYesterday","subDays","subHours","subISOYears","subMilliseconds","subMinutes","subMonths","subQuarters","subSeconds","subWeeks","subYears","dirtyISOYear","enLocale","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyDateToCompare","comparison","locale","localize","localizeOptions","addSuffix","Boolean","months","includeSeconds","monthsSinceStartOfYear","years","cleanDate","isNaN","toString","dateLeftStartOfHour","dateRightStartOfHour","dateLeftStartOfYear","dateRightStartOfYear","dateLeftStartOfMinute","dateRightStartOfMinute","dateLeftStartOfQuarter","dateRightStartOfQuarter","currentMonth","dateLeftStartOfSecond","dateRightStartOfSecond","dirtyMonth","baseTimezoneOffset","dirtyInitialRangeStartDate","dirtyInitialRangeEndDate","dirtyComparedRangeStartDate","dirtyComparedRangeEndDate","initialStartTime","initialEndTime","comparedStartTime","comparedEndTime","dirtyDatesArray","Array","result","minDistance","timeToCompare","forEach","index","currentDate","distance","undefined","startOfISOWeekLeft","startOfISOWeekRight","startOfWeekLeft","startOfWeekRight","distanceInWordsLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","count","buildFormattingTokensRegExp","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","formatters","MMM","MMMM","dd","ddd","dddd","A","a","aa","formatterToken","number","rem100","ordinal","formattingTokensRegExp","commonFormatterKeys","formatterKeys","push","formattingTokens","sort","reverse","RegExp","join","MINUTES_IN_YEAR","unit","mathPartial","partialMethod","String","now","dirtyStartDate","dirtyEndDate","dirtyStep","startDate","step","endTime","dates","M","MM","addLeadingZeros","Q","D","DD","DDD","DDDD","E","W","WW","YY","substr","YYYY","GG","GGGG","H","HH","h","hh","mm","ss","S","SS","SSS","Z","formatTimezone","ZZ","X","x","delimeter","absOffset","targetLength","output","dirtyFormatStr","formatStr","localeFormatters","formatter","input","match","Function","buildFormatFn","formatFn","thisYear","valueOf","differenceInMs","dateToCompare","dirtyLeftDate","dirtyRightDate","dateLeftStartOfDay","dateRightStartOfDay","tomorrow","startTime","yesterday","arguments","latestTimestamp","apply","earliestTimestamp","dirtyDayOfMonth","dayOfMonth","dirtyDay","currentDay","dirtyDayOfYear","dirtyHours","dirtyISOWeek","isoWeek","dirtyMilliseconds","milliseconds","dirtyMinutes","dirtyQuarter","dirtySeconds","dirtyYear","PrependBOMWrapper","this","StripBOMWrapper","pass","InternalCodec","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","hex","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","acc","contBytes","accBytes","completeQuads","bufIdx","charCode","charCodeAt","curByte","fromCharCode","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","defaultEncoding","asciiCharsLE","asciiCharsBE","_len","utf16be","tmp","buf2","j","utf16","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","chunk","base64Regex","base64Chars","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","uChar","base64IMAPChars","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","newBuf","idx1","idx2","10029","maccenteuro","808","ibm808","cp808","mik","ascii8bit","usascii","ansix34","ansix341968","ansix341986","csascii","cp367","ibm367","isoir6","iso646us","iso646irv","us","latin1","latin2","latin3","latin4","latin5","latin6","latin7","latin8","latin9","latin10","csisolatin1","csisolatin2","csisolatin3","csisolatin4","csisolatincyrillic","csisolatinarabic","csisolatingreek","csisolatinhebrew","csisolatin5","csisolatin6","l1","l2","l3","l4","l5","l6","l7","l8","l9","l10","isoir14","isoir57","isoir100","isoir101","isoir109","isoir110","isoir144","isoir127","isoir126","isoir138","isoir148","isoir157","isoir166","isoir179","isoir199","isoir203","isoir226","cp819","ibm819","cyrillic","arabic","arabic8","ecma114","asmo708","greek","greek8","ecma118","elot928","hebrew","hebrew8","turkish","turkish8","thai","thai8","celtic","celtic8","isoceltic","tis6200","tis62025291","tis62025330","10000","10006","10007","10079","10081","cspc8codepage437","cspc775baltic","cspc850multilingual","cspcp852","cspc862latinhebrew","cpgr","msee","mscyrl","msansi","msgreek","msturk","mshebr","msarab","winbaltrim","cp20866","20866","ibm878","cskoi8r","cp21866","21866","ibm1168","strk10482002","tcvn5712","tcvn57121","gb198880","cn","csiso14jisc6220ro","jisc62201969ro","jp","cshproman8","r8","roman8","xroman8","ibm1051","mac","csmacintosh","437","737","775","850","852","855","856","857","858","860","861","862","863","864","865","866","869","874","922","1046","1124","1125","1129","1133","1161","1162","1163","1250","1251","1252","1253","1254","1255","1256","1257","1258","28591","28592","28593","28594","28595","28596","28597","28598","28599","28600","28601","28603","28604","28605","28606","windows874","win874","cp874","windows1250","win1250","cp1250","windows1251","win1251","cp1251","windows1252","win1252","cp1252","windows1253","win1253","cp1253","windows1254","win1254","cp1254","windows1255","win1255","cp1255","windows1256","win1256","cp1256","windows1257","win1257","cp1257","windows1258","win1258","cp1258","iso88591","cp28591","iso88592","cp28592","iso88593","cp28593","iso88594","cp28594","iso88595","cp28595","iso88596","cp28596","iso88597","cp28597","iso88598","cp28598","iso88599","cp28599","iso885910","cp28600","iso885911","cp28601","iso885913","cp28603","iso885914","cp28604","iso885915","cp28605","iso885916","cp28606","cp437","ibm437","csibm437","cp737","ibm737","csibm737","cp775","ibm775","csibm775","cp850","ibm850","csibm850","cp852","ibm852","csibm852","cp855","ibm855","csibm855","cp856","ibm856","csibm856","cp857","ibm857","csibm857","cp858","ibm858","csibm858","cp860","ibm860","csibm860","cp861","ibm861","csibm861","cp862","ibm862","csibm862","cp863","ibm863","csibm863","cp864","ibm864","csibm864","cp865","ibm865","csibm865","cp866","ibm866","csibm866","cp869","ibm869","csibm869","cp922","ibm922","csibm922","cp1046","ibm1046","csibm1046","cp1124","ibm1124","csibm1124","cp1125","ibm1125","csibm1125","cp1129","ibm1129","csibm1129","cp1133","ibm1133","csibm1133","cp1161","ibm1161","csibm1161","cp1162","ibm1162","csibm1162","cp1163","ibm1163","csibm1163","maccroatian","maccyrillic","macgreek","maciceland","macroman","macromania","macthai","macturkish","macukraine","koi8r","koi8u","koi8ru","koi8t","armscii8","rk1048","tcvn","georgianacademy","georgianps","pt154","viscii","iso646cn","iso646jp","hproman8","macintosh","ascii","tis620","_dbcs","DBCSCodec","UNASSIGNED","GB18030_CODE","NODE_START","UNASSIGNED_NODE","table","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","val","to","_fillEncodeTable","encodeAdd","_setEncodeChar","defCharSB","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBuf","findIdx","mid","_getDecodeTrieNode","addr","bytes","curAddr","writeTable","k","part","code","codeTrail","len","seq","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","prefix","mbCode","nextChar","resCode","subtable","idx","uChars","gbChars","prevBufOffset","seqStart","curSeq","ptr","uCodeLead","ret","shiftjis","¥","‾","csshiftjis","mskanji","sjis","windows31j","ms31j","xsjis","windows932","ms932","932","cp932","eucjp","gb2312","gb231280","gb23121980","csgb2312","csiso58gb231280","euccn","windows936","ms936","936","cp936","gbk","xgbk","isoir58","€","chinese","windows949","ms949","949","cp949","cseuckr","csksc56011987","euckr","isoir149","korean","ksc56011987","ksc56011989","ksc5601","windows950","ms950","950","cp950","big5","big5hkscs","cnbig5","csbig5","xxbig5","Transform","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","encodeStream","decodeStream","supportsStreams","_collect","collect","constructor","_transform","done","_flush","cb","chunks","on","isBuffer","original","supportsNodeEncodingsExtension","extendNodeEncodings","nodeNativeEncodings","utf-8","ucs-2","utf-16le","isNativeEncoding","SlowBuffer","SlowBufferToString","start","SlowBufferWrite","string","isFinite","swap","remaining","copy","BufferIsEncoding","isEncoding","BufferByteLength","byteLength","BufferToString","BufferWrite","_offset","_length","_encoding","Readable","ReadableSetEncoding","setEncoding","_readableState","undoExtendNodeEncodings","__rest","indexOf","getOwnPropertySymbols","__decorate","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","Comparer","textDocumentComparer","TextDocumentComparer","[object Object]","lhs","rhs","textEditorComparer","TextEditorComparer","useId","usePosition","viewColumn","document","equals","id","uriComparer","UriComparer","scheme","fsPath","AnnotationsToggleMode","CodeLensCommand","CodeLensScopes","CustomRemoteType","DateStyle","FileAnnotationType","GravatarDefaultStyle","HighlightLocations","KeyMap","LogLevel","StatusBarCommand","ViewBranchesLayout","ViewFilesLayout","extensionOutputChannelName","extensionQualifiedId","extensionTerminalName","BuiltInCommands","CommandContext","DocumentSchemes","GlyphChars","GlobalState","setCommandContext","external_vscode_","executeCommand","SetContext","isActiveDocument","editor","activeTextEditor","isTextEditor","uri","Output","DebugConsole","ImageMimetypes",".png",".gif",".jpg",".jpeg",".jpe",".webp",".tif",".tiff",".bmp","WorkspaceState","Arrays","compactHierarchy","root","joinPath","isRoot","children","values","child","relativePath","countUniques","source","accessor","uniqueCounts","item","filterMap","predicateMapper","reduce","accumulator","current","mapped","filterMapAsync","groupBy","groupings","groupByMap","group","set","Map","groupByFilterMap","makeHierarchical","splitPath","compact","seed","descendants","hierarchy","folder","folderName","f","uniqueBy","predicate","uniqueValues","filter","date_patch","formatterOptions","date_Dates","Dates","newDate","MillisecondsPerMinute","MillisecondsPerHour","MillisecondsPerDay","dateDaysFromNow","toFormatter","fromNow","date_fns","lodash_es_isObject","_freeGlobal","global","freeSelf","self","lodash_es_root","lodash_es_now","_Symbol","objectProto","_getRawTag_hasOwnProperty","nativeObjectToString","symToStringTag","_getRawTag","isOwn","tag","unmasked","_objectToString_nativeObjectToString","_objectToString","nullTag","undefinedTag","_baseGetTag_symToStringTag","_baseGetTag","lodash_es_isObjectLike","symbolTag","lodash_es_isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","lodash_es_toNumber","isBinary","FUNC_ERROR_TEXT","nativeMax","nativeMin","lodash_es_debounce","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","args","thisArg","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","cancel","clearTimeout","flush","INFINITY","MAX_INTEGER","lodash_es_toFinite","lodash_es_toInteger","remainder","before_FUNC_ERROR_TEXT","lodash_es_before","function_Functions","lodash_es_once","gate","descriptor","fn","gateKey","configurable","writable","promise","isPromise","then","Functions","cachedOnce","cached","Promise","resolve","cancellable","reject","onCancellationRequested","debounce","_a","assign","track","opts","pending","tracked","comma","empty","openBrace","openParen","closeParen","fnBodyRegex","fnBodyStripCommentsRegex","fnBodyStripParamDefaultValueRegex","ms","getParameters","fnBody","open","close","param","trim","once","propOf","propOfCore","interval","timer","disposable","dispose","clearInterval","setInterval","waitUntil","timeout","counter","string_Strings","Strings","getDurationMilliseconds","secs","nanosecs","hrtime","pathNormalizeRegex","pathStripTrailingSlashRegex","tokenRegex","tokenSanitizeRegex","padLeft","padTo","padding","width","getWidth","repeat","padRight","getTokensFromTemplate","template","tokens","truncateTo","option","suffix","collapseWhitespace","padDirection","interpolate","context","lines","substring","md5","external_crypto_","update","digest","normalizePath","fileName","stripTrailingSlash","normalized","addLeadingSlash","pad","before","after","padLeftOrTruncate","truncate","padOrTruncate","left","padRightOrTruncate","pluralize","zero","plural","illegalCharsForFSRegex","ellipsis","sanitizeForFileSystem","replacement","sha1","ansiRegex","containsNonAsciiRegex","emoji","joiners","graphemes","codePointAt","isFullwidthCodePoint","cp","log_correlationContext","correlationCounter","clearCorrelationContext","correlationId","delete","LogInstanceNameFn","log_debug","timed","log_log","debug","logFn","logger_Logger","log","parameters","MAX_SAFE_INTEGER","isDebugging","level","Debug","Verbose","condition","instanceName","toLoggableName","correlate","correlationContext","instance","setCorrelationContext","enter","loggableParams","singleLine","argFns","argFn","loggable","v","toLoggable","sanitize","logWithDebugParams","exit","logError","ex","timing","exitDetails","logResult","catch","Iterables","Objects","Versions","some","next","every","find","first","iterator","flatMap","mapper","has","isIterable","separator","last","skip","take","union","sources","entries","flatten","stringify","flattened","_flatten","JSON","isArray","isEmpty","paths","path","results","StringIterator","_value","_pos","PathIterator","_from","_to","justSeps","ch","aPos","aLen","thisPos","cmp","TernarySearchTreeNode","right","searchTree_TernarySearchTree","segments","_iter","_root","element","iter","reset","segment","hasNext","oldElement","stack","dir","parent","pop","candidate","limit","_nodeIterator","data","_forEach","callback","_iterator","major","minor","patch","pre","compare","v1","v2","localeCompare","fromString","version","ver","ConsolePrefix","isDebuggingRegex","loggableFn","customLoggableFn","subscriptions","configuration","onDidChange","onConfigurationChanged","initializingChangeEvent","section","changed","Silent","createOutputChannel","contextOrMessage","params","message","shift","appendLine","toLoggableParams","warn","show","toISOString","getUTCMilliseconds","command","gitOutput","debugOnly","_isDebugging","env","VSCODE_DEBUGGING_EXTENSION","AnnotationStatus","annotationProvider_AnnotationProviderBase","trackedDocument","decoration","highlightDecoration","correlationKey","getCorrelationKey","onDidChangeTextEditorSelection","onTextEditorSelectionChanged","clear","textEditor","selection","selections","active","line","editorId","editorUri","status","setDecorations","additionalDecorations","_b","_c","changes","_resetDebounced","onReset","provideAnnotation","_disposed","Computing","decorations","ranges","Computed","shaOrLine","onProvideAnnotation","SuppressedMessages","messages_Messages","commit","showMessage","CommitHasNoPreviousCommitWarning","shortSha","author","formattedDate","CommitNotFoundWarning","title","showOutputChannel","FileNotUnderSourceControlWarning","GitDisabledWarning","GitVersionWarning","LineUncommittedWarning","NoRepositoryWarning","actions","ViewsHideSupportGitLens","suppressedMessage","SupportGitLensNotification","Open","Commands","ShowWelcomePage","suppressionKey","dontShowAgain","showInformationMessage","showWarningMessage","showErrorMessage","messages","Global","trackedDocument_TrackedDocument","_document","dirty","_eventDelegates","_onDidBlameStateChange","_forceDirtyStateChangeOnNextDocumentChange","_hasRemotes","_isDirtyIdle","_isTracked","_blameFailed","_repo","initialize","onDidBlameStateChange","event","_disposable","container_Container","git","_uri","gitUri_GitUri","fromUri","repo","getRepository","onRepositoryChanged","initializing","RepositoryChange","Repository","forceDirtyStateChangeOnNextDocumentChange","hasRemotes","isBlameable","isDirtyIdle","isRevision","sha","isTracked","lineCount","ActiveFileStatus","getStatus","reason","state","wasBlameable","forceBlameChange","getEditorIfActive","blameable","fire","documentTracker_DocumentTracker","_onDidChangeBlameState","_onDidChangeDirtyState","_onDidTriggerDirtyIdle","_documentMap","onDidChangeActiveTextEditor","onActiveTextEditorChanged","onDidChangeTextDocument","onTextDocumentChanged","onDidCloseTextDocument","onTextDocumentClosed","onDidSaveTextDocument","onTextDocumentSaved","onDidChangeBlameState","onDidChangeDirtyState","onDidTriggerDirtyIdle","_dirtyIdleTriggerDelay","_dirtyIdleTriggeredDebounced","_timer","doc","addCore","File","Vsls","isDirty","resetForceDirtyStateChangeOnNextDocumentChange","fireDocumentDirtyStateChanged","documentOrId","_add","_get","toKey","openTextDocument","documentUri","useVersionedPath","msg","includes","BinaryTextDocument","MissingRevisionTextDocument","ensureInitialized","setImmediate","_dirtyStateChangedDebounced","documentTracker_EmptyTextDocument","gitUri","eol","LF","isClosed","isUntitled","languageId","range","position","regex","GitDocumentState","cache","gitDocumentTracker_GitDocumentTracker","isWindows","platform","runDownPath","exe","external_path_","external_fs_","haystack","PATH","needle","RunError","exitCode","super","captureStackTrace","run","maxBuffer","stdin","stdinEncoding","proc","external_child_process_","err","stdout","stderr","lib","findSpecificGit","findExecutable","cmd","possibleExts","ext","possibleFullPath","SYSTEMROOT","execPath","raw","findSystemGitWin32","basePath","findGitPath","findGitDarwin","gitUri_empty","slash","commitOrRepoPath","GitLens","query","authority","fragment","repoPath","gitService_GitService","isStagedUncommitted","ref","isUncommitted","ensureValidUNCPath","versionedPath","shortenSha","file","relativeTo","getDirectory","Dot","directory","useVslsScheme","vsls","isMaybeGuest","with","previous","previousUri","previousSha","fileOrName","resolveToUri","originalFileName","isTrackable","Git","getRepoPath","stagedUncommittedSha","fileNameOrUri","getFormattedPath","getRelativePath","encodeURIComponent","normalizedFileName","normalizedRepoPath","startsWith","uriOrRef","fileNameOrFile","repoName","filePath","spaceReplacementRegex","formatter_Formatter","collapsableWhitespace","_item","_options","dateFormat","tokenOptions","dateFormatOrOptions","_formatter","emojiMap","emojiRegex","escapeMarkdownRegex","markdownHeaderReplacement","ZeroWidthSpace","commitFormatter_CommitFormatter","_ago","_date","formatDate","_agoOrDate","dateStyle","config","defaultDateStyle","Absolute","ago","_padOrTruncate","agoOrDate","authorAgo","authorAgoOrDate","avatar","markdown","hovers","avatars","getGravatarUri","defaultGravatarsStyle","logCommit_GitLogCommit","GitCommitType","getFormattedDiffStatus","changesShort","commands","showQuickCommitDetails_ShowQuickCommitDetailsCommand","getMarkdownCommandArgs","MuchGreaterThan","diffWith_DiffWithCommand","annotationType","RecentChanges","Blame","toRevisionUri","SquareWithTopShadow","openFileRevision_OpenFileRevisionCommand","remotes","ArrowUpRight","openCommitInRemote_OpenCommitInRemoteCommand","MiddleEllipsis","showQuickCommitFileDetails_ShowQuickCommitFileDetailsCommand","email","truncateMessageAtNewLine","Space","Ellipsis","b","default","numeric","sensitivity","provider","enrichMessage","fromTemplateCore","file_GitFile","GitFile","getFormattedDirectory","includeOriginal","ArrowLeft","statusIconsMap","!","?","C","R","T","U","B","getStatusIcon","statusOcticonsMap","getStatusOcticon","missing","statusTextMap","getStatusText","statusFormatter_StatusFileFormatter","working","statusFile","files","icon","workingTreeStatus","indexStatus","Pencil","SpaceThinnest","Check","SpaceThin","EnDash","gravatarCache","missingGravatarHash","CommitFormatting","commit_GitCommit","previousFileName","_fileName","_previousSha","isFile","_shortSha","git_Git","StashFile","isStash","Stash","_isStagedUncommitted","_isUncommitted","previousFileShortSha","previousFileSha","_resolvedPreviousFileSha","previousShortSha","workingUri","workingFileName","_dateFormatter","fallback","hash","gravatar","fromTemplate","resolveReference","fromCommit","change","blameCommit_GitBlameCommit","getChangedValue","status_GitStatus","branch","upstream","detached","branch_GitBranch","isDetached","formatDetached","_diff","added","deleted","getDiffStatus","expand","getUpstreamStatus","behind","ahead","ArrowDown","ArrowUp","status_GitStatusFile","staged","workTreeStatus","tracking","remote","_basename","getName","lastIndexOf","_name","getRemote","starred","workspaceState","StarredBranches","updateStarred","star","nameStatusDiffRegex","shortStatDiffRegex","unifiedDiffRegex","diffParser_GitDiffParser","currentStart","previousStart","diff_GitDiffChunk","currentLines","previousLines","removed","chunkLines","chunkLine","insertions","deletions","currentPosition","previousPosition","_chunk","_lines","parseChunk","committedDate","parentShas","isMerge","nextShortSha","nextSha","nextUri","nextFileName","GitRemoteType","RemoteResourceType","remote_GitRemote","domain","types","defaultRemote","DefaultRemote","getNameFromRemoteResource","resource","Branch","Branches","Commit","Repo","Revision","provider_RemoteProvider","protocol","custom","displayPath","baseUrl","url","clipboard","writeText","showGenericErrorMessage","openUrl","getUrlForBranch","getUrlForBranches","getUrlForCommit","getUrlForFile","getUrlForRepository","issueEnricherRegex","gitRegex","legacyDefaultCollectionRegex","orgAndProjectRegex","sshDomainRegex","sshPathRegex","azure_devops_AzureDevOpsRemote","legacy","org","project","rest","_displayPath","bitbucket_issueEnricherRegex","prEnricherRegex","bitbucket_BitbucketRemote","formatName","bitbucket_server_issueEnricherRegex","bitbucket_server_prEnricherRegex","bitbucket_server_BitbucketServerRemote","custom_CustomRemote","urls","repository","getContext","branches","fileLine","fileRange","fileInCommit","fileInBranch","repoBase","github_issueEnricherRegex","issueEnricher3rdParyRegex","github_GitHubRemote","gitlab_issueEnricherRegex","gitlab_GitLabRemote","defaultProviders","factory_RemoteProviderFactory","providers","matcher","creator","cfg","rc","getCustomProvider","Bitbucket","BitbucketServer","Custom","GitHub","GitLab","RepositoryChangeEvent","solely","repository_Repository","onAnyRepositoryChanged","suspended","closed","_onDidChange","_onDidChangeFileSystem","supportsChangeEvents","_fireChangeDebounced","_fireFileSystemChangeDebounced","_fsWatchCounter","_pendingChanges","_closed","getWorkspaceFolder","fromRepoPath","formattedName","normalizedPath","endsWith","_suspended","watcher","createFileSystemWatcher","onDidCreate","onDidDelete","onDidChangeFileSystem","stopWatchingFileSystem","_providers","loadProviders","_remotes","fireChange","Remotes","fireFileSystemChange","Stashes","_branch","Tags","Config","Closed","progress","fetchCore","withProgress","location","Notification","fetch","getBranch","getBranches","getChangedFilesCount","stat","mtime","remotesCfg","getRemotesCore","getStashList","getStatusForRepo","getTags","getRemotes","pullCore","force","pushCore","fs","StarredRepositories","_fsWatcherDisposable","onFileSystemChanged","reasons","fireChangeCore","fireFileSystemChangeCore","uris","stashCommit_GitStashCommit","stashName","GitTag","annotation","blameParser_GitBlameParser","currentUser","authors","commits","lineParts","relativeFileName","entry","authorEmail","authorDate","authorTimeZone","summary","parseEntry","originalLine","branchWithTrackingRegex","branchWithTrackingStateRegex","branchParser_GitBranchParser","parseState","diffRegex","emptyEntry","logParser_GitLogParser","maxCount","recentCommit","truncationCount","parseFileName","matches","truncated","remoteRegex","urlRegex","remoteParser_GitRemoteParser","providerFactory","groups","parseGitUrl","uniqueness","stashParser_emptyEntry","stashParser_GitStashParser","fileNames","aheadStatusV1Regex","behindStatusV1Regex","statusParser_GitStatusParser","porcelainVersion","parseV1","parseV2","upstreamStatus","aheadStatus","behindStatus","rawStatus","file1","file2","parseStatusFile","tagWithRefRegex","tagWithAnnotationRegex","tagParser_GitTagParser","tags","treeRegex","GitTreeParser","trees","commitSha","rootSha","defaultBlameParams","defaultLogParams","defaultStashParams","GitErrors","badRevision","notAValidObjectName","GitWarnings","notARepository","outsideRepository","noPath","noCommits","notFound","foundButNotInRevision","headNotABranch","noUpstream","unknownRevision","mustRunInWorkTree","patchWithConflicts","noRemoteRepositorySpecified","remoteConnectionError","notAGitCommand","GitErrorHandling","pendingCommands","emptyArray","emptyObj","local","guest","cwd","configs","errors","errorHandling","runOpts","GCM_INTERACTIVE","GCM_PRESERVE_CREDS","LC_ALL","gitCommand","waiting","exception","splice","gitInfo","Ignore","Throw","defaultExceptionHandler","duration","logGitCommand","warning","gitPath","shaRegex","shaLikeRegex","stagedUncommittedRegex","uncommittedRegex","strings","stagedUncommitted","uncommitted","advanced","abbreviatedShaLength","shaShortenRegex","rev","extract","gitMajor","gitMinor","pathspec","allowConflicts","ignoreWhitespace","startLine","endLine","contents","all","deletedOrMissingSha","pattern","ref1","ref2","tool","renames","search","forkPoint","deleteAfter","pathspecs","GIT_OPTIONAL_LOCKS","uncommittedSha","RequestType","GitCommandRequestType","RepositoriesInFolderRequestType","WorkspaceFileExistsRequestType","defaultWhitelistFn","gitWhitelist","leadingSlashRegex","host_VslsHostService","_api","_service","_localToSharedPaths","_sharedToLocalPaths","onDidChangeIsServiceAvailable","onAvailabilityChanged","onDidChangeWorkspaceFolders","onWorkspaceFoldersChanged","onRequest","onGitCommandRequest","onRepositoriesInFolderRequest","onWorkspaceFileExistsRequest","api","service","shareService","ServiceId","unshareService","requestType","handler","cancellation","available","workspaceFolders","cc","getCorrelationContext","localPath","sharedPath","convertLocalUriToShared","localPaths","_localPathsRegex","sharedPaths","_sharedPathsRegex","request","isRootWorkspace","shared","localCwd","arg","convertSharedUriToLocal","folderUri","repositories","getRepositories","vslsUri","exists","fileExists","localUri","sharedUri","vslsUriRootRegex","guest_VslsGuestService","isServiceAvailable","getSharedService","Enabled","response","sendRequest","ensureCase","vslsUriPrefixRegex","vsls_VslsController","_host","_guest","Readonly","_waitForReady","_onReady","onDidChangeSession","onLiveShareSessionChanged","session","role","Host","liveshare","allowGuestAccess","share","Guest","connect","RepoSearchWarnings","doesNotExist","userConfigRegex","mappedAuthorRegex","GitRepoSearchBy","_onDidChangeRepositories","_branchesCache","_tagsCache","_tagsWithRefsCache","_trackedCache","_userMapCache","_repositoryTree","forPaths","onDidChangeWindowState","onWindowStateChanged","_repositoriesLoadingPromise","onDidChangeRepositories","UseCaching","caching","enabled","updateContext","fireRepositoriesChanged","focused","resume","suspend","getRepositoriesInFolder","repositorySearch","repos","findSuperstr","reposToDelete","depth","anyRepoChangedFn","rootPath","getRepoPathCore","excludes","getConfiguration","repoPaths","repositorySearchCore","rp","folders","promises","rej","isDirectory","repositoryTree","hasRepository","any","HasRemotes","isCloseAffordance","checkout","getOrderedRepositories","total","report","increment","isCancellationRequested","pull","fileExistsWithCase","repoPathLength","getLogForFile","findNextFileName","findNextFileNameCore","getRecentShaForFile","getLog","commitOrFileName","tracker","getOrAdd","getHighlanderRepoPath","highlander","cachedBlame","getBlameForFileCore","emptyPromise","blame","customArguments","getCurrentUser","errorMessage","setBlameFailure","getBlameForFileContentsCore","blame_contents","skipCache","getBlameForFile","blameLine","lineToBlame","getBlameForFileContents","getBlameForRangeSync","allLines","shas","Set","revparse_currentBranch","diff_shortstat","parseShortStat","config_get","user","config_getRegex","mappedAuthor","check_mailmap","cachedDiff","getDiffForFileCore","getEncoding","getDiffForFile","diff_nameStatus","parseNameStatus","show_status","getLogCommitForFile","log_recent","firstIfNotFound","isSha","maxListItems","searchBy","searchArgs","Author","ChangedLines","Changes","Files","Message","Sha","log_search","getLogForSearch","fileHistoryFollowsRenames","fromFile","cachedLog","getLogForFileCore","log_file","hasTrackingBranch","merge_base","includeAll","factory","filePathOrUri","skipCacheUpdate","isVslsScheme","findRepositoryForPath","parts","revparse_toplevel","getActiveRepoPath","getRepositoryTree","repoPathOrUri","findSubstr","vslsPath","stash_list","validateVersion","status_file","includeRefs","showref_tag","parseWithRef","ls_tree","schemeOruri","cacheKey","isTrackedCore","ls_files","getDiffTool","difftool_fileDiff","difftool_dirDiff","resolved","isShaLike","revparse","ensuredRef","cat_file_validate","cat_validate","add","directoryOrUri","stash_apply","stash_delete","stash_save","ensureGitVersion","u","stash_push","gitExtension","getAPI","setOrFindGitPath","getGitPath","getGitVersion","deletedOrMissing","throwIfLessThan","feature","gitVersion","0","1","2","cssColorRegex","toRgba","color","defaultHeatmapHotColor","defaultHeatmapColdColor","computedHeatmapColor","annotations_Annotations","heatmap","getHeatmapColor","renderOptions","borderColor","baseColor","cold","colors","hot","age","computeAge","rgba","g","rgb","toFixed","detailsMarkdownFormat","isTrusted","codeDiff","getCodeDiff","Dash","ArrowLeftRightLong","getDiffForLine","hoverMessage","getHoverDiffMessage","dateFormatOrFormatOptions","uncommittedColor","contentText","separateLines","borderStyle","borderWidth","spacing","backgroundColor","fontWeight","fontStyle","height","margin","textDecoration","applyHeatmap","scrollable","blameAnnotationProvider_BlameAnnotationProviderBase","_blame","getText","setForceDirtyStateChangeOnNextDocumentChange","_hoverProviderDisposable","commitLine","highlightDecorationRanges","validateRange","half","median","lookup","newest","oldest","ageThreshold","coldColor","hotColor","annotations","details","registerHoverProvider","provideHover","provideChangesHover","provideDetailsHover","getCommitForHover","logCommit","getHoverMessage","defaultDateFormat","hover","changesHover","over","character","getBlame","gutterBlameAnnotationProvider_GutterBlameAnnotationProvider","gravatarDefault","gutterRenderOptions","decorationsMap","avatarDecorationsMap","gutter","computedHeatmap","compacted","getComputedHeatmap","addOrUpdateGravatarDecoration","registerHoverProviders","avatarDecoration","createTextEditorDecorationType","gutterIconPath","gutterIconSize","heatmapBlameAnnotationProvider_HeatmapBlameAnnotationProvider","Heatmap","heatmapRenderOptions","recentChangesAnnotationProvider_RecentChangesAnnotationProvider","getRecentLogCommitForFile","AnnotationClearReason","Decorations","blameAnnotation","rangeBehavior","ClosedOpen","blameHighlight","heatmapAnnotation","heatmapHighlight","recentChangesAnnotation","recentChangesHighlight","fileAnnotationController_FileAnnotationController","_onDidToggleAnnotations","_annotationProviders","_keyboardScope","_annotationType","_toggleModes","onDidToggleAnnotations","clearAll","_annotationsDisposable","cfgHighlight","highlight","isWholeLine","overviewRulerLane","Right","locations","Line","overviewRulerColor","Overview","dark","Gutter","asAbsolutePath","light","recentChanges","toggleMode","_editor","isInWindowToggle","getProvider","detachKeyboardHook","attachKeyboardHook","BlameabilityChanged","is","clearCore","DocumentChanged","DocumentClosed","restore","fuzzyProvider","ColumnChanged","editors","getToggleMode","Window","User","Disposing","visibleTextEditors","currentProvider","computingAnnotations","showAnnotationsCore","reopen","keyboard","beginScope","escape","onDidPressKey","annotationsLabel","validate","onDidChangeTextEditorViewColumn","onTextEditorViewColumnChanged","onDidChangeVisibleTextEditors","onVisibleTextEditorsChanged","onBlameStateChanged","onDirtyStateChanged","annotationDecoration","lineAnnotationController_LineAnnotationController","_enabled","fileAnnotations","onFileAnnotationsToggled","onDidStartDebugSession","onDebugSessionStarted","clearAnnotations","_debugSessionEndDisposable","lineTracker","stop","currentLine","setLineTracker","refresh","onDidTerminateDebugSession","onDebugSessionEnded","includesAll","getState","isSubscribed","onDidChangeActiveLines","onActiveLinesChanged","codeLensProvider_GitRecentChangeCodeLens","symbol","blameRange","isFullRange","desiredCommand","codeLensProvider_GitAuthorsCodeLens","codeLensProvider_GitCodeLensProvider","_git","_tracker","_onDidChangeCodeLenses","onDidChangeCodeLenses","maxLines","sizeThresholdAfterEdit","languageScope","scopesByLanguage","ll","language","scopes","symbolScopes","lenses","symbols","Document","ExecuteDocumentSymbolProvider","documentRangeFn","dirtyCommand","getDirtyTitle","sym","provideCodeLens","blameForRangeFn","recentChange","fileSymbol","getFilename","getRangeFromSymbol","includeSingleLineSymbols","valid","symbolName","kind","Containers","Package","Class","Interface","Module","Namespace","Struct","isSingleLine","Constructor","Enum","Method","Property","Blocks","getValidateSymbolRange","lineAt","lineNumber","startChar","multiline","isDocumentSymbol","lens","resolveGitRecentChangeCodeLens","resolveGitAuthorsCodeLens","containerName","DiffWithPrevious","applyDiffWithPreviousCommand","ShowQuickCommitDetails","applyShowQuickCommitDetailsCommand","ShowQuickCommitFileDetails","applyShowQuickCommitFileDetailsCommand","ShowQuickCurrentBranchHistory","applyShowQuickCurrentBranchHistoryCommand","ShowQuickFileHistory","applyShowQuickFileHistoryCommand","ToggleFileBlame","applyToggleFileBlameCommand","toFileUri","codeLens","unsavedChanges","recentChangeAndAuthors","recentChangeOnly","authorsOnly","selector","codeLensController_GitCodeLensController","_canToggle","_providerDisposable","_provider","createProvider","CanToggleCodeLens","registerCodeLensProvider","onDirtyIdleTriggered","fromGitLensFSUri","fromRevisionUri","fsProvider_emptyArray","fsProvider_GitFileSystemProvider","_searchTreeMap","_onDidChangeFile","registerFileSystemProvider","isCaseSensitive","isReadonly","onDidChangeFile","NoPermissions","tree","getTree","FileNotFound","typeToFileType","getVersionedFileBuffer","ctime","treeItem","searchTree","Directory","getTreeFileForRevision","getTreeForRevision","createSearchTree","getOrCreateSearchTree","Unknown","lineHoverController_LineHoverController","unregister","register","debugging","lineState","getAnnotationType","wholeLine","lineAnnotations","keyNoopCommand","keys","mappings","keyboard_KeyboardScope","mapping","updateKeyCommandsContext","Key","keyboard_Keyboard","registerCommand","execute","begin","statusBarController_StatusBarController","clearBlame","_blameStatusBarItem","_modeStatusBarItem","statusBar","modes","statusBarItemName","alignment","Left","createStatusBarItem","SwitchMode","text","tooltip","reduceFlicker","updateBlame","hide","DiffLineWithPrevious","DiffWithWorking","DiffLineWithWorking","ToggleCodeLens","lineTracker_LineTracker","_onDidChangeActiveLines","_state","trigger","subscriber","subscription","_linesChangedDebounced","onLinesChanged","fireLinesChanged","lines1","lines2","GitLineState","gitLineTracker_GitLineTracker","_count","_subscriptions","updated","updateState","getBlameForLineContents","getBlameForLine","setState","ResourceType","unknownGitUri","viewNode_ViewNode","ViewNode","view","_instanceId","refreshNode","CommitFileNodeDisplayAs","ViewRefNode","supportsAutoRefresh","onDidChangeAutoRefresh","viewNode_SubscribeableViewNode","_canSubscribe","disposables","onDidChangeVisibility","onVisibilityChanged","onDidChangeNodeState","onNodeStateChanged","onAutoRefreshChanged","unsubscribe","canSubscribe","ensureSubscription","triggerChange","_subscription","subscriptionPromise","visible","onStateChanged","onParentStateChanged","autoRefresh","subscribe","nodeSupportsConditionalDismissal","canDismiss","commitFileNode_CommitFileNode","_displayAs","_selection","priority","toFileCommit","label","None","contextValue","resourceType","description","CommitIcon","iconPath","StatusIcon","Gravatar","getCommand","_label","_description","_tooltip","CommitLabel","getCommitDescriptionTemplate","getCommitFileDescriptionTemplate","_folderName","getCommitTemplate","getCommitFileTemplate","_relativePath","CommitFile","commitFormat","commitDescriptionFormat","commitFileFormat","commitFileDescriptionFormat","showOptions","preserveFocus","preview","folderNode_FolderNode","containsWorkingFiles","getFileNesting","List","Collapsed","Folder","nesting","layout","Auto","nestingThreshold","threshold","Tree","commitNode_CommitNode","getBranchAndTagTips","toGitUri","getChildren","branchAndTagTips","AngleBracketLeftHeavy","AngleBracketRightHeavy","ArrowHeadRight","common_MessageNode","_message","_iconPath","common_CommandMessageNode","_command","getTreeItem","common_PagerNode","_args","Pager","common_ShowMoreNode","getBranchesAndTagTipsFn","currentName","branchesAndTagsBySha","bt","branchesAndTags","markers","insertDateMarkers","iterable","showRelativeDateMarkers","daysAgo","marker","setUTCHours","nextDate","branchTrackingStatusNode_BranchTrackingStatusNode","direction","supportsPaging","defaultItemLimit","previousLog","StatusAheadOfUpstream","StatusBehindUpstream","BranchStatusAheadOfUpstream","BranchStatusBehindUpstream","iconSuffix","branchNode_BranchNode","branchName","getBasename","treeHierarchy","_children","showTrackingBranch","getTrackingStatus","unstar","branchOrTagFolderNode_BranchOrTagFolderNode","_expanded","expanded","Expanded","branchesNode_BranchesNode","branchNodes","fileHistoryNode_FileHistoryNode","displayAs","getStatusForFile","FileHistory","onRepoChanged","onRepoFileSystemChanged","startWatchingFileSystem","getQuickPickIgnoreFocusOut","showQuickPickProgress","scope","showQuickPick","_getInfiniteCancellablePromise","placeHolder","ignoreFocusOut","_showQuickPickProgress","commonQuickPicks_CommandQuickPickItem","commandOrArgs","commonQuickPicks_CommitQuickPickItem","getShortMessage","detail","commonQuickPicks_ChooseFromBranchesAndTagsQuickPickItem","_goBack","branchesAndTagsQuickPick_BranchesAndTagsQuickPick","allowCommitId","goBack","KeyCommandQuickPickItem","MessageQuickPickItem","commonQuickPicks_OpenFileCommandQuickPickItem","openEditor","commonQuickPicks_OpenFilesCommandQuickPickItem","commonQuickPicks_ShowCommitInViewQuickPickItem","searchView","commonQuickPicks_ShowCommitSearchResultsInViewQuickPickItem","resultsLabel","showSearchResults","commonQuickPicks_ShowFileHistoryInViewQuickPickItem","baseRef","fileHistoryView","showHistoryForUri","branchesAndTagsQuickPick_RefQuickPickItem","checked","branchesAndTagsQuickPick_BranchQuickPickItem","branchesAndTagsQuickPick_TagQuickPickItem","autoPick","pick","items","getItems","itms","quickpick","createQuickPick","busy","placeholder","onDidHide","onDidChangeValue","onDidAccept","selectedItems","validateReference","filters","include","remotesQuickPick_OpenRemoteCommandQuickPickItem","remotesQuickPick_OpenRemotesCommandQuickPickItem","goBackCommand","shortFileSha","OpenInRemote","branchHistoryQuickPick_BranchHistoryQuickPick",",",".","progressCancellation","nextPageCommand","currentCommand","ArrowBack","ShowQuickBranchHistory","previousPageCommand","npc","matchOnDescription","matchOnDetail","commitFileQuickPick_ApplyCommitFileChangesCommandQuickPickItem","applyChangesToWorkingFile","commitFileQuickPick_OpenCommitFileCommandQuickPickItem","commitFileQuickPick_OpenCommitFileRevisionCommandQuickPickItem","commitQuickPick_CommitWithFileStatusQuickPickItem","octicon","commitQuickPick_OpenCommitFilesCommandQuickPickItem","versioned","commitQuickPick_OpenCommitFileRevisionsCommandQuickPickItem","commitsQuickPick_CommitsQuickPick","showInViewCommand","showAllCommand","fileHistoryQuickPick_FileHistoryQuickPick","pickerOnly","findWorkingFileName","RepositoryQuickPickItem","repositoriesQuickPick_RepositoriesQuickPick","repoStatusQuickPick_OpenStatusFileCommandQuickPickItem","realIndexStatus","getOcticon","repoStatusQuickPick_OpenStatusFilesCommandQuickPickItem","OpenChangedFiles","stashListQuickPick_StashListQuickPick","stash","StashSave","fileHistoryTrackerNode_FileHistoryTrackerNode","resetChild","_child","_fileUri","fileUri","_baseRef","ActiveFileHistory","onActiveEditorChanged","lineHistoryNode_LineHistoryNode","LineHistory","lineHistoryTrackerNode_LineHistoryTrackerNode","_base","ActiveLineHistory","remoteNode_RemoteNode","rt","Fetch","Push","ArrowRight","Remote","setAsDefault","remotesNode_RemotesNode","stashFileNode_StashFileNode","stashFormat","stashDescriptionFormat","stashFileFormat","stashFileDescriptionFormat","stashNode_StashNode","stashesNode_StashesNode","statusFileNode_StatusFileNode","_hasStagedChanges","_hasUnstagedChanges","resourceUri","collapsibleState","StatusFileCommits","getChangedIn","statusFileDescriptionFormat","statusFileFormat","changedIn","statusFilesNode_StatusFilesNode","includeWorkingTree","older","toStatusFile","aheadFiles","uniques","stats","StatusFiles","previousRef","tagNode_TagNode","Tag","tagsNode_TagsNode","tagNodes","hasTimeRegex","repositoryNode_RepositoryNode","_lastFetched","_status","getLastFetched","lastFetchedTooltip","formatLastFetched","includeTime","workingStatus","triggerNodeChange","defaultDateShortFormat","repositoriesNode_RepositoriesNode","resetChildren","Repositories","onRepositoriesChanged","autoReveal","containsUri","getParent","reveal","resultsCommitsNode_ResultsCommitsNode","_commitsQuery","ResultsCommits","getCommitsQueryResults","getRepositoryCount","_commitsQueryResults","resultsFileNode_ResultsFileNode","ResultsFile","statusIcon","DiffWith","resultsFilesNode_ResultsFilesNode","_ref1","_ref2","getFilesQueryResults","ResultsFiles","_filesQueryResults","getFilesQueryResultsCore","compareResultsNode_CompareResultsNode","_pinned","pinned","getCommitsQuery","CompareResults","updatePinnedComparison","getPinnableId","currentId","comparePickerNode_ComparePickerNode","selectedRef","ComparePicker","getQualifiedCommand","ComparePickerWithRef","compareNode_CompareNode","_selectedRef","_comparePickerNode","getPinnedComparisons","focus","select","Compare","ViewsCanCompare","selectForCompare","getRefName","getRepoPathOrPrompt","autoCompare","compareWithSelected","searchNode_SearchNode","Search","findIndex","registrableCommands","common_command","getCommandUri","getRepoPathOrActiveOrPrompt","getRepoPathOrActive","isCommandViewContextWithBranch","isCommandViewContextWithCommit","isCommandViewContextWithRemote","isCommandViewContextWithRepo","isScmResourceGroup","handle","resourceStates","isScmResourceState","common_Command","contextParsingOptions","_execute","parseContext","preExecute","firstArg","edit","common_isTextEditor","states","scmResourceStates","scmResourceGroups","common_ActiveEditorCommand","lastCommand","ActiveEditorCachedCommand","rethrow","showTextDocument","Active","searchResultsCommitsNode_SearchResultsCommitsNode","commitsQuery","SearchResults","prefillOnly","SearchCommitsInView","viewBase_ViewBase","_onDidChangeTreeData","_onDidChangeVisibility","_onDidChangeNodeState","registerCommands","onDidChangeTreeData","container","_tree","createTreeView","treeDataProvider","onDidCollapseElement","onElementCollapsed","onDidExpandElement","onElementExpanded","getRoot","ensureRoot","isPageable","compareView_CompareView","ViewsCompareKeepResults","keepResults","viewCommands","setFilesLayout","setKeepResults","pinComparison","unpinComparison","swapComparison","showCollapseAll","views","dismiss","addResults","PinnedComparisons","pin","addOrReplace","updateEffective","unpin","fileHistoryView_FileHistoryView","changeBase","setEditorFollowing","setRenameFollowing","ViewsFileHistoryEditorFollowing","fileHistory","lineHistoryView_LineHistoryView","ViewsLineHistoryEditorFollowing","lineHistory","repositoriesView_RepositoriesView","_onDidChangeAutoRefresh","setAutoRefresh","ViewsRepositoriesAutoRefresh","workspaceEnabled","searchView_SearchView","ViewsSearchKeepResults","searchQueryFn","getSearchQueryFn","getSearchLabel","resultsType","singular","viewCommands_ViewCommands","dismissNode","viewSupportsNodeDismissal","closeRepository","unsetAsDefault","openInTerminal","exploreRepoRevision","openChanges","openChangesWithWorking","openFile","openFileRevision","openFileRevisionInRemote","openChangedFiles","openChangedFileChanges","openChangedFileChangesWithWorking","openChangedFileRevisions","applyChanges","stageDirectory","stageFile","unstageDirectory","unstageFile","compareAncestryWithWorking","compareWithHead","compareWithRemote","compareFileWithSelected","selectFileForCompare","compareWithWorking","terminalCheckoutBranch","terminalCreateBranch","terminalDeleteBranch","terminalMergeBranch","terminalRebaseBranch","terminalRebaseBranchToRemote","terminalSquashBranchIntoCommit","terminalCheckoutCommit","terminalCherryPickCommit","terminalPushCommit","terminalRebaseCommit","terminalResetCommit","terminalRevertCommit","terminalRemoveRemote","terminalCreateTag","terminalDeleteTag","compareView","commonAncestor","getMergeBase","_selectedFile","selected","ViewsCanCompareFile","diffArgs","openInNewWindow","OpenFolder","updateWorkspaceFolders","openWorkspace","FocusFilesExplorer","openDiffWith","OpenFileInRemote","OpenInTerminal","unStageDirectory","unStageFile","sendTerminalCommand","remoteBranch","showInputBox","prompt","_terminal","createTerminal","onDidCloseTerminal","_terminalCwd","sendText","terminal","ensureTerminal","webviewEditor_WebviewEditor","_disposablePanel","postUpdatedConfiguration","_panel","webviewPanel","Workspace","inspect","defaultValue","removes","html","getHtml","createWebviewPanel","retainContextWhenHidden","enableFindWidget","enableCommandUris","enableScripts","onDidDispose","onPanelDisposed","onDidChangeViewState","onViewStateChanged","webview","onDidReceiveMessage","onMessageReceived","content","filename","_html","getBootstrap","postMessage","settingsEditor_SettingsEditor","getAvailableScopes","ShowSettingsPage","welcomeEditor_WelcomeEditor","_context","_config","applyMode","_lineTracker","_vsls","_fileAnnotationController","_lineAnnotationController","_lineHoverController","_statusBarController","_codeLensController","_keyboard","_settingsEditor","_welcomeEditor","_compareView","_fileHistoryView","_lineHistoryView","_repositoriesView","_searchView","lineHistoryView","lineHovers","repositoriesView","settingsEditor","_viewCommands","welcomeEditor","ToggleFileHeatmap","ToggleFileRecentChanges","emptyConfig","Proxy","propKey","receiver","configuration_Configuration","affectsConfiguration","_configAffectedByMode","onDidChangeConfiguration","resetConfig","inspection","migrated","globalValue","migrationFn","workspaceValue","workspaceFolderValue","WorkspaceFolder","fallbackValue","fromInspection","toInspection","annotations_ClearFileAnnotationsCommand","ClearFileAnnotationsCommand","common_EditorCommand","registerTextEditorCommand","executeCore","ClearFileAnnotations","ComputingFileAnnotations","annotations_ToggleFileBlameCommand","ToggleFileBlameCommand","toggle","annotations_ToggleFileHeatmapCommand","ToggleFileHeatmapCommand","annotations_ToggleFileRecentChangesCommand","ToggleFileRecentChangesCommand","annotations_ToggleLineBlameCommand","ToggleLineBlameCommand","ToggleLineBlame","closeUnchangedFiles_CloseUnchangedFilesCommand","CloseUnchangedFilesCommand","CloseUnchangedFiles","CloseAllEditors","_onEditorChangedFn","loopCount","found","nextEditor","closeEditor","CloseActiveEditor","waitForEditorChange","NextEditor","copyMessageToClipboard_CopyMessageToClipboardCommand","CopyMessageToClipboardCommand","CopyMessageToClipboard","blameline","getLogCommit","copyRemoteFileUrlToClipboard_CopyRemoteFileUrlToClipboardCommand","CopyRemoteFileUrlToClipboardCommand","CopyRemoteFileUrlToClipboard","copyShaToClipboard_CopyShaToClipboardCommand","CopyShaToClipboardCommand","CopyShaToClipboard","diffBranchWithBranch_DiffBranchWithBranchCommand","DiffBranchWithBranchCommand","DiffHeadWithBranch","DiffWorkingWithBranch","diffDirectory_DiffDirectoryCommand","DiffDirectoryCommand","DiffDirectory","DiffDirectoryWithHead","ViewsOpenDirectoryDiff","ViewsOpenDirectoryDiffWithWorking","isCommandViewContextWithRef","openDirectoryDiff","diffLineWithPrevious_DiffLineWithPreviousCommand","DiffLineWithPreviousCommand","showFileNotUnderSourceControlWarningMessage","diffLineWithWorking_DiffLineWithWorkingCommand","DiffLineWithWorkingCommand","DiffWithCommand","argsOrCommit1","commit2","commit1","getMarkdownCommandArgsCore","lhsSha","rhsSha","getFileStatusForCommit","getVersionedUri","rhsSuffix","lhsSuffix","Diff","diffWithBranch_DiffWithBranchCommand","DiffWithBranchCommand","DiffWithBranch","showNoRepositoryWarningMessage","renamedUri","renamedTitle","rename","diffWithNext_DiffWithNextCommand","DiffWithNextCommand","DiffWithNext","diffWithPrevious_DiffWithPreviousCommand","DiffWithPreviousCommand","DiffWithPreviousInDiff","inDiffEditor","showCommitHasNoPreviousCommitWarningMessage","originalSha","diffWithRevision_DiffWithRevisionCommand","DiffWithRevisionCommand","DiffWithRevision","branchOrTag","showProgress","diffWithWorking_DiffWithWorkingCommand","DiffWithWorkingCommand","Status","ResourceGroupType","externalDiff_ExternalDiffCommand","ExternalDiffCommand","ExternalDiff","ExternalDiffAll","isCommandViewContextWithFileCommit","isCommandViewContextWithFileRefs","resourceGroupType","Index","isModified","BOTH_MODIFIED","INDEX_MODIFIED","MODIFIED","openDiffTool","openBranchesInRemote_OpenBranchesInRemoteCommand","OpenBranchesInRemoteCommand","OpenBranchesInRemote","openBranchInRemote_OpenBranchInRemoteCommand","OpenBranchInRemoteCommand","OpenBranchInRemote","openChangedFiles_OpenChangedFilesCommand","OpenChangedFilesCommand","OpenCommitInRemoteCommand","OpenCommitInRemote","argsOrSha","openFileInRemote_OpenFileInRemoteCommand","OpenFileInRemoteCommand","OpenFileRevisionCommand","OpenFileRevision","argsOrUri","openInRemote_OpenInRemoteCommand","OpenInRemoteCommand","ensureRemoteBranchName","verb","shaSuffix","remotesQuickPick_RemotesQuickPick","remoteName","openRepoInRemote_OpenRepoInRemoteCommand","OpenRepoInRemoteCommand","OpenRepoInRemote","openWorkingFile_OpenWorkingFileCommand","OpenWorkingFileCommand","OpenWorkingFile","repositories_FetchRepositoriesCommand","FetchRepositoriesCommand","FetchRepositories","fetchAll","repositories_PullRepositoriesCommand","PullRepositoriesCommand","PullRepositories","pullAll","repositories_PushRepositoriesCommand","PushRepositoriesCommand","PushRepositories","pushAll","resetSuppressedWarnings_ResetSuppressedWarningsCommand","ResetSuppressedWarningsCommand","ResetSuppressedWarnings","searchByRegex","symbolToSearchByMap","searchByToSymbolMap","searchCommits_SearchCommitsCommand","SearchCommitsCommand","SearchCommits","showInView","originalArgs","_lastSearch","valueSelection","searchLabel","showLastQuickPick_ShowLastQuickPickCommand","ShowLastQuickPickCommand","ShowLastQuickPick","showQuickBranchHistory_ShowQuickBranchHistoryCommand","ShowQuickBranchHistoryCommand","repoLog","ShowQuickCommitDetailsCommand","ShowCommitInView","showLineUncommittedWarningMessage","showCommitNotFoundWarningMessage","commitQuickPick_CommitQuickPick","resolvePreviousFileSha","StashApply","confirm","stashItem","StashDelete","previousCommand","nextCommand","nextLog","onDidSelectItem","setKeyCommand","onDidSelect","ShowQuickCommitFileDetailsCommand","ShowQuickRevisionDetails","fileLog","commitFileQuickPick_CommitFileQuickPick","workingName","findNextCommit","ArrowRightHollow","showQuickCurrentBranchHistory_ShowQuickCurrentBranchHistoryCommand","ShowQuickCurrentBranchHistoryCommand","showQuickFileHistory_ShowQuickFileHistoryCommand","ShowQuickFileHistoryCommand","ShowFileHistoryInView","showQuickRepoStatus_ShowQuickRepoStatusCommand","ShowQuickRepoStatusCommand","ShowQuickRepoStatus","repoStatusQuickPick_RepoStatusQuickPick","stagedAdds","unstagedAdds","stagedChanges","unstagedChanges","stagedDeletes","unstagedDeletes","stagedAddsAndChanges","unstagedAddsAndChanges","unstaged","stagedStatus","unstagedStatus","computed","computeStatus","unstagedIndex","ShowQuickStashList","showQuickStashList_ShowQuickStashListCommand","ShowQuickStashListCommand","showView_ShowViewCommand","ShowViewCommand","ShowCompareView","ShowFileHistoryView","ShowLineHistoryView","ShowRepositoriesView","ShowSearchView","stashApply_StashApplyCommand","StashApplyCommand","stashApply","stashDelete_StashDeleteCommand","StashDeleteCommand","stashDelete","stashSave_StashSaveCommand","StashSaveCommand","StashSaveFiles","isCommandViewContextWithFile","isCommandViewContextWithRepoPath","stashSave","supportGitLens_SupportGitLensCommand","SupportGitLensCommand","SupportGitLens","showSupportGitLensMessage","switchMode_SwitchModeCommand","SwitchModeCommand","modesQuickPick_ModesQuickPick","modeCfg","activeAnnotations","switchMode_ToggleReviewModeCommand","ToggleReviewModeCommand","ToggleReviewMode","switchMode_ToggleZenModeCommand","ToggleZenModeCommand","ToggleZenMode","toggleCodeLens_ToggleCodeLensCommand","ToggleCodeLensCommand","toggleCodeLens","configure","gitlensVersion","packageJSON","showGitDisabledErrorMessage","previousVersion","globalState","GitLensVersion","migrate","explorers","migrateSettings","compareGitVersion","showGitVersionUnsupportedErrorMessage","notifyOnUnsupportedGitVersion","showWhatsNewAfterUpgrades","prevMajor","prevMinor","showWhatsNewMessage","showWelcomePage","deactivate","__webpack_exports__"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 192);\n","module.exports = require(\"vscode\");","module.exports = require(\"path\");","var getTimezoneOffsetInMilliseconds = require('../_lib/getTimezoneOffsetInMilliseconds/index.js')\nvar isDate = require('../is_date/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\n\nvar parseTokenDateTimeDelimeter = /[T ]/\nvar parseTokenPlainTime = /:/\n\n// year tokens\nvar parseTokenYY = /^(\\d{2})$/\nvar parseTokensYYY = [\n  /^([+-]\\d{2})$/, // 0 additional digits\n  /^([+-]\\d{3})$/, // 1 additional digit\n  /^([+-]\\d{4})$/ // 2 additional digits\n]\n\nvar parseTokenYYYY = /^(\\d{4})/\nvar parseTokensYYYYY = [\n  /^([+-]\\d{4})/, // 0 additional digits\n  /^([+-]\\d{5})/, // 1 additional digit\n  /^([+-]\\d{6})/ // 2 additional digits\n]\n\n// date tokens\nvar parseTokenMM = /^-(\\d{2})$/\nvar parseTokenDDD = /^-?(\\d{3})$/\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/\nvar parseTokenWww = /^-?W(\\d{2})$/\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/\n\n// time tokens\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\n\n// timezone tokens\nvar parseTokenTimezone = /([Z+-].*)$/\nvar parseTokenTimezoneZ = /^(Z)$/\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/\n\n/**\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If all above fails, the function passes the given argument to Date constructor.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Object} [options] - the object with options\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parse('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Parse string '+02014101',\n * // if the additional number of digits in the extended year format is 1:\n * var result = parse('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction parse (argument, dirtyOptions) {\n  if (isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (typeof argument !== 'string') {\n    return new Date(argument)\n  }\n\n  var options = dirtyOptions || {}\n  var additionalDigits = options.additionalDigits\n  if (additionalDigits == null) {\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS\n  } else {\n    additionalDigits = Number(additionalDigits)\n  }\n\n  var dateStrings = splitDateString(argument)\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n\n  var date = parseDate(restDateString, year)\n\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time)\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone) * MILLISECONDS_IN_MINUTE\n    } else {\n      var fullTime = timestamp + time\n      var fullTimeDate = new Date(fullTime)\n\n      offset = getTimezoneOffsetInMilliseconds(fullTimeDate)\n\n      // Adjust time when it's coming from DST\n      var fullTimeDateNextDay = new Date(fullTime)\n      fullTimeDateNextDay.setDate(fullTimeDate.getDate() + 1)\n      var offsetDiff =\n        getTimezoneOffsetInMilliseconds(fullTimeDateNextDay) -\n        getTimezoneOffsetInMilliseconds(fullTimeDate)\n      if (offsetDiff > 0) {\n        offset += offsetDiff\n      }\n    }\n\n    return new Date(timestamp + time + offset)\n  } else {\n    return new Date(argument)\n  }\n}\n\nfunction splitDateString (dateString) {\n  var dateStrings = {}\n  var array = dateString.split(parseTokenDateTimeDelimeter)\n  var timeString\n\n  if (parseTokenPlainTime.test(array[0])) {\n    dateStrings.date = null\n    timeString = array[0]\n  } else {\n    dateStrings.date = array[0]\n    timeString = array[1]\n  }\n\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString)\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '')\n      dateStrings.timezone = token[1]\n    } else {\n      dateStrings.time = timeString\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear (dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits]\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]\n\n  var token\n\n  // YYYY or ±YYYYY\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    }\n  }\n\n  // YY or ±YYY\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null\n  }\n}\n\nfunction parseDate (dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token\n  var date\n  var month\n  var week\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n\n  // YYYY-MM\n  token = parseTokenMM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    date.setUTCFullYear(year, month)\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = parseTokenDDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n\n  // YYYY-MM-DD or YYYYMMDD\n  token = parseTokenMMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = parseTokenWww.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    return dayOfISOYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = parseTokenWwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n    return dayOfISOYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime (timeString) {\n  var token\n  var hours\n  var minutes\n\n  // hh\n  token = parseTokenHH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = parseTokenHHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE\n  }\n\n  // hh:mm:ss or hhmmss\n  token = parseTokenHHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE +\n      seconds * 1000\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction parseTimezone (timezoneString) {\n  var token\n  var absoluteOffset\n\n  // Z\n  token = parseTokenTimezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n\n  // ±hh\n  token = parseTokenTimezoneHH.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  // ±hh:mm or ±hhmm\n  token = parseTokenTimezoneHHMM.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  return 0\n}\n\nfunction dayOfISOYear (isoYear, week, day) {\n  week = week || 0\n  day = day || 0\n  var date = new Date(0)\n  date.setUTCFullYear(isoYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n\nmodule.exports = parse\n","module.exports = require(\"fs\");","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nfunction getISOYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear)\n\n  var fourthOfJanuaryOfThisYear = new Date(0)\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4)\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0)\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear)\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year\n  } else {\n    return year - 1\n  }\n}\n\nmodule.exports = getISOYear\n","var startOfWeek = require('../start_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfISOWeek (dirtyDate) {\n  return startOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = startOfISOWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfDay\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added\n * @returns {Date} the new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nfunction addDays (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  date.setDate(date.getDate() + amount)\n  return date\n}\n\nmodule.exports = addDays\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nfunction addMilliseconds (dirtyDate, dirtyAmount) {\n  var timestamp = parse(dirtyDate).getTime()\n  var amount = Number(dirtyAmount)\n  return new Date(timestamp + amount)\n}\n\nmodule.exports = addMilliseconds\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  return date\n}\n\nmodule.exports = startOfISOYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * )\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nfunction compareAsc (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var timeLeft = dateLeft.getTime()\n  var dateRight = parse(dirtyDateRight)\n  var timeRight = dateRight.getTime()\n\n  if (timeLeft < timeRight) {\n    return -1\n  } else if (timeLeft > timeRight) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nmodule.exports = compareAsc\n","module.exports = require(\"buffer\");","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary English locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn\n\n  date.setDate(date.getDate() - diff)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfWeek\n","var startOfDay = require('../start_of_day/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_DAY = 86400000\n\n/**\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n */\nfunction differenceInCalendarDays (dirtyDateLeft, dirtyDateRight) {\n  var startOfDayLeft = startOfDay(dirtyDateLeft)\n  var startOfDayRight = startOfDay(dirtyDateRight)\n\n  var timestampLeft = startOfDayLeft.getTime() -\n    startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfDayRight.getTime() -\n    startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = differenceInCalendarDays\n","var parse = require('../parse/index.js')\nvar getDaysInMonth = require('../get_days_in_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added\n * @returns {Date} the new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nfunction addMonths (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  var desiredMonth = date.getMonth() + amount\n  var dateWithDesiredMonth = new Date(0)\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1)\n  dateWithDesiredMonth.setHours(0, 0, 0, 0)\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()))\n  return date\n}\n\nmodule.exports = addMonths\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nfunction differenceInMilliseconds (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getTime() - dateRight.getTime()\n}\n\nmodule.exports = differenceInMilliseconds\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","//\n//  Copyright (c) Microsoft Corporation. All rights reserved.\n//\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Entrypoint and type definitions for Live Share for VS Code extension API\n */\nconst path = require(\"path\");\nconst vscode = require(\"vscode\");\n/**\n * Extension ID of the Live Share extension for VS Code.\n */\nexports.extensionId = 'ms-vsliveshare.vsliveshare';\n/**\n * Entrypoint for access to the Live Share API.\n *\n * @returns an instance of the Live Share API, or `null` if the Live Share extension\n * is not installed or failed to activate.\n *\n * @example To access the Live Share API from another extension:\n *\n *     import * as vsls from 'vsls/vscode';\n *     const liveshare = await vsls.getApi();\n */\nasync function getApi() {\n    const liveshareExtension = vscode.extensions.getExtension(exports.extensionId);\n    if (!liveshareExtension) {\n        // The extension is not installed.\n        return null;\n    }\n    const extensionApi = liveshareExtension.isActive ?\n        liveshareExtension.exports : await liveshareExtension.activate();\n    if (!extensionApi) {\n        // The extensibility API is not enabled.\n        return null;\n    }\n    const liveShareApiVersion = '0.3.967'; // require(path.join(__dirname, 'package.json')).version;\n    // Support deprecated function name to preserve compatibility with older versions of VSLS.\n    if (!extensionApi.getApi)\n        return extensionApi.getApiAsync(liveShareApiVersion);\n    return extensionApi.getApi(liveShareApiVersion);\n}\nexports.getApi = getApi;\n/** @deprecated */\nfunction getApiAsync() { return getApi(); }\nexports.getApiAsync = getApiAsync;\nvar Role;\n(function (Role) {\n    Role[Role[\"None\"] = 0] = \"None\";\n    Role[Role[\"Host\"] = 1] = \"Host\";\n    Role[Role[\"Guest\"] = 2] = \"Guest\";\n})(Role = exports.Role || (exports.Role = {}));\n/** This is just a placeholder for a richer access control model to be added later. */\nvar Access;\n(function (Access) {\n    Access[Access[\"None\"] = 0] = \"None\";\n    Access[Access[\"ReadOnly\"] = 1] = \"ReadOnly\";\n    Access[Access[\"ReadWrite\"] = 3] = \"ReadWrite\";\n    Access[Access[\"Owner\"] = 255] = \"Owner\";\n})(Access = exports.Access || (exports.Access = {}));\n/**\n * Identifiers for Live Share tree views. These identifiers may be used by other extensions\n * to extend Live Share tree views with additional nodes via the `registerTreeDataProvider()`\n * API.\n */\nvar View;\n(function (View) {\n    View[\"Session\"] = \"liveshare.session\";\n    View[\"ExplorerSession\"] = \"liveshare.session.explorer\";\n    View[\"Contacts\"] = \"liveshare.contacts\";\n    View[\"Feedback\"] = \"liveshare.feedback\";\n})(View = exports.View || (exports.View = {}));\n/**\n * Identifiers for Live Share tree view items. These identifiers may be used by other\n * extensions to extend Live Share tree items with additional commands using conditional\n * expressions in the `view/item/context` section of their own package.json.\n */\nvar ViewItem;\n(function (ViewItem) {\n    // session item groups\n    ViewItem[\"Participants\"] = \"participants\";\n    ViewItem[\"Servers\"] = \"servers\";\n    ViewItem[\"Terminals\"] = \"terminals\";\n    // participants\n    ViewItem[\"CurrentUser\"] = \"participants.currentuser\";\n    ViewItem[\"Guest\"] = \"participants.guest\";\n    ViewItem[\"FollowedGuest\"] = \"participants.guest.followed\";\n    ViewItem[\"Participant\"] = \"participants.participant\";\n    ViewItem[\"FollowedParticipant\"] = \"participants.participant.followed\";\n    // servers\n    ViewItem[\"LocalServer\"] = \"servers.local\";\n    ViewItem[\"RemoteServer\"] = \"servers.remote\";\n    // terminals\n    ViewItem[\"LocalTerminalReadOnly\"] = \"terminals.local.readonly\";\n    ViewItem[\"LocalTerminalReadWrite\"] = \"terminals.local.readwrite\";\n    ViewItem[\"RemoteTerminal\"] = \"terminals.remote\";\n    // contacts\n    ViewItem[\"SuggestedContacts\"] = \"contacts.suggested\";\n    ViewItem[\"AvailableContacts\"] = \"contacts.available\";\n    ViewItem[\"ContactsProvider\"] = \"contacts.provider\";\n    ViewItem[\"ContactsStatus\"] = \"contacts.status\";\n    ViewItem[\"Contact\"] = \"contacts.contact\";\n    // feedback\n    ViewItem[\"SessionFeedbackQuestion\"] = \"feedback.sessionFeedback\";\n    ViewItem[\"ReportAProblem\"] = \"feedback.reportAProblem\";\n    ViewItem[\"TweetUsYourFeedback\"] = \"feedback.tweetUsYourFeedback\";\n    ViewItem[\"Survey\"] = \"feedback.survey\";\n    ViewItem[\"GoodFeedback\"] = \"feedback.goodFeedback\";\n    ViewItem[\"BadFeedback\"] = \"feedback.badFeedback\";\n    ViewItem[\"DontAskAgain\"] = \"feedback.dontAskAgain\";\n    ViewItem[\"Thankyou\"] = \"feedback.thankyou\";\n    // Shown while session sharing / joining is in progress\n    ViewItem[\"Loading\"] = \"loading\";\n    // Other / unspecified item type\n    ViewItem[\"Other\"] = \"other\";\n})(ViewItem = exports.ViewItem || (exports.ViewItem = {}));\n\n//# sourceMappingURL=liveShare.js.map\n","/**\n * @category Common Helpers\n * @summary Is the given argument an instance of Date?\n *\n * @description\n * Is the given argument an instance of Date?\n *\n * @param {*} argument - the argument to check\n * @returns {Boolean} the given argument is an instance of Date\n *\n * @example\n * // Is 'mayonnaise' a Date?\n * var result = isDate('mayonnaise')\n * //=> false\n */\nfunction isDate (argument) {\n  return argument instanceof Date\n}\n\nmodule.exports = isDate\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nfunction getDaysInMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  var monthIndex = date.getMonth()\n  var lastDayOfMonth = new Date(0)\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0)\n  lastDayOfMonth.setHours(0, 0, 0, 0)\n  return lastDayOfMonth.getDate()\n}\n\nmodule.exports = getDaysInMonth\n","var addDays = require('../add_days/index.js')\n\n/**\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added\n * @returns {Date} the new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * var result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nfunction addWeeks (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  var days = amount * 7\n  return addDays(dirtyDate, days)\n}\n\nmodule.exports = addWeeks\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * var result = compareDesc(\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * )\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\nfunction compareDesc (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var timeLeft = dateLeft.getTime()\n  var dateRight = parse(dirtyDateRight)\n  var timeRight = dateRight.getTime()\n\n  if (timeLeft > timeRight) {\n    return -1\n  } else if (timeLeft < timeRight) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nmodule.exports = compareDesc\n","var parse = require('../parse/index.js')\nvar differenceInCalendarMonths = require('../difference_in_calendar_months/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 7\n */\nfunction differenceInMonths (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight))\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference)\n\n  // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastMonthNotFull)\n}\n\nmodule.exports = differenceInMonths\n","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\n\n/**\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nfunction differenceInSeconds (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInSeconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nfunction endOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfDay\n","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\nvar startOfISOYear = require('../start_of_iso_year/index.js')\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nfunction getISOWeek (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime()\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\n}\n\nmodule.exports = getISOWeek\n","var startOfWeek = require('../start_of_week/index.js')\n\n/**\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(\n *   new Date(2014, 7, 31),\n *   new Date(2014, 8, 4)\n * )\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(\n *   new Date(2014, 7, 31),\n *   new Date(2014, 8, 4),\n *   {weekStartsOn: 1}\n * )\n * //=> false\n */\nfunction isSameWeek (dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions)\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions)\n\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime()\n}\n\nmodule.exports = isSameWeek\n","module.exports = require(\"stream\");","module.exports = {\n  addDays: require('./add_days/index.js'),\n  addHours: require('./add_hours/index.js'),\n  addISOYears: require('./add_iso_years/index.js'),\n  addMilliseconds: require('./add_milliseconds/index.js'),\n  addMinutes: require('./add_minutes/index.js'),\n  addMonths: require('./add_months/index.js'),\n  addQuarters: require('./add_quarters/index.js'),\n  addSeconds: require('./add_seconds/index.js'),\n  addWeeks: require('./add_weeks/index.js'),\n  addYears: require('./add_years/index.js'),\n  areRangesOverlapping: require('./are_ranges_overlapping/index.js'),\n  closestIndexTo: require('./closest_index_to/index.js'),\n  closestTo: require('./closest_to/index.js'),\n  compareAsc: require('./compare_asc/index.js'),\n  compareDesc: require('./compare_desc/index.js'),\n  differenceInCalendarDays: require('./difference_in_calendar_days/index.js'),\n  differenceInCalendarISOWeeks: require('./difference_in_calendar_iso_weeks/index.js'),\n  differenceInCalendarISOYears: require('./difference_in_calendar_iso_years/index.js'),\n  differenceInCalendarMonths: require('./difference_in_calendar_months/index.js'),\n  differenceInCalendarQuarters: require('./difference_in_calendar_quarters/index.js'),\n  differenceInCalendarWeeks: require('./difference_in_calendar_weeks/index.js'),\n  differenceInCalendarYears: require('./difference_in_calendar_years/index.js'),\n  differenceInDays: require('./difference_in_days/index.js'),\n  differenceInHours: require('./difference_in_hours/index.js'),\n  differenceInISOYears: require('./difference_in_iso_years/index.js'),\n  differenceInMilliseconds: require('./difference_in_milliseconds/index.js'),\n  differenceInMinutes: require('./difference_in_minutes/index.js'),\n  differenceInMonths: require('./difference_in_months/index.js'),\n  differenceInQuarters: require('./difference_in_quarters/index.js'),\n  differenceInSeconds: require('./difference_in_seconds/index.js'),\n  differenceInWeeks: require('./difference_in_weeks/index.js'),\n  differenceInYears: require('./difference_in_years/index.js'),\n  distanceInWords: require('./distance_in_words/index.js'),\n  distanceInWordsStrict: require('./distance_in_words_strict/index.js'),\n  distanceInWordsToNow: require('./distance_in_words_to_now/index.js'),\n  eachDay: require('./each_day/index.js'),\n  endOfDay: require('./end_of_day/index.js'),\n  endOfHour: require('./end_of_hour/index.js'),\n  endOfISOWeek: require('./end_of_iso_week/index.js'),\n  endOfISOYear: require('./end_of_iso_year/index.js'),\n  endOfMinute: require('./end_of_minute/index.js'),\n  endOfMonth: require('./end_of_month/index.js'),\n  endOfQuarter: require('./end_of_quarter/index.js'),\n  endOfSecond: require('./end_of_second/index.js'),\n  endOfToday: require('./end_of_today/index.js'),\n  endOfTomorrow: require('./end_of_tomorrow/index.js'),\n  endOfWeek: require('./end_of_week/index.js'),\n  endOfYear: require('./end_of_year/index.js'),\n  endOfYesterday: require('./end_of_yesterday/index.js'),\n  format: require('./format/index.js'),\n  getDate: require('./get_date/index.js'),\n  getDay: require('./get_day/index.js'),\n  getDayOfYear: require('./get_day_of_year/index.js'),\n  getDaysInMonth: require('./get_days_in_month/index.js'),\n  getDaysInYear: require('./get_days_in_year/index.js'),\n  getHours: require('./get_hours/index.js'),\n  getISODay: require('./get_iso_day/index.js'),\n  getISOWeek: require('./get_iso_week/index.js'),\n  getISOWeeksInYear: require('./get_iso_weeks_in_year/index.js'),\n  getISOYear: require('./get_iso_year/index.js'),\n  getMilliseconds: require('./get_milliseconds/index.js'),\n  getMinutes: require('./get_minutes/index.js'),\n  getMonth: require('./get_month/index.js'),\n  getOverlappingDaysInRanges: require('./get_overlapping_days_in_ranges/index.js'),\n  getQuarter: require('./get_quarter/index.js'),\n  getSeconds: require('./get_seconds/index.js'),\n  getTime: require('./get_time/index.js'),\n  getYear: require('./get_year/index.js'),\n  isAfter: require('./is_after/index.js'),\n  isBefore: require('./is_before/index.js'),\n  isDate: require('./is_date/index.js'),\n  isEqual: require('./is_equal/index.js'),\n  isFirstDayOfMonth: require('./is_first_day_of_month/index.js'),\n  isFriday: require('./is_friday/index.js'),\n  isFuture: require('./is_future/index.js'),\n  isLastDayOfMonth: require('./is_last_day_of_month/index.js'),\n  isLeapYear: require('./is_leap_year/index.js'),\n  isMonday: require('./is_monday/index.js'),\n  isPast: require('./is_past/index.js'),\n  isSameDay: require('./is_same_day/index.js'),\n  isSameHour: require('./is_same_hour/index.js'),\n  isSameISOWeek: require('./is_same_iso_week/index.js'),\n  isSameISOYear: require('./is_same_iso_year/index.js'),\n  isSameMinute: require('./is_same_minute/index.js'),\n  isSameMonth: require('./is_same_month/index.js'),\n  isSameQuarter: require('./is_same_quarter/index.js'),\n  isSameSecond: require('./is_same_second/index.js'),\n  isSameWeek: require('./is_same_week/index.js'),\n  isSameYear: require('./is_same_year/index.js'),\n  isSaturday: require('./is_saturday/index.js'),\n  isSunday: require('./is_sunday/index.js'),\n  isThisHour: require('./is_this_hour/index.js'),\n  isThisISOWeek: require('./is_this_iso_week/index.js'),\n  isThisISOYear: require('./is_this_iso_year/index.js'),\n  isThisMinute: require('./is_this_minute/index.js'),\n  isThisMonth: require('./is_this_month/index.js'),\n  isThisQuarter: require('./is_this_quarter/index.js'),\n  isThisSecond: require('./is_this_second/index.js'),\n  isThisWeek: require('./is_this_week/index.js'),\n  isThisYear: require('./is_this_year/index.js'),\n  isThursday: require('./is_thursday/index.js'),\n  isToday: require('./is_today/index.js'),\n  isTomorrow: require('./is_tomorrow/index.js'),\n  isTuesday: require('./is_tuesday/index.js'),\n  isValid: require('./is_valid/index.js'),\n  isWednesday: require('./is_wednesday/index.js'),\n  isWeekend: require('./is_weekend/index.js'),\n  isWithinRange: require('./is_within_range/index.js'),\n  isYesterday: require('./is_yesterday/index.js'),\n  lastDayOfISOWeek: require('./last_day_of_iso_week/index.js'),\n  lastDayOfISOYear: require('./last_day_of_iso_year/index.js'),\n  lastDayOfMonth: require('./last_day_of_month/index.js'),\n  lastDayOfQuarter: require('./last_day_of_quarter/index.js'),\n  lastDayOfWeek: require('./last_day_of_week/index.js'),\n  lastDayOfYear: require('./last_day_of_year/index.js'),\n  max: require('./max/index.js'),\n  min: require('./min/index.js'),\n  parse: require('./parse/index.js'),\n  setDate: require('./set_date/index.js'),\n  setDay: require('./set_day/index.js'),\n  setDayOfYear: require('./set_day_of_year/index.js'),\n  setHours: require('./set_hours/index.js'),\n  setISODay: require('./set_iso_day/index.js'),\n  setISOWeek: require('./set_iso_week/index.js'),\n  setISOYear: require('./set_iso_year/index.js'),\n  setMilliseconds: require('./set_milliseconds/index.js'),\n  setMinutes: require('./set_minutes/index.js'),\n  setMonth: require('./set_month/index.js'),\n  setQuarter: require('./set_quarter/index.js'),\n  setSeconds: require('./set_seconds/index.js'),\n  setYear: require('./set_year/index.js'),\n  startOfDay: require('./start_of_day/index.js'),\n  startOfHour: require('./start_of_hour/index.js'),\n  startOfISOWeek: require('./start_of_iso_week/index.js'),\n  startOfISOYear: require('./start_of_iso_year/index.js'),\n  startOfMinute: require('./start_of_minute/index.js'),\n  startOfMonth: require('./start_of_month/index.js'),\n  startOfQuarter: require('./start_of_quarter/index.js'),\n  startOfSecond: require('./start_of_second/index.js'),\n  startOfToday: require('./start_of_today/index.js'),\n  startOfTomorrow: require('./start_of_tomorrow/index.js'),\n  startOfWeek: require('./start_of_week/index.js'),\n  startOfYear: require('./start_of_year/index.js'),\n  startOfYesterday: require('./start_of_yesterday/index.js'),\n  subDays: require('./sub_days/index.js'),\n  subHours: require('./sub_hours/index.js'),\n  subISOYears: require('./sub_iso_years/index.js'),\n  subMilliseconds: require('./sub_milliseconds/index.js'),\n  subMinutes: require('./sub_minutes/index.js'),\n  subMonths: require('./sub_months/index.js'),\n  subQuarters: require('./sub_quarters/index.js'),\n  subSeconds: require('./sub_seconds/index.js'),\n  subWeeks: require('./sub_weeks/index.js'),\n  subYears: require('./sub_years/index.js')\n}\n","module.exports = require(\"crypto\");","var addMilliseconds = require('../add_milliseconds/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\n\n/**\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added\n * @returns {Date} the new date with the hours added\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\nfunction addHours (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR)\n}\n\nmodule.exports = addHours\n","var getISOYear = require('../get_iso_year/index.js')\nvar setISOYear = require('../set_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added\n * @returns {Date} the new date with the ISO week-numbering years added\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * var result = addISOYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\nfunction addISOYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return setISOYear(dirtyDate, getISOYear(dirtyDate) + amount)\n}\n\nmodule.exports = addISOYears\n","var parse = require('../parse/index.js')\nvar startOfISOYear = require('../start_of_iso_year/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} isoYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year setted\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * var result = setISOYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\nfunction setISOYear (dirtyDate, dirtyISOYear) {\n  var date = parse(dirtyDate)\n  var isoYear = Number(dirtyISOYear)\n  var diff = differenceInCalendarDays(date, startOfISOYear(date))\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(isoYear, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  date = startOfISOYear(fourthOfJanuary)\n  date.setDate(date.getDate() + diff)\n  return date\n}\n\nmodule.exports = setISOYear\n","var addMilliseconds = require('../add_milliseconds/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added\n * @returns {Date} the new date with the minutes added\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\nfunction addMinutes (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE)\n}\n\nmodule.exports = addMinutes\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added\n * @returns {Date} the new date with the quarters added\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * var result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\nfunction addQuarters (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  var months = amount * 3\n  return addMonths(dirtyDate, months)\n}\n\nmodule.exports = addQuarters\n","var addMilliseconds = require('../add_milliseconds/index.js')\n\n/**\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added\n * @returns {Date} the new date with the seconds added\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\nfunction addSeconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * 1000)\n}\n\nmodule.exports = addSeconds\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added\n * @returns {Date} the new date with the years added\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nfunction addYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMonths(dirtyDate, amount * 12)\n}\n\nmodule.exports = addYears\n","var getISOYear = require('../get_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * var result = differenceInCalendarISOYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\nfunction differenceInCalendarISOYears (dirtyDateLeft, dirtyDateRight) {\n  return getISOYear(dirtyDateLeft) - getISOYear(dirtyDateRight)\n}\n\nmodule.exports = differenceInCalendarISOYears\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nfunction differenceInCalendarMonths (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear()\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth()\n\n  return yearDiff * 12 + monthDiff\n}\n\nmodule.exports = differenceInCalendarMonths\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the quarter\n *\n * @example\n * // Which quarter is 2 July 2014?\n * var result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\nfunction getQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var quarter = Math.floor(date.getMonth() / 3) + 1\n  return quarter\n}\n\nmodule.exports = getQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nfunction differenceInCalendarYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  return dateLeft.getFullYear() - dateRight.getFullYear()\n}\n\nmodule.exports = differenceInCalendarYears\n","var parse = require('../parse/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full days\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n */\nfunction differenceInDays (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight))\n  dateLeft.setDate(dateLeft.getDate() - sign * difference)\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastDayNotFull)\n}\n\nmodule.exports = differenceInDays\n","var addISOYears = require('../add_iso_years/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * var result = subISOYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\nfunction subISOYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addISOYears(dirtyDate, -amount)\n}\n\nmodule.exports = subISOYears\n","var compareDesc = require('../compare_desc/index.js')\nvar parse = require('../parse/index.js')\nvar differenceInSeconds = require('../difference_in_seconds/index.js')\nvar differenceInMonths = require('../difference_in_months/index.js')\nvar enLocale = require('../locale/en/index.js')\n\nvar MINUTES_IN_DAY = 1440\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520\nvar MINUTES_IN_MONTH = 43200\nvar MINUTES_IN_TWO_MONTHS = 86400\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date|String|Number} date - the other date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = distanceInWords(\n *   new Date(2014, 6, 2),\n *   new Date(2015, 0, 1)\n * )\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = distanceInWords(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = distanceInWords(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWords(\n *   new Date(2016, 7, 1),\n *   new Date(2015, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nfunction distanceInWords (dirtyDateToCompare, dirtyDate, dirtyOptions) {\n  var options = dirtyOptions || {}\n\n  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)\n\n  var locale = options.locale\n  var localize = enLocale.distanceInWords.localize\n  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {\n    localize = locale.distanceInWords.localize\n  }\n\n  var localizeOptions = {\n    addSuffix: Boolean(options.addSuffix),\n    comparison: comparison\n  }\n\n  var dateLeft, dateRight\n  if (comparison > 0) {\n    dateLeft = parse(dirtyDateToCompare)\n    dateRight = parse(dirtyDate)\n  } else {\n    dateLeft = parse(dirtyDate)\n    dateRight = parse(dirtyDateToCompare)\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft)\n  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()\n  var minutes = Math.round(seconds / 60) - offset\n  var months\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return localize('lessThanXSeconds', 5, localizeOptions)\n      } else if (seconds < 10) {\n        return localize('lessThanXSeconds', 10, localizeOptions)\n      } else if (seconds < 20) {\n        return localize('lessThanXSeconds', 20, localizeOptions)\n      } else if (seconds < 40) {\n        return localize('halfAMinute', null, localizeOptions)\n      } else if (seconds < 60) {\n        return localize('lessThanXMinutes', 1, localizeOptions)\n      } else {\n        return localize('xMinutes', 1, localizeOptions)\n      }\n    } else {\n      if (minutes === 0) {\n        return localize('lessThanXMinutes', 1, localizeOptions)\n      } else {\n        return localize('xMinutes', minutes, localizeOptions)\n      }\n    }\n\n  // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return localize('xMinutes', minutes, localizeOptions)\n\n  // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return localize('aboutXHours', 1, localizeOptions)\n\n  // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60)\n    return localize('aboutXHours', hours, localizeOptions)\n\n  // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return localize('xDays', 1, localizeOptions)\n\n  // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY)\n    return localize('xDays', days, localizeOptions)\n\n  // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH)\n    return localize('aboutXMonths', months, localizeOptions)\n  }\n\n  months = differenceInMonths(dateRight, dateLeft)\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH)\n    return localize('xMonths', nearestMonth, localizeOptions)\n\n  // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12\n    var years = Math.floor(months / 12)\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return localize('aboutXYears', years, localizeOptions)\n\n    // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return localize('overXYears', years, localizeOptions)\n\n    // N years 9 months up to N year 12 months\n    } else {\n      return localize('almostXYears', years + 1, localizeOptions)\n    }\n  }\n}\n\nmodule.exports = distanceInWords\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nfunction endOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn)\n\n  date.setDate(date.getDate() + diff)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nfunction endOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  date.setFullYear(date.getFullYear(), month + 1, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfMonth\n","var parse = require('../parse/index.js')\nvar startOfYear = require('../start_of_year/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nfunction getDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = differenceInCalendarDays(date, startOfYear(date))\n  var dayOfYear = diff + 1\n  return dayOfYear\n}\n\nmodule.exports = getDayOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nfunction startOfYear (dirtyDate) {\n  var cleanDate = parse(dirtyDate)\n  var date = new Date(0)\n  date.setFullYear(cleanDate.getFullYear(), 0, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYear\n","var isDate = require('../is_date/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {Date} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} argument must be an instance of Date\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid (dirtyDate) {\n  if (isDate(dirtyDate)) {\n    return !isNaN(dirtyDate)\n  } else {\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date')\n  }\n}\n\nmodule.exports = isValid\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * var result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\nfunction isLeapYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0\n}\n\nmodule.exports = isLeapYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * var result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nfunction getISODay (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n\n  if (day === 0) {\n    day = 7\n  }\n\n  return day\n}\n\nmodule.exports = getISODay\n","var startOfHour = require('../start_of_hour/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(\n *   new Date(2014, 8, 4, 6, 0),\n *   new Date(2014, 8, 4, 6, 30)\n * )\n * //=> true\n */\nfunction isSameHour (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft)\n  var dateRightStartOfHour = startOfHour(dirtyDateRight)\n\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime()\n}\n\nmodule.exports = isSameHour\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an hour\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * var result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\nfunction startOfHour (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMinutes(0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfHour\n","var isSameWeek = require('../is_same_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week?\n *\n * @description\n * Are the given dates in the same ISO week?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * var result = isSameISOWeek(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 8, 7)\n * )\n * //=> true\n */\nfunction isSameISOWeek (dirtyDateLeft, dirtyDateRight) {\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {weekStartsOn: 1})\n}\n\nmodule.exports = isSameISOWeek\n","var startOfISOYear = require('../start_of_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOYear(\n *   new Date(2003, 11, 29),\n *   new Date(2005, 0, 2)\n * )\n * //=> true\n */\nfunction isSameISOYear (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfYear = startOfISOYear(dirtyDateLeft)\n  var dateRightStartOfYear = startOfISOYear(dirtyDateRight)\n\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime()\n}\n\nmodule.exports = isSameISOYear\n","var startOfMinute = require('../start_of_minute/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\nfunction isSameMinute (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft)\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight)\n\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime()\n}\n\nmodule.exports = isSameMinute\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a minute\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\nfunction startOfMinute (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setSeconds(0, 0)\n  return date\n}\n\nmodule.exports = startOfMinute\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(\n *   new Date(2014, 8, 2),\n *   new Date(2014, 8, 25)\n * )\n * //=> true\n */\nfunction isSameMonth (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getFullYear() === dateRight.getFullYear() &&\n    dateLeft.getMonth() === dateRight.getMonth()\n}\n\nmodule.exports = isSameMonth\n","var startOfQuarter = require('../start_of_quarter/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Are the given dates in the same year quarter?\n *\n * @description\n * Are the given dates in the same year quarter?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * var result = isSameQuarter(\n *   new Date(2014, 0, 1),\n *   new Date(2014, 2, 8)\n * )\n * //=> true\n */\nfunction isSameQuarter (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft)\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight)\n\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime()\n}\n\nmodule.exports = isSameQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a quarter\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\nfunction startOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3\n  date.setMonth(month, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfQuarter\n","var startOfSecond = require('../start_of_second/index.js')\n\n/**\n * @category Second Helpers\n * @summary Are the given dates in the same second?\n *\n * @description\n * Are the given dates in the same second?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n * // in the same second?\n * var result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n */\nfunction isSameSecond (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft)\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight)\n\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime()\n}\n\nmodule.exports = isSameSecond\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a second\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\nfunction startOfSecond (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMilliseconds(0)\n  return date\n}\n\nmodule.exports = startOfSecond\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(\n *   new Date(2014, 8, 2),\n *   new Date(2014, 8, 25)\n * )\n * //=> true\n */\nfunction isSameYear (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getFullYear() === dateRight.getFullYear()\n}\n\nmodule.exports = isSameYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction lastDayOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn)\n\n  date.setHours(0, 0, 0, 0)\n  date.setDate(date.getDate() + diff)\n  return date\n}\n\nmodule.exports = lastDayOfWeek\n","var parse = require('../parse/index.js')\nvar getDaysInMonth = require('../get_days_in_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month setted\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nfunction setMonth (dirtyDate, dirtyMonth) {\n  var date = parse(dirtyDate)\n  var month = Number(dirtyMonth)\n  var year = date.getFullYear()\n  var day = date.getDate()\n\n  var dateWithDesiredMonth = new Date(0)\n  dateWithDesiredMonth.setFullYear(year, month, 15)\n  dateWithDesiredMonth.setHours(0, 0, 0, 0)\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(month, Math.min(day, daysInMonth))\n  return date\n}\n\nmodule.exports = setMonth\n","module.exports = require(\"child_process\");","var MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nmodule.exports = function getTimezoneOffsetInMilliseconds (dirtyDate) {\n  var date = new Date(dirtyDate.getTime())\n  var baseTimezoneOffset = date.getTimezoneOffset()\n  date.setSeconds(0, 0)\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE\n\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset\n}\n","var parse = require('../parse/index.js')\n\n/**\n * @category Range Helpers\n * @summary Is the given date range overlapping with another date range?\n *\n * @description\n * Is the given date range overlapping with another date range?\n *\n * @param {Date|String|Number} initialRangeStartDate - the start of the initial range\n * @param {Date|String|Number} initialRangeEndDate - the end of the initial range\n * @param {Date|String|Number} comparedRangeStartDate - the start of the range to compare it with\n * @param {Date|String|Number} comparedRangeEndDate - the end of the range to compare it with\n * @returns {Boolean} whether the date ranges are overlapping\n * @throws {Error} startDate of a date range cannot be after its endDate\n *\n * @example\n * // For overlapping date ranges:\n * areRangesOverlapping(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 17), new Date(2014, 0, 21)\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping date ranges:\n * areRangesOverlapping(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 21), new Date(2014, 0, 22)\n * )\n * //=> false\n */\nfunction areRangesOverlapping (dirtyInitialRangeStartDate, dirtyInitialRangeEndDate, dirtyComparedRangeStartDate, dirtyComparedRangeEndDate) {\n  var initialStartTime = parse(dirtyInitialRangeStartDate).getTime()\n  var initialEndTime = parse(dirtyInitialRangeEndDate).getTime()\n  var comparedStartTime = parse(dirtyComparedRangeStartDate).getTime()\n  var comparedEndTime = parse(dirtyComparedRangeEndDate).getTime()\n\n  if (initialStartTime > initialEndTime || comparedStartTime > comparedEndTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  return initialStartTime < comparedEndTime && comparedStartTime < initialEndTime\n}\n\nmodule.exports = areRangesOverlapping\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date[]|String[]|Number[]} datesArray - the array to search\n * @returns {Number} an index of the date closest to the given date\n * @throws {TypeError} the second argument must be an instance of Array\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * var dateToCompare = new Date(2015, 8, 6)\n * var datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * var result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\nfunction closestIndexTo (dirtyDateToCompare, dirtyDatesArray) {\n  if (!(dirtyDatesArray instanceof Array)) {\n    throw new TypeError(toString.call(dirtyDatesArray) + ' is not an instance of Array')\n  }\n\n  var dateToCompare = parse(dirtyDateToCompare)\n  var timeToCompare = dateToCompare.getTime()\n\n  var result\n  var minDistance\n\n  dirtyDatesArray.forEach(function (dirtyDate, index) {\n    var currentDate = parse(dirtyDate)\n    var distance = Math.abs(timeToCompare - currentDate.getTime())\n    if (result === undefined || distance < minDistance) {\n      result = index\n      minDistance = distance\n    }\n  })\n\n  return result\n}\n\nmodule.exports = closestIndexTo\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date[]|String[]|Number[]} datesArray - the array to search\n * @returns {Date} the date from the array closest to the given date\n * @throws {TypeError} the second argument must be an instance of Array\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * var dateToCompare = new Date(2015, 8, 6)\n * var result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\nfunction closestTo (dirtyDateToCompare, dirtyDatesArray) {\n  if (!(dirtyDatesArray instanceof Array)) {\n    throw new TypeError(toString.call(dirtyDatesArray) + ' is not an instance of Array')\n  }\n\n  var dateToCompare = parse(dirtyDateToCompare)\n  var timeToCompare = dateToCompare.getTime()\n\n  var result\n  var minDistance\n\n  dirtyDatesArray.forEach(function (dirtyDate) {\n    var currentDate = parse(dirtyDate)\n    var distance = Math.abs(timeToCompare - currentDate.getTime())\n    if (result === undefined || distance < minDistance) {\n      result = currentDate\n      minDistance = distance\n    }\n  })\n\n  return result\n}\n\nmodule.exports = closestTo\n","var startOfISOWeek = require('../start_of_iso_week/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * var result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\nfunction differenceInCalendarISOWeeks (dirtyDateLeft, dirtyDateRight) {\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft)\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight)\n\n  var timestampLeft = startOfISOWeekLeft.getTime() -\n    startOfISOWeekLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfISOWeekRight.getTime() -\n    startOfISOWeekRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = differenceInCalendarISOWeeks\n","var getQuarter = require('../get_quarter/index.js')\nvar parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\nfunction differenceInCalendarQuarters (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear()\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight)\n\n  return yearDiff * 4 + quarterDiff\n}\n\nmodule.exports = differenceInCalendarQuarters\n","var startOfWeek = require('../start_of_week/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   {weekStartsOn: 1}\n * )\n * //=> 2\n */\nfunction differenceInCalendarWeeks (dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions)\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions)\n\n  var timestampLeft = startOfWeekLeft.getTime() -\n    startOfWeekLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfWeekRight.getTime() -\n    startOfWeekRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = differenceInCalendarWeeks\n","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\n\n/**\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\nfunction differenceInHours (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInHours\n","var parse = require('../parse/index.js')\nvar differenceInCalendarISOYears = require('../difference_in_calendar_iso_years/index.js')\nvar compareAsc = require('../compare_asc/index.js')\nvar subISOYears = require('../sub_iso_years/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * var result = differenceInISOYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\nfunction differenceInISOYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarISOYears(dateLeft, dateRight))\n  dateLeft = subISOYears(dateLeft, sign * difference)\n\n  // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastISOYearNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastISOYearNotFull)\n}\n\nmodule.exports = differenceInISOYears\n","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the number of minutes between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n */\nfunction differenceInMinutes (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInMinutes\n","var differenceInMonths = require('../difference_in_months/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nfunction differenceInQuarters (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInQuarters\n","var differenceInDays = require('../difference_in_days/index.js')\n\n/**\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 2\n */\nfunction differenceInWeeks (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInWeeks\n","var parse = require('../parse/index.js')\nvar differenceInCalendarYears = require('../difference_in_calendar_years/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 1\n */\nfunction differenceInYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight))\n  dateLeft.setFullYear(dateLeft.getFullYear() - sign * difference)\n\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastYearNotFull)\n}\n\nmodule.exports = differenceInYears\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'less than a second',\n      other: 'less than {{count}} seconds'\n    },\n\n    xSeconds: {\n      one: '1 second',\n      other: '{{count}} seconds'\n    },\n\n    halfAMinute: 'half a minute',\n\n    lessThanXMinutes: {\n      one: 'less than a minute',\n      other: 'less than {{count}} minutes'\n    },\n\n    xMinutes: {\n      one: '1 minute',\n      other: '{{count}} minutes'\n    },\n\n    aboutXHours: {\n      one: 'about 1 hour',\n      other: 'about {{count}} hours'\n    },\n\n    xHours: {\n      one: '1 hour',\n      other: '{{count}} hours'\n    },\n\n    xDays: {\n      one: '1 day',\n      other: '{{count}} days'\n    },\n\n    aboutXMonths: {\n      one: 'about 1 month',\n      other: 'about {{count}} months'\n    },\n\n    xMonths: {\n      one: '1 month',\n      other: '{{count}} months'\n    },\n\n    aboutXYears: {\n      one: 'about 1 year',\n      other: 'about {{count}} years'\n    },\n\n    xYears: {\n      one: '1 year',\n      other: '{{count}} years'\n    },\n\n    overXYears: {\n      one: 'over 1 year',\n      other: 'over {{count}} years'\n    },\n\n    almostXYears: {\n      one: 'almost 1 year',\n      other: 'almost {{count}} years'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'in ' + result\n      } else {\n        return result + ' ago'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nmodule.exports = buildFormatLocale\n","var commonFormatterKeys = [\n  'M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd',\n  'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG',\n  'H', 'HH', 'h', 'hh', 'm', 'mm',\n  's', 'ss', 'S', 'SS', 'SSS',\n  'Z', 'ZZ', 'X', 'x'\n]\n\nfunction buildFormattingTokensRegExp (formatters) {\n  var formatterKeys = []\n  for (var key in formatters) {\n    if (formatters.hasOwnProperty(key)) {\n      formatterKeys.push(key)\n    }\n  }\n\n  var formattingTokens = commonFormatterKeys\n    .concat(formatterKeys)\n    .sort()\n    .reverse()\n  var formattingTokensRegExp = new RegExp(\n    '(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g'\n  )\n\n  return formattingTokensRegExp\n}\n\nmodule.exports = buildFormattingTokensRegExp\n","var compareDesc = require('../compare_desc/index.js')\nvar parse = require('../parse/index.js')\nvar differenceInSeconds = require('../difference_in_seconds/index.js')\nvar enLocale = require('../locale/en/index.js')\n\nvar MINUTES_IN_DAY = 1440\nvar MINUTES_IN_MONTH = 43200\nvar MINUTES_IN_YEAR = 525600\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `distanceInWords`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date|String|Number} date - the other date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'s'|'m'|'h'|'d'|'M'|'Y'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.partialMethod='floor'] - which way to round partial units\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = distanceInWordsStrict(\n *   new Date(2014, 6, 2),\n *   new Date(2015, 0, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * var result = distanceInWordsStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = distanceInWordsStrict(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * var result = distanceInWordsStrict(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {unit: 'm'}\n * )\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 28 January 2015, in months, rounded up?\n * var result = distanceInWordsStrict(\n *   new Date(2015, 0, 28),\n *   new Date(2015, 0, 1),\n *   {unit: 'M', partialMethod: 'ceil'}\n * )\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWordsStrict(\n *   new Date(2016, 7, 1),\n *   new Date(2015, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nfunction distanceInWordsStrict (dirtyDateToCompare, dirtyDate, dirtyOptions) {\n  var options = dirtyOptions || {}\n\n  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)\n\n  var locale = options.locale\n  var localize = enLocale.distanceInWords.localize\n  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {\n    localize = locale.distanceInWords.localize\n  }\n\n  var localizeOptions = {\n    addSuffix: Boolean(options.addSuffix),\n    comparison: comparison\n  }\n\n  var dateLeft, dateRight\n  if (comparison > 0) {\n    dateLeft = parse(dirtyDateToCompare)\n    dateRight = parse(dirtyDate)\n  } else {\n    dateLeft = parse(dirtyDate)\n    dateRight = parse(dirtyDateToCompare)\n  }\n\n  var unit\n  var mathPartial = Math[options.partialMethod ? String(options.partialMethod) : 'floor']\n  var seconds = differenceInSeconds(dateRight, dateLeft)\n  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()\n  var minutes = mathPartial(seconds / 60) - offset\n  var hours, days, months, years\n\n  if (options.unit) {\n    unit = String(options.unit)\n  } else {\n    if (minutes < 1) {\n      unit = 's'\n    } else if (minutes < 60) {\n      unit = 'm'\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'h'\n    } else if (minutes < MINUTES_IN_MONTH) {\n      unit = 'd'\n    } else if (minutes < MINUTES_IN_YEAR) {\n      unit = 'M'\n    } else {\n      unit = 'Y'\n    }\n  }\n\n  // 0 up to 60 seconds\n  if (unit === 's') {\n    return localize('xSeconds', seconds, localizeOptions)\n\n  // 1 up to 60 mins\n  } else if (unit === 'm') {\n    return localize('xMinutes', minutes, localizeOptions)\n\n  // 1 up to 24 hours\n  } else if (unit === 'h') {\n    hours = mathPartial(minutes / 60)\n    return localize('xHours', hours, localizeOptions)\n\n  // 1 up to 30 days\n  } else if (unit === 'd') {\n    days = mathPartial(minutes / MINUTES_IN_DAY)\n    return localize('xDays', days, localizeOptions)\n\n  // 1 up to 12 months\n  } else if (unit === 'M') {\n    months = mathPartial(minutes / MINUTES_IN_MONTH)\n    return localize('xMonths', months, localizeOptions)\n\n  // 1 year up to max Date\n  } else if (unit === 'Y') {\n    years = mathPartial(minutes / MINUTES_IN_YEAR)\n    return localize('xYears', years, localizeOptions)\n  }\n\n  throw new Error('Unknown unit: ' + unit)\n}\n\nmodule.exports = distanceInWordsStrict\n","var distanceInWords = require('../distance_in_words/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param {Date|String|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if the second date is earlier or later than the first\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = distanceInWordsToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = distanceInWordsToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = distanceInWordsToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWordsToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nfunction distanceInWordsToNow (dirtyDate, dirtyOptions) {\n  return distanceInWords(Date.now(), dirtyDate, dirtyOptions)\n}\n\nmodule.exports = distanceInWordsToNow\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the array of dates within the specified range.\n *\n * @description\n * Return the array of dates within the specified range.\n *\n * @param {Date|String|Number} startDate - the first date\n * @param {Date|String|Number} endDate - the last date\n * @param {Number} [step=1] - the step between each day\n * @returns {Date[]} the array with starts of days from the day of startDate to the day of endDate\n * @throws {Error} startDate cannot be after endDate\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDay(\n *   new Date(2014, 9, 6),\n *   new Date(2014, 9, 10)\n * )\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nfunction eachDay (dirtyStartDate, dirtyEndDate, dirtyStep) {\n  var startDate = parse(dirtyStartDate)\n  var endDate = parse(dirtyEndDate)\n  var step = dirtyStep !== undefined ? dirtyStep : 1\n\n  var endTime = endDate.getTime()\n\n  if (startDate.getTime() > endTime) {\n    throw new Error('The first date cannot be after the second date')\n  }\n\n  var dates = []\n\n  var currentDate = startDate\n  currentDate.setHours(0, 0, 0, 0)\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(parse(currentDate))\n    currentDate.setDate(currentDate.getDate() + step)\n  }\n\n  return dates\n}\n\nmodule.exports = eachDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an hour\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * var result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\nfunction endOfHour (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMinutes(59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfHour\n","var endOfWeek = require('../end_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nfunction endOfISOWeek (dirtyDate) {\n  return endOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = endOfISOWeek\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * var result = endOfISOYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\nfunction endOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear)\n  date.setMilliseconds(date.getMilliseconds() - 1)\n  return date\n}\n\nmodule.exports = endOfISOYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a minute\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\nfunction endOfMinute (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setSeconds(59, 999)\n  return date\n}\n\nmodule.exports = endOfMinute\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a quarter\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nfunction endOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3 + 3\n  date.setMonth(month, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a second\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\nfunction endOfSecond (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMilliseconds(999)\n  return date\n}\n\nmodule.exports = endOfSecond\n","var endOfDay = require('../end_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the end of today.\n *\n * @description\n * Return the end of today.\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\nfunction endOfToday () {\n  return endOfDay(new Date())\n}\n\nmodule.exports = endOfToday\n","/**\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n *\n * @description\n * Return the end of tomorrow.\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nfunction endOfTomorrow () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day + 1)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfTomorrow\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a year\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nfunction endOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  date.setFullYear(year + 1, 0, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfYear\n","/**\n * @category Day Helpers\n * @summary Return the end of yesterday.\n *\n * @description\n * Return the end of yesterday.\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nfunction endOfYesterday () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day - 1)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfYesterday\n","var getDayOfYear = require('../get_day_of_year/index.js')\nvar getISOWeek = require('../get_iso_week/index.js')\nvar getISOYear = require('../get_iso_year/index.js')\nvar parse = require('../parse/index.js')\nvar isValid = require('../is_valid/index.js')\nvar enLocale = require('../locale/en/index.js')\n\n/**\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format.\n *\n * Accepted tokens:\n * | Unit                    | Token | Result examples                  |\n * |-------------------------|-------|----------------------------------|\n * | Month                   | M     | 1, 2, ..., 12                    |\n * |                         | Mo    | 1st, 2nd, ..., 12th              |\n * |                         | MM    | 01, 02, ..., 12                  |\n * |                         | MMM   | Jan, Feb, ..., Dec               |\n * |                         | MMMM  | January, February, ..., December |\n * | Quarter                 | Q     | 1, 2, 3, 4                       |\n * |                         | Qo    | 1st, 2nd, 3rd, 4th               |\n * | Day of month            | D     | 1, 2, ..., 31                    |\n * |                         | Do    | 1st, 2nd, ..., 31st              |\n * |                         | DD    | 01, 02, ..., 31                  |\n * | Day of year             | DDD   | 1, 2, ..., 366                   |\n * |                         | DDDo  | 1st, 2nd, ..., 366th             |\n * |                         | DDDD  | 001, 002, ..., 366               |\n * | Day of week             | d     | 0, 1, ..., 6                     |\n * |                         | do    | 0th, 1st, ..., 6th               |\n * |                         | dd    | Su, Mo, ..., Sa                  |\n * |                         | ddd   | Sun, Mon, ..., Sat               |\n * |                         | dddd  | Sunday, Monday, ..., Saturday    |\n * | Day of ISO week         | E     | 1, 2, ..., 7                     |\n * | ISO week                | W     | 1, 2, ..., 53                    |\n * |                         | Wo    | 1st, 2nd, ..., 53rd              |\n * |                         | WW    | 01, 02, ..., 53                  |\n * | Year                    | YY    | 00, 01, ..., 99                  |\n * |                         | YYYY  | 1900, 1901, ..., 2099            |\n * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |\n * |                         | GGGG  | 1900, 1901, ..., 2099            |\n * | AM/PM                   | A     | AM, PM                           |\n * |                         | a     | am, pm                           |\n * |                         | aa    | a.m., p.m.                       |\n * | Hour                    | H     | 0, 1, ... 23                     |\n * |                         | HH    | 00, 01, ... 23                   |\n * |                         | h     | 1, 2, ..., 12                    |\n * |                         | hh    | 01, 02, ..., 12                  |\n * | Minute                  | m     | 0, 1, ..., 59                    |\n * |                         | mm    | 00, 01, ..., 59                  |\n * | Second                  | s     | 0, 1, ..., 59                    |\n * |                         | ss    | 00, 01, ..., 59                  |\n * | 1/10 of second          | S     | 0, 1, ..., 9                     |\n * | 1/100 of second         | SS    | 00, 01, ..., 99                  |\n * | Millisecond             | SSS   | 000, 001, ..., 999               |\n * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |\n * |                         | ZZ    | -0100, +0000, ..., +1200         |\n * | Seconds timestamp       | X     | 512969520                        |\n * | Milliseconds timestamp  | x     | 512969520900                     |\n *\n * The characters wrapped in square brackets are escaped.\n *\n * The result may vary by locale.\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens\n * @param {Object} [options] - the object with options\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the formatted date string\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(\n *   new Date(2014, 1, 11),\n *   'MM/DD/YYYY'\n * )\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * var eoLocale = require('date-fns/locale/eo')\n * var result = format(\n *   new Date(2014, 6, 2),\n *   'Do [de] MMMM YYYY',\n *   {locale: eoLocale}\n * )\n * //=> '2-a de julio 2014'\n */\nfunction format (dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n  var options = dirtyOptions || {}\n\n  var locale = options.locale\n  var localeFormatters = enLocale.format.formatters\n  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp\n  if (locale && locale.format && locale.format.formatters) {\n    localeFormatters = locale.format.formatters\n\n    if (locale.format.formattingTokensRegExp) {\n      formattingTokensRegExp = locale.format.formattingTokensRegExp\n    }\n  }\n\n  var date = parse(dirtyDate)\n\n  if (!isValid(date)) {\n    return 'Invalid Date'\n  }\n\n  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp)\n\n  return formatFn(date)\n}\n\nvar formatters = {\n  // Month: 1, 2, ..., 12\n  'M': function (date) {\n    return date.getMonth() + 1\n  },\n\n  // Month: 01, 02, ..., 12\n  'MM': function (date) {\n    return addLeadingZeros(date.getMonth() + 1, 2)\n  },\n\n  // Quarter: 1, 2, 3, 4\n  'Q': function (date) {\n    return Math.ceil((date.getMonth() + 1) / 3)\n  },\n\n  // Day of month: 1, 2, ..., 31\n  'D': function (date) {\n    return date.getDate()\n  },\n\n  // Day of month: 01, 02, ..., 31\n  'DD': function (date) {\n    return addLeadingZeros(date.getDate(), 2)\n  },\n\n  // Day of year: 1, 2, ..., 366\n  'DDD': function (date) {\n    return getDayOfYear(date)\n  },\n\n  // Day of year: 001, 002, ..., 366\n  'DDDD': function (date) {\n    return addLeadingZeros(getDayOfYear(date), 3)\n  },\n\n  // Day of week: 0, 1, ..., 6\n  'd': function (date) {\n    return date.getDay()\n  },\n\n  // Day of ISO week: 1, 2, ..., 7\n  'E': function (date) {\n    return date.getDay() || 7\n  },\n\n  // ISO week: 1, 2, ..., 53\n  'W': function (date) {\n    return getISOWeek(date)\n  },\n\n  // ISO week: 01, 02, ..., 53\n  'WW': function (date) {\n    return addLeadingZeros(getISOWeek(date), 2)\n  },\n\n  // Year: 00, 01, ..., 99\n  'YY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4).substr(2)\n  },\n\n  // Year: 1900, 1901, ..., 2099\n  'YYYY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4)\n  },\n\n  // ISO week-numbering year: 00, 01, ..., 99\n  'GG': function (date) {\n    return String(getISOYear(date)).substr(2)\n  },\n\n  // ISO week-numbering year: 1900, 1901, ..., 2099\n  'GGGG': function (date) {\n    return getISOYear(date)\n  },\n\n  // Hour: 0, 1, ... 23\n  'H': function (date) {\n    return date.getHours()\n  },\n\n  // Hour: 00, 01, ..., 23\n  'HH': function (date) {\n    return addLeadingZeros(date.getHours(), 2)\n  },\n\n  // Hour: 1, 2, ..., 12\n  'h': function (date) {\n    var hours = date.getHours()\n    if (hours === 0) {\n      return 12\n    } else if (hours > 12) {\n      return hours % 12\n    } else {\n      return hours\n    }\n  },\n\n  // Hour: 01, 02, ..., 12\n  'hh': function (date) {\n    return addLeadingZeros(formatters['h'](date), 2)\n  },\n\n  // Minute: 0, 1, ..., 59\n  'm': function (date) {\n    return date.getMinutes()\n  },\n\n  // Minute: 00, 01, ..., 59\n  'mm': function (date) {\n    return addLeadingZeros(date.getMinutes(), 2)\n  },\n\n  // Second: 0, 1, ..., 59\n  's': function (date) {\n    return date.getSeconds()\n  },\n\n  // Second: 00, 01, ..., 59\n  'ss': function (date) {\n    return addLeadingZeros(date.getSeconds(), 2)\n  },\n\n  // 1/10 of second: 0, 1, ..., 9\n  'S': function (date) {\n    return Math.floor(date.getMilliseconds() / 100)\n  },\n\n  // 1/100 of second: 00, 01, ..., 99\n  'SS': function (date) {\n    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2)\n  },\n\n  // Millisecond: 000, 001, ..., 999\n  'SSS': function (date) {\n    return addLeadingZeros(date.getMilliseconds(), 3)\n  },\n\n  // Timezone: -01:00, +00:00, ... +12:00\n  'Z': function (date) {\n    return formatTimezone(date.getTimezoneOffset(), ':')\n  },\n\n  // Timezone: -0100, +0000, ... +1200\n  'ZZ': function (date) {\n    return formatTimezone(date.getTimezoneOffset())\n  },\n\n  // Seconds timestamp: 512969520\n  'X': function (date) {\n    return Math.floor(date.getTime() / 1000)\n  },\n\n  // Milliseconds timestamp: 512969520900\n  'x': function (date) {\n    return date.getTime()\n  }\n}\n\nfunction buildFormatFn (formatStr, localeFormatters, formattingTokensRegExp) {\n  var array = formatStr.match(formattingTokensRegExp)\n  var length = array.length\n\n  var i\n  var formatter\n  for (i = 0; i < length; i++) {\n    formatter = localeFormatters[array[i]] || formatters[array[i]]\n    if (formatter) {\n      array[i] = formatter\n    } else {\n      array[i] = removeFormattingTokens(array[i])\n    }\n  }\n\n  return function (date) {\n    var output = ''\n    for (var i = 0; i < length; i++) {\n      if (array[i] instanceof Function) {\n        output += array[i](date, formatters)\n      } else {\n        output += array[i]\n      }\n    }\n    return output\n  }\n}\n\nfunction removeFormattingTokens (input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|]$/g, '')\n  }\n  return input.replace(/\\\\/g, '')\n}\n\nfunction formatTimezone (offset, delimeter) {\n  delimeter = delimeter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2)\n}\n\nfunction addLeadingZeros (number, targetLength) {\n  var output = Math.abs(number).toString()\n  while (output.length < targetLength) {\n    output = '0' + output\n  }\n  return output\n}\n\nmodule.exports = format\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of month\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * var result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\nfunction getDate (dirtyDate) {\n  var date = parse(dirtyDate)\n  var dayOfMonth = date.getDate()\n  return dayOfMonth\n}\n\nmodule.exports = getDate\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of week\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * var result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nfunction getDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  return day\n}\n\nmodule.exports = getDay\n","var isLeapYear = require('../is_leap_year/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of days in a year\n *\n * @example\n * // How many days are in 2012?\n * var result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\nfunction getDaysInYear (dirtyDate) {\n  return isLeapYear(dirtyDate) ? 366 : 365\n}\n\nmodule.exports = getDaysInYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the hours\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * var result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nfunction getHours (dirtyDate) {\n  var date = parse(dirtyDate)\n  var hours = date.getHours()\n  return hours\n}\n\nmodule.exports = getHours\n","var startOfISOYear = require('../start_of_iso_year/index.js')\nvar addWeeks = require('../add_weeks/index.js')\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\nfunction getISOWeeksInYear (dirtyDate) {\n  var thisYear = startOfISOYear(dirtyDate)\n  var nextYear = startOfISOYear(addWeeks(thisYear, 60))\n  var diff = nextYear.valueOf() - thisYear.valueOf()\n  // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = getISOWeeksInYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the milliseconds\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\nfunction getMilliseconds (dirtyDate) {\n  var date = parse(dirtyDate)\n  var milliseconds = date.getMilliseconds()\n  return milliseconds\n}\n\nmodule.exports = getMilliseconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the minutes\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\nfunction getMinutes (dirtyDate) {\n  var date = parse(dirtyDate)\n  var minutes = date.getMinutes()\n  return minutes\n}\n\nmodule.exports = getMinutes\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the month\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nfunction getMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  return month\n}\n\nmodule.exports = getMonth\n","var parse = require('../parse/index.js')\n\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000\n\n/**\n * @category Range Helpers\n * @summary Get the number of days that overlap in two date ranges\n *\n * @description\n * Get the number of days that overlap in two date ranges\n *\n * @param {Date|String|Number} initialRangeStartDate - the start of the initial range\n * @param {Date|String|Number} initialRangeEndDate - the end of the initial range\n * @param {Date|String|Number} comparedRangeStartDate - the start of the range to compare it with\n * @param {Date|String|Number} comparedRangeEndDate - the end of the range to compare it with\n * @returns {Number} the number of days that overlap in two date ranges\n * @throws {Error} startDate of a date range cannot be after its endDate\n *\n * @example\n * // For overlapping date ranges adds 1 for each started overlapping day:\n * getOverlappingDaysInRanges(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 17), new Date(2014, 0, 21)\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping date ranges returns 0:\n * getOverlappingDaysInRanges(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 21), new Date(2014, 0, 22)\n * )\n * //=> 0\n */\nfunction getOverlappingDaysInRanges (dirtyInitialRangeStartDate, dirtyInitialRangeEndDate, dirtyComparedRangeStartDate, dirtyComparedRangeEndDate) {\n  var initialStartTime = parse(dirtyInitialRangeStartDate).getTime()\n  var initialEndTime = parse(dirtyInitialRangeEndDate).getTime()\n  var comparedStartTime = parse(dirtyComparedRangeStartDate).getTime()\n  var comparedEndTime = parse(dirtyComparedRangeEndDate).getTime()\n\n  if (initialStartTime > initialEndTime || comparedStartTime > comparedEndTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  var isOverlapping = initialStartTime < comparedEndTime && comparedStartTime < initialEndTime\n\n  if (!isOverlapping) {\n    return 0\n  }\n\n  var overlapStartDate = comparedStartTime < initialStartTime\n    ? initialStartTime\n    : comparedStartTime\n\n  var overlapEndDate = comparedEndTime > initialEndTime\n    ? initialEndTime\n    : comparedEndTime\n\n  var differenceInMs = overlapEndDate - overlapStartDate\n\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = getOverlappingDaysInRanges\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the seconds\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\nfunction getSeconds (dirtyDate) {\n  var date = parse(dirtyDate)\n  var seconds = date.getSeconds()\n  return seconds\n}\n\nmodule.exports = getSeconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the timestamp\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\nfunction getTime (dirtyDate) {\n  var date = parse(dirtyDate)\n  var timestamp = date.getTime()\n  return timestamp\n}\n\nmodule.exports = getTime\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the year\n *\n * @example\n * // Which year is 2 July 2014?\n * var result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\nfunction getYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  return year\n}\n\nmodule.exports = getYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param {Date|String|Number} date - the date that should be after the other one to return true\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nfunction isAfter (dirtyDate, dirtyDateToCompare) {\n  var date = parse(dirtyDate)\n  var dateToCompare = parse(dirtyDateToCompare)\n  return date.getTime() > dateToCompare.getTime()\n}\n\nmodule.exports = isAfter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param {Date|String|Number} date - the date that should be before the other one to return true\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nfunction isBefore (dirtyDate, dirtyDateToCompare) {\n  var date = parse(dirtyDate)\n  var dateToCompare = parse(dirtyDateToCompare)\n  return date.getTime() < dateToCompare.getTime()\n}\n\nmodule.exports = isBefore\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0)\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nfunction isEqual (dirtyLeftDate, dirtyRightDate) {\n  var dateLeft = parse(dirtyLeftDate)\n  var dateRight = parse(dirtyRightDate)\n  return dateLeft.getTime() === dateRight.getTime()\n}\n\nmodule.exports = isEqual\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * var result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\nfunction isFirstDayOfMonth (dirtyDate) {\n  return parse(dirtyDate).getDate() === 1\n}\n\nmodule.exports = isFirstDayOfMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n *\n * @example\n * // Is 26 September 2014 Friday?\n * var result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\nfunction isFriday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 5\n}\n\nmodule.exports = isFriday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date in the future?\n *\n * @description\n * Is the given date in the future?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\nfunction isFuture (dirtyDate) {\n  return parse(dirtyDate).getTime() > new Date().getTime()\n}\n\nmodule.exports = isFuture\n","var parse = require('../parse/index.js')\nvar endOfDay = require('../end_of_day/index.js')\nvar endOfMonth = require('../end_of_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nfunction isLastDayOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  return endOfDay(date).getTime() === endOfMonth(date).getTime()\n}\n\nmodule.exports = isLastDayOfMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n *\n * @example\n * // Is 22 September 2014 Monday?\n * var result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\nfunction isMonday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 1\n}\n\nmodule.exports = isMonday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date in the past?\n *\n * @description\n * Is the given date in the past?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isPast (dirtyDate) {\n  return parse(dirtyDate).getTime() < new Date().getTime()\n}\n\nmodule.exports = isPast\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(\n *   new Date(2014, 8, 4, 6, 0),\n *   new Date(2014, 8, 4, 18, 0)\n * )\n * //=> true\n */\nfunction isSameDay (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft)\n  var dateRightStartOfDay = startOfDay(dirtyDateRight)\n\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime()\n}\n\nmodule.exports = isSameDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * var result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\nfunction isSaturday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 6\n}\n\nmodule.exports = isSaturday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * var result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\nfunction isSunday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 0\n}\n\nmodule.exports = isSunday\n","var isSameHour = require('../is_same_hour/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * var result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\nfunction isThisHour (dirtyDate) {\n  return isSameHour(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisHour\n","var isSameISOWeek = require('../is_same_iso_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * var result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\nfunction isThisISOWeek (dirtyDate) {\n  return isSameISOWeek(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisISOWeek\n","var isSameISOYear = require('../is_same_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Is the given date in the same ISO week-numbering year as the current date?\n *\n * @description\n * Is the given date in the same ISO week-numbering year as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week-numbering year\n *\n * @example\n * // If today is 25 September 2014,\n * // is 30 December 2013 in this ISO week-numbering year?\n * var result = isThisISOYear(new Date(2013, 11, 30))\n * //=> true\n */\nfunction isThisISOYear (dirtyDate) {\n  return isSameISOYear(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisISOYear\n","var isSameMinute = require('../is_same_minute/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\nfunction isThisMinute (dirtyDate) {\n  return isSameMinute(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisMinute\n","var isSameMonth = require('../is_same_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * var result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\nfunction isThisMonth (dirtyDate) {\n  return isSameMonth(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisMonth\n","var isSameQuarter = require('../is_same_quarter/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * var result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isThisQuarter (dirtyDate) {\n  return isSameQuarter(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisQuarter\n","var isSameSecond = require('../is_same_second/index.js')\n\n/**\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\nfunction isThisSecond (dirtyDate) {\n  return isSameSecond(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisSecond\n","var isSameWeek = require('../is_same_week/index.js')\n\n/**\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), {weekStartsOn: 1})\n * //=> false\n */\nfunction isThisWeek (dirtyDate, dirtyOptions) {\n  return isSameWeek(new Date(), dirtyDate, dirtyOptions)\n}\n\nmodule.exports = isThisWeek\n","var isSameYear = require('../is_same_year/index.js')\n\n/**\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isThisYear (dirtyDate) {\n  return isSameYear(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * var result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\nfunction isThursday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 4\n}\n\nmodule.exports = isThursday\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date today?\n *\n * @description\n * Is the given date today?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nfunction isToday (dirtyDate) {\n  return startOfDay(dirtyDate).getTime() === startOfDay(new Date()).getTime()\n}\n\nmodule.exports = isToday\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n *\n * @description\n * Is the given date tomorrow?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\nfunction isTomorrow (dirtyDate) {\n  var tomorrow = new Date()\n  tomorrow.setDate(tomorrow.getDate() + 1)\n  return startOfDay(dirtyDate).getTime() === startOfDay(tomorrow).getTime()\n}\n\nmodule.exports = isTomorrow\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * var result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\nfunction isTuesday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 2\n}\n\nmodule.exports = isTuesday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * var result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\nfunction isWednesday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 3\n}\n\nmodule.exports = isWednesday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * var result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\nfunction isWeekend (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  return day === 0 || day === 6\n}\n\nmodule.exports = isWeekend\n","var parse = require('../parse/index.js')\n\n/**\n * @category Range Helpers\n * @summary Is the given date within the range?\n *\n * @description\n * Is the given date within the range?\n *\n * @param {Date|String|Number} date - the date to check\n * @param {Date|String|Number} startDate - the start of range\n * @param {Date|String|Number} endDate - the end of range\n * @returns {Boolean} the date is within the range\n * @throws {Error} startDate cannot be after endDate\n *\n * @example\n * // For the date within the range:\n * isWithinRange(\n *   new Date(2014, 0, 3), new Date(2014, 0, 1), new Date(2014, 0, 7)\n * )\n * //=> true\n *\n * @example\n * // For the date outside of the range:\n * isWithinRange(\n *   new Date(2014, 0, 10), new Date(2014, 0, 1), new Date(2014, 0, 7)\n * )\n * //=> false\n */\nfunction isWithinRange (dirtyDate, dirtyStartDate, dirtyEndDate) {\n  var time = parse(dirtyDate).getTime()\n  var startTime = parse(dirtyStartDate).getTime()\n  var endTime = parse(dirtyEndDate).getTime()\n\n  if (startTime > endTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  return time >= startTime && time <= endTime\n}\n\nmodule.exports = isWithinRange\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date yesterday?\n *\n * @description\n * Is the given date yesterday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\nfunction isYesterday (dirtyDate) {\n  var yesterday = new Date()\n  yesterday.setDate(yesterday.getDate() - 1)\n  return startOfDay(dirtyDate).getTime() === startOfDay(yesterday).getTime()\n}\n\nmodule.exports = isYesterday\n","var lastDayOfWeek = require('../last_day_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction lastDayOfISOWeek (dirtyDate) {\n  return lastDayOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = lastDayOfISOWeek\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * var result = lastDayOfISOYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\nfunction lastDayOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year + 1, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  date.setDate(date.getDate() - 1)\n  return date\n}\n\nmodule.exports = lastDayOfISOYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a month\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction lastDayOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  date.setFullYear(date.getFullYear(), month + 1, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a quarter\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction lastDayOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3 + 3\n  date.setMonth(month, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a year\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\nfunction lastDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  date.setFullYear(year + 1, 0, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the latest of the dates\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Sun Jul 02 1995 00:00:00\n */\nfunction max () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var latestTimestamp = Math.max.apply(null, dates)\n  return new Date(latestTimestamp)\n}\n\nmodule.exports = max\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Wed Feb 11 1987 00:00:00\n */\nfunction min () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var earliestTimestamp = Math.min.apply(null, dates)\n  return new Date(earliestTimestamp)\n}\n\nmodule.exports = min\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month setted\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * var result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction setDate (dirtyDate, dirtyDayOfMonth) {\n  var date = parse(dirtyDate)\n  var dayOfMonth = Number(dirtyDayOfMonth)\n  date.setDate(dayOfMonth)\n  return date\n}\n\nmodule.exports = setDate\n","var parse = require('../parse/index.js')\nvar addDays = require('../add_days/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If week starts with Monday, set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0, {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction setDay (dirtyDate, dirtyDay, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n  var date = parse(dirtyDate)\n  var day = Number(dirtyDay)\n  var currentDay = date.getDay()\n\n  var remainder = day % 7\n  var dayIndex = (remainder + 7) % 7\n\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay\n  return addDays(date, diff)\n}\n\nmodule.exports = setDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year setted\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * var result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\nfunction setDayOfYear (dirtyDate, dirtyDayOfYear) {\n  var date = parse(dirtyDate)\n  var dayOfYear = Number(dirtyDayOfYear)\n  date.setMonth(0)\n  date.setDate(dayOfYear)\n  return date\n}\n\nmodule.exports = setDayOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours setted\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\nfunction setHours (dirtyDate, dirtyHours) {\n  var date = parse(dirtyDate)\n  var hours = Number(dirtyHours)\n  date.setHours(hours)\n  return date\n}\n\nmodule.exports = setHours\n","var parse = require('../parse/index.js')\nvar addDays = require('../add_days/index.js')\nvar getISODay = require('../get_iso_day/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction setISODay (dirtyDate, dirtyDay) {\n  var date = parse(dirtyDate)\n  var day = Number(dirtyDay)\n  var currentDay = getISODay(date)\n  var diff = day - currentDay\n  return addDays(date, diff)\n}\n\nmodule.exports = setISODay\n","var parse = require('../parse/index.js')\nvar getISOWeek = require('../get_iso_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week setted\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * var result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nfunction setISOWeek (dirtyDate, dirtyISOWeek) {\n  var date = parse(dirtyDate)\n  var isoWeek = Number(dirtyISOWeek)\n  var diff = getISOWeek(date) - isoWeek\n  date.setDate(date.getDate() - diff * 7)\n  return date\n}\n\nmodule.exports = setISOWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds setted\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\nfunction setMilliseconds (dirtyDate, dirtyMilliseconds) {\n  var date = parse(dirtyDate)\n  var milliseconds = Number(dirtyMilliseconds)\n  date.setMilliseconds(milliseconds)\n  return date\n}\n\nmodule.exports = setMilliseconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes setted\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\nfunction setMinutes (dirtyDate, dirtyMinutes) {\n  var date = parse(dirtyDate)\n  var minutes = Number(dirtyMinutes)\n  date.setMinutes(minutes)\n  return date\n}\n\nmodule.exports = setMinutes\n","var parse = require('../parse/index.js')\nvar setMonth = require('../set_month/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter setted\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * var result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\nfunction setQuarter (dirtyDate, dirtyQuarter) {\n  var date = parse(dirtyDate)\n  var quarter = Number(dirtyQuarter)\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1\n  var diff = quarter - oldQuarter\n  return setMonth(date, date.getMonth() + diff * 3)\n}\n\nmodule.exports = setQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds setted\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\nfunction setSeconds (dirtyDate, dirtySeconds) {\n  var date = parse(dirtyDate)\n  var seconds = Number(dirtySeconds)\n  date.setSeconds(seconds)\n  return date\n}\n\nmodule.exports = setSeconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year setted\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\nfunction setYear (dirtyDate, dirtyYear) {\n  var date = parse(dirtyDate)\n  var year = Number(dirtyYear)\n  date.setFullYear(year)\n  return date\n}\n\nmodule.exports = setYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setDate(1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfMonth\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of today.\n *\n * @description\n * Return the start of today.\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\nfunction startOfToday () {\n  return startOfDay(new Date())\n}\n\nmodule.exports = startOfToday\n","/**\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n *\n * @description\n * Return the start of tomorrow.\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nfunction startOfTomorrow () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day + 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfTomorrow\n","/**\n * @category Day Helpers\n * @summary Return the start of yesterday.\n *\n * @description\n * Return the start of yesterday.\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nfunction startOfYesterday () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day - 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYesterday\n","var addDays = require('../add_days/index.js')\n\n/**\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted\n * @returns {Date} the new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * var result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nfunction subDays (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addDays(dirtyDate, -amount)\n}\n\nmodule.exports = subDays\n","var addHours = require('../add_hours/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted\n * @returns {Date} the new date with the hours subtracted\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\nfunction subHours (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addHours(dirtyDate, -amount)\n}\n\nmodule.exports = subHours\n","var addMilliseconds = require('../add_milliseconds/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nfunction subMilliseconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, -amount)\n}\n\nmodule.exports = subMilliseconds\n","var addMinutes = require('../add_minutes/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted\n * @returns {Date} the new date with the mintues subtracted\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\nfunction subMinutes (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMinutes(dirtyDate, -amount)\n}\n\nmodule.exports = subMinutes\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted\n * @returns {Date} the new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction subMonths (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMonths(dirtyDate, -amount)\n}\n\nmodule.exports = subMonths\n","var addQuarters = require('../add_quarters/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted\n * @returns {Date} the new date with the quarters subtracted\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * var result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\nfunction subQuarters (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addQuarters(dirtyDate, -amount)\n}\n\nmodule.exports = subQuarters\n","var addSeconds = require('../add_seconds/index.js')\n\n/**\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted\n * @returns {Date} the new date with the seconds subtracted\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\nfunction subSeconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addSeconds(dirtyDate, -amount)\n}\n\nmodule.exports = subSeconds\n","var addWeeks = require('../add_weeks/index.js')\n\n/**\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted\n * @returns {Date} the new date with the weeks subtracted\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * var result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\nfunction subWeeks (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addWeeks(dirtyDate, -amount)\n}\n\nmodule.exports = subWeeks\n","var addYears = require('../add_years/index.js')\n\n/**\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted\n * @returns {Date} the new date with the years subtracted\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\nfunction subYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addYears(dirtyDate, -amount)\n}\n\nmodule.exports = subYears\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","module.exports = require(\"string_decoder\");","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","'use strict';\nimport { TextDocument, TextEditor, Uri } from 'vscode';\n\nabstract class Comparer<T> {\n    abstract equals(lhs: T, rhs: T): boolean;\n}\n\nclass UriComparer extends Comparer<Uri> {\n    equals(lhs: Uri | undefined, rhs: Uri | undefined) {\n        if (lhs === rhs) return true;\n        if (lhs === undefined || rhs === undefined) return false;\n\n        return lhs.scheme === rhs.scheme && lhs.fsPath === rhs.fsPath;\n    }\n}\n\nclass TextDocumentComparer extends Comparer<TextDocument> {\n    equals(lhs: TextDocument | undefined, rhs: TextDocument | undefined) {\n        return lhs === rhs;\n        // if (lhs === rhs) return true;\n        // if (lhs === undefined || rhs === undefined) return false;\n\n        // return uriComparer.equals(lhs.uri, rhs.uri);\n    }\n}\n\nclass TextEditorComparer extends Comparer<TextEditor> {\n    equals(\n        lhs: TextEditor | undefined,\n        rhs: TextEditor | undefined,\n        options: { useId: boolean; usePosition: boolean } = { useId: false, usePosition: false }\n    ) {\n        if (lhs === rhs) return true;\n        if (lhs === undefined || rhs === undefined) return false;\n\n        if (options.usePosition && lhs.viewColumn !== rhs.viewColumn) return false;\n\n        if (options.useId && (!lhs.document || !rhs.document)) {\n            if ((lhs as any).id !== (rhs as any).id) return false;\n\n            return true;\n        }\n\n        return textDocumentComparer.equals(lhs.document, rhs.document);\n    }\n}\n\nconst textDocumentComparer = new TextDocumentComparer();\nconst textEditorComparer = new TextEditorComparer();\nconst uriComparer = new UriComparer();\nexport {\n    textDocumentComparer as TextDocumentComparer,\n    textEditorComparer as TextEditorComparer,\n    uriComparer as UriComparer\n};\n","'use strict';\n\nexport interface Config {\n    blame: {\n        avatars: boolean;\n        compact: boolean;\n        dateFormat: string | null;\n        format: string;\n        heatmap: {\n            enabled: boolean;\n            location: 'left' | 'right';\n        };\n        highlight: {\n            enabled: boolean;\n            locations: HighlightLocations[];\n        };\n        ignoreWhitespace: boolean;\n        separateLines: boolean;\n        toggleMode: AnnotationsToggleMode;\n    };\n    currentLine: {\n        scrollable: boolean;\n        dateFormat: string | null;\n        enabled: boolean;\n        format: string;\n    };\n    codeLens: CodeLensConfig;\n    debug: boolean;\n    defaultDateFormat: string | null;\n    defaultDateShortFormat: string | null;\n    defaultDateStyle: DateStyle;\n    defaultGravatarsStyle: GravatarDefaultStyle;\n    heatmap: {\n        ageThreshold: number;\n        coldColor: string;\n        hotColor: string;\n        toggleMode: AnnotationsToggleMode;\n    };\n    hovers: {\n        annotations: {\n            changes: boolean;\n            details: boolean;\n            enabled: boolean;\n            over: 'line' | 'annotation';\n        };\n        currentLine: {\n            changes: boolean;\n            details: boolean;\n            enabled: boolean;\n            over: 'line' | 'annotation';\n        };\n        avatars: boolean;\n        detailsMarkdownFormat: string;\n        enabled: boolean;\n    };\n    insiders: boolean;\n    keymap: KeyMap;\n    liveshare: {\n        allowGuestAccess: boolean;\n    };\n    menus: boolean | MenuConfig;\n    mode: {\n        active: string;\n        statusBar: {\n            enabled: boolean;\n            alignment: 'left' | 'right';\n        };\n    };\n    modes: { [key: string]: ModeConfig };\n    outputLevel: LogLevel;\n    recentChanges: {\n        highlight: {\n            locations: HighlightLocations[];\n        };\n        toggleMode: AnnotationsToggleMode;\n    };\n    remotes: RemotesConfig[];\n    showWhatsNewAfterUpgrades: boolean;\n    statusBar: {\n        alignment: 'left' | 'right';\n        command: StatusBarCommand;\n        dateFormat: string | null;\n        enabled: boolean;\n        format: string;\n        reduceFlicker: boolean;\n    };\n    strings: {\n        codeLens: {\n            unsavedChanges: {\n                recentChangeAndAuthors: string;\n                recentChangeOnly: string;\n                authorsOnly: string;\n            };\n        };\n    };\n    views: ViewsConfig;\n    advanced: AdvancedConfig;\n}\n\nexport enum AnnotationsToggleMode {\n    File = 'file',\n    Window = 'window'\n}\n\nexport enum CodeLensCommand {\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ToggleFileBlame = 'gitlens.toggleFileBlame'\n}\n\nexport enum CodeLensScopes {\n    Document = 'document',\n    Containers = 'containers',\n    Blocks = 'blocks'\n}\n\nexport enum CustomRemoteType {\n    Bitbucket = 'Bitbucket',\n    BitbucketServer = 'BitbucketServer',\n    Custom = 'Custom',\n    GitHub = 'GitHub',\n    GitLab = 'GitLab'\n}\n\nexport enum DateStyle {\n    Absolute = 'absolute',\n    Relative = 'relative'\n}\n\nexport enum FileAnnotationType {\n    Blame = 'blame',\n    Heatmap = 'heatmap',\n    RecentChanges = 'recentChanges'\n}\n\nexport enum GravatarDefaultStyle {\n    Faces = 'wavatar',\n    Geometric = 'identicon',\n    Monster = 'monsterid',\n    MysteryPerson = 'mp',\n    Retro = 'retro',\n    Robot = 'robohash'\n}\n\nexport enum HighlightLocations {\n    Gutter = 'gutter',\n    Line = 'line',\n    Overview = 'overview'\n}\n\nexport enum KeyMap {\n    Alternate = 'alternate',\n    Chorded = 'chorded',\n    None = 'none'\n}\n\nexport enum LogLevel {\n    Silent = 'silent',\n    Errors = 'errors',\n    Verbose = 'verbose',\n    Debug = 'debug'\n}\n\nexport enum StatusBarCommand {\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    DiffWithWorking = 'gitlens.diffWithWorking',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ToggleCodeLens = 'gitlens.toggleCodeLens',\n    ToggleFileBlame = 'gitlens.toggleFileBlame'\n}\n\nexport enum ViewBranchesLayout {\n    List = 'list',\n    Tree = 'tree'\n}\n\nexport enum ViewFilesLayout {\n    Auto = 'auto',\n    List = 'list',\n    Tree = 'tree'\n}\n\nexport interface AdvancedConfig {\n    abbreviatedShaLength: number;\n    blame: {\n        customArguments: string[] | null;\n        delayAfterEdit: number;\n        sizeThresholdAfterEdit: number;\n    };\n    caching: {\n        enabled: boolean;\n    };\n    fileHistoryFollowsRenames: boolean;\n    maxListItems: number;\n    messages: {\n        suppressCommitHasNoPreviousCommitWarning: boolean;\n        suppressCommitNotFoundWarning: boolean;\n        suppressFileNotUnderSourceControlWarning: boolean;\n        suppressGitDisabledWarning: boolean;\n        suppressGitVersionWarning: boolean;\n        suppressLineUncommittedWarning: boolean;\n        suppressNoRepositoryWarning: boolean;\n        suppressSupportGitLensNotification: boolean;\n    };\n    quickPick: {\n        closeOnFocusOut: boolean;\n    };\n    repositorySearchDepth: number;\n    telemetry: {\n        enabled: boolean;\n    };\n}\n\nexport interface CodeLensConfig {\n    authors: {\n        enabled: boolean;\n        command: CodeLensCommand;\n    };\n    enabled: boolean;\n    includeSingleLineSymbols: boolean;\n    recentChange: {\n        enabled: boolean;\n        command: CodeLensCommand;\n    };\n    scopes: CodeLensScopes[];\n    scopesByLanguage: CodeLensLanguageScope[];\n    symbolScopes: string[];\n}\n\nexport interface CodeLensLanguageScope {\n    language: string | undefined;\n    scopes?: CodeLensScopes[];\n    symbolScopes?: string[];\n}\n\nexport interface CompareViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface FileHistoryViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface LineHistoryViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface MenuConfig {\n    editor:\n        | false\n        | {\n              blame: boolean;\n              clipboard: boolean;\n              compare: boolean;\n              details: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    editorGroup:\n        | false\n        | {\n              compare: boolean;\n              history: boolean;\n          };\n    editorTab:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    explorer:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    scmGroup:\n        | false\n        | {\n              compare: boolean;\n              openClose: boolean;\n              stash: boolean;\n              stashInline: boolean;\n          };\n    scmItem:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n              stash: boolean;\n          };\n}\n\nexport interface ModeConfig {\n    name: string;\n    statusBarItemName?: string;\n    description?: string;\n    annotations?: 'blame' | 'heatmap' | 'recentChanges';\n    codeLens?: boolean;\n    currentLine?: boolean;\n    hovers?: boolean;\n    statusBar?: boolean;\n    views?: boolean;\n}\n\nexport interface RemotesConfig {\n    domain: string;\n    name?: string;\n    protocol?: string;\n    type: CustomRemoteType;\n    urls?: RemotesUrlsConfig;\n}\n\nexport interface RemotesUrlsConfig {\n    repository: string;\n    branches: string;\n    branch: string;\n    commit: string;\n    file: string;\n    fileInBranch: string;\n    fileInCommit: string;\n    fileLine: string;\n    fileRange: string;\n}\n\nexport interface RepositoriesViewConfig {\n    autoRefresh: boolean;\n    autoReveal: boolean;\n    avatars: boolean;\n    branches: {\n        layout: ViewBranchesLayout;\n    };\n    compact: boolean;\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    includeWorkingTree: boolean;\n    location: 'explorer' | 'gitlens' | 'scm';\n    showTrackingBranch: boolean;\n}\n\nexport interface SearchViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface ViewsConfig {\n    fileHistory: FileHistoryViewConfig;\n    commitFileDescriptionFormat: string;\n    commitFileFormat: string;\n    commitDescriptionFormat: string;\n    commitFormat: string;\n    compare: CompareViewConfig;\n    defaultItemLimit: number;\n    lineHistory: LineHistoryViewConfig;\n    repositories: RepositoriesViewConfig;\n    search: SearchViewConfig;\n    showRelativeDateMarkers: boolean;\n    stashFileDescriptionFormat: string;\n    stashFileFormat: string;\n    stashDescriptionFormat: string;\n    stashFormat: string;\n    statusFileDescriptionFormat: string;\n    statusFileFormat: string;\n}\n\nexport interface ViewsFilesConfig {\n    compact: boolean;\n    layout: ViewFilesLayout;\n    threshold: number;\n}\n","'use strict';\nimport { commands, TextDocument, TextEditor, window } from 'vscode';\n\nexport const applicationInsightsKey = 'a9c302f8-6483-4d01-b92c-c159c799c679';\nexport const extensionId = 'gitlens';\nexport const extensionOutputChannelName = 'GitLens';\nexport const extensionQualifiedId = `eamodio.${extensionId}`;\nexport const extensionTerminalName = 'GitLens';\n\nexport enum BuiltInCommands {\n    CloseActiveEditor = 'workbench.action.closeActiveEditor',\n    CloseAllEditors = 'workbench.action.closeAllEditors',\n    CursorMove = 'cursorMove',\n    Diff = 'vscode.diff',\n    EditorScroll = 'editorScroll',\n    ExecuteDocumentSymbolProvider = 'vscode.executeDocumentSymbolProvider',\n    ExecuteCodeLensProvider = 'vscode.executeCodeLensProvider',\n    FocusFilesExplorer = 'workbench.files.action.focusFilesExplorer',\n    Open = 'vscode.open',\n    OpenFolder = 'vscode.openFolder',\n    OpenInTerminal = 'openInTerminal',\n    NextEditor = 'workbench.action.nextEditor',\n    PreviewHtml = 'vscode.previewHtml',\n    RevealLine = 'revealLine',\n    SetContext = 'setContext',\n    ShowExplorerActivity = 'workbench.view.explorer',\n    ShowReferences = 'editor.action.showReferences'\n}\n\nexport enum CommandContext {\n    ActiveFileStatus = 'gitlens:activeFileStatus',\n    AnnotationStatus = 'gitlens:annotationStatus',\n    CanToggleCodeLens = 'gitlens:canToggleCodeLens',\n    Enabled = 'gitlens:enabled',\n    HasRemotes = 'gitlens:hasRemotes',\n    Key = 'gitlens:key',\n    Readonly = 'gitlens:readonly',\n    ViewsCanCompare = 'gitlens:views:canCompare',\n    ViewsCanCompareFile = 'gitlens:views:canCompare:file',\n    ViewsCompareKeepResults = 'gitlens:views:compare:keepResults',\n    ViewsHideSupportGitLens = 'gitlens:views:supportGitLens:hide',\n    ViewsFileHistoryEditorFollowing = 'gitlens:views:fileHistory:editorFollowing',\n    ViewsLineHistoryEditorFollowing = 'gitlens:views:lineHistory:editorFollowing',\n    ViewsRepositoriesAutoRefresh = 'gitlens:views:repositories:autoRefresh',\n    ViewsSearchKeepResults = 'gitlens:views:search:keepResults'\n}\n\nexport function setCommandContext(key: CommandContext | string, value: any) {\n    return commands.executeCommand(BuiltInCommands.SetContext, key, value);\n}\n\nexport enum DocumentSchemes {\n    DebugConsole = 'debug',\n    File = 'file',\n    Git = 'git',\n    GitLens = 'gitlens',\n    Output = 'output',\n    Vsls = 'vsls'\n}\n\nexport function getEditorIfActive(document: TextDocument): TextEditor | undefined {\n    const editor = window.activeTextEditor;\n    return editor != null && editor.document === document ? editor : undefined;\n}\n\nexport function isActiveDocument(document: TextDocument): boolean {\n    const editor = window.activeTextEditor;\n    return editor != null && editor.document === document;\n}\n\nexport function isTextEditor(editor: TextEditor): boolean {\n    const scheme = editor.document.uri.scheme;\n    return scheme !== DocumentSchemes.Output && scheme !== DocumentSchemes.DebugConsole;\n}\n\nexport enum GlyphChars {\n    AngleBracketLeftHeavy = '\\u2770',\n    AngleBracketRightHeavy = '\\u2771',\n    ArrowBack = '\\u21a9',\n    ArrowDown = '\\u2193',\n    ArrowDropRight = '\\u2937',\n    ArrowHeadRight = '\\u27A4',\n    ArrowLeft = '\\u2190',\n    ArrowLeftDouble = '\\u21d0',\n    ArrowLeftRight = '\\u2194',\n    ArrowLeftRightDouble = '\\u21d4',\n    ArrowLeftRightDoubleStrike = '\\u21ce',\n    ArrowLeftRightLong = '\\u27f7',\n    ArrowRight = '\\u2192',\n    ArrowRightDouble = '\\u21d2',\n    ArrowRightHollow = '\\u21e8',\n    ArrowUp = '\\u2191',\n    ArrowUpRight = '\\u2197',\n    ArrowsHalfLeftRight = '\\u21cb',\n    ArrowsHalfRightLeft = '\\u21cc',\n    ArrowsLeftRight = '\\u21c6',\n    ArrowsRightLeft = '\\u21c4',\n    Asterisk = '\\u2217',\n    Check = '\\u2713',\n    Dash = '\\u2014',\n    Dot = '\\u2022',\n    Ellipsis = '\\u2026',\n    EnDash = '\\u2013',\n    MiddleEllipsis = '\\u22EF',\n    MuchGreaterThan = '\\u226A',\n    MuchLessThan = '\\u22D8',\n    Pencil = '\\u270E',\n    Space = '\\u00a0',\n    SpaceThin = '\\u2009',\n    SpaceThinnest = '\\u200A',\n    SquareWithBottomShadow = '\\u274F',\n    SquareWithTopShadow = '\\u2750',\n    ZeroWidthSpace = '\\u200b'\n}\n\nexport enum GlobalState {\n    GitLensVersion = 'gitlensVersion'\n}\n\nexport const ImageMimetypes: { [key: string]: string } = {\n    '.png': 'image/png',\n    '.gif': 'image/gif',\n    '.jpg': 'image/jpeg',\n    '.jpeg': 'image/jpeg',\n    '.jpe': 'image/jpeg',\n    '.webp': 'image/webp',\n    '.tif': 'image/tiff',\n    '.tiff': 'image/tiff',\n    '.bmp': 'image/bmp'\n};\n\nexport interface NamedRef {\n    label?: string;\n    ref: string;\n}\n\nexport interface PinnedComparison {\n    path: string;\n    ref1: NamedRef;\n    ref2: NamedRef;\n}\n\nexport interface PinnedComparisons {\n    [id: string]: PinnedComparison;\n}\n\nexport interface StarredBranches {\n    [id: string]: boolean;\n}\n\nexport interface StarredRepositories {\n    [id: string]: boolean;\n}\n\nexport enum WorkspaceState {\n    DefaultRemote = 'gitlens:remote:default',\n    PinnedComparisons = 'gitlens:pinned:comparisons',\n    StarredBranches = 'gitlens:starred:branches',\n    StarredRepositories = 'gitlens:starred:repositories',\n    ViewsCompareKeepResults = 'gitlens:views:compare:keepResults',\n    ViewsRepositoriesAutoRefresh = 'gitlens:views:repositories:autoRefresh',\n    ViewsSearchKeepResults = 'gitlens:views:search:keepResults'\n}\n","'use strict';\nimport { Objects } from './object';\n\nexport namespace Arrays {\n    export function countUniques<T>(source: T[], accessor: (item: T) => string): { [key: string]: number } {\n        const uniqueCounts = Object.create(null);\n        for (const item of source) {\n            const value = accessor(item);\n            uniqueCounts[value] = (uniqueCounts[value] || 0) + 1;\n        }\n        return uniqueCounts;\n    }\n\n    export function filterMap<T, TMapped>(\n        source: T[],\n        predicateMapper: (item: T) => TMapped | null | undefined\n    ): TMapped[] {\n        return source.reduce(\n            (accumulator, current) => {\n                const mapped = predicateMapper(current);\n                if (mapped != null) {\n                    accumulator.push(mapped);\n                }\n                return accumulator;\n            },\n            [] as TMapped[]\n        );\n    }\n\n    export async function filterMapAsync<T, TMapped>(\n        source: T[],\n        predicateMapper: (item: T) => Promise<TMapped | null | undefined>\n    ): Promise<TMapped[]> {\n        return source.reduce(\n            async (accumulator, current) => {\n                const mapped = await predicateMapper(current);\n                if (mapped != null) {\n                    accumulator.push(mapped);\n                }\n                return accumulator;\n            },\n            [] as any\n        );\n    }\n\n    export function groupBy<T>(source: T[], accessor: (item: T) => string): { [key: string]: T[] } {\n        return source.reduce((groupings, current) => {\n            const value = accessor(current);\n            groupings[value] = groupings[value] || [];\n            groupings[value].push(current);\n            return groupings;\n        }, Object.create(null));\n    }\n\n    export function groupByMap<TKey, TValue>(source: TValue[], accessor: (item: TValue) => TKey): Map<TKey, TValue[]> {\n        return source.reduce((groupings, current) => {\n            const value = accessor(current);\n            const group = groupings.get(value) || [];\n            groupings.set(value, group);\n            group.push(current);\n            return groupings;\n        }, new Map<TKey, TValue[]>());\n    }\n\n    export function groupByFilterMap<TKey, TValue, TMapped>(\n        source: TValue[],\n        accessor: (item: TValue) => TKey,\n        predicateMapper: (item: TValue) => TMapped | null | undefined\n    ): Map<TKey, TMapped[]> {\n        return source.reduce((groupings, current) => {\n            const mapped = predicateMapper(current);\n            if (mapped != null) {\n                const value = accessor(current);\n                const group = groupings.get(value) || [];\n                groupings.set(value, group);\n                group.push(mapped);\n            }\n            return groupings;\n        }, new Map<TKey, TMapped[]>());\n    }\n\n    export interface IHierarchicalItem<T> {\n        name: string;\n        relativePath: string;\n        value?: T;\n\n        // parent?: IHierarchicalItem<T>;\n        children: Map<string, IHierarchicalItem<T>> | undefined;\n        descendants: T[] | undefined;\n    }\n\n    export function makeHierarchical<T>(\n        values: T[],\n        splitPath: (i: T) => string[],\n        joinPath: (...paths: string[]) => string,\n        compact: boolean = false\n    ): IHierarchicalItem<T> {\n        const seed = {\n            name: '',\n            relativePath: '',\n            children: new Map(),\n            descendants: []\n        };\n\n        const hierarchy = values.reduce((root: IHierarchicalItem<T>, value) => {\n            let folder = root;\n\n            let relativePath = '';\n            for (const folderName of splitPath(value)) {\n                relativePath = joinPath(relativePath, folderName);\n\n                if (folder.children === undefined) {\n                    folder.children = new Map();\n                }\n\n                let f = folder.children!.get(folderName);\n                if (f === undefined) {\n                    f = {\n                        name: folderName,\n                        relativePath: relativePath,\n                        // parent: folder,\n                        children: undefined,\n                        descendants: undefined\n                    };\n                    folder.children.set(folderName, f);\n                }\n\n                if (folder.descendants === undefined) {\n                    folder.descendants = [];\n                }\n                folder.descendants.push(value);\n                folder = f;\n            }\n\n            folder.value = value;\n\n            return root;\n        }, seed);\n\n        if (compact) return compactHierarchy(hierarchy, joinPath, true);\n        return hierarchy;\n    }\n\n    export function compactHierarchy<T>(\n        root: IHierarchicalItem<T>,\n        joinPath: (...paths: string[]) => string,\n        isRoot: boolean = true\n    ): IHierarchicalItem<T> {\n        if (root.children === undefined) return root;\n\n        const children = [...root.children.values()];\n\n        // // Attempts less nesting but duplicate roots\n        // if (!isRoot && children.every(c => c.value === undefined)) {\n        //     const parentSiblings = root.parent!.children!;\n        //     if (parentSiblings[root.name] !== undefined) {\n        //         delete parentSiblings[root.name];\n\n        //         for (const child of children) {\n        //             child.name = joinPath(root.name, child.name);\n        //             parentSiblings[child.name] = child;\n        //         }\n        //     }\n        // }\n\n        for (const child of children) {\n            compactHierarchy(child, joinPath, false);\n        }\n\n        if (!isRoot && children.length === 1) {\n            const child = children[0];\n            if (child.value === undefined) {\n                root.name = joinPath(root.name, child.name);\n                root.relativePath = child.relativePath;\n                root.children = child.children;\n            }\n        }\n\n        return root;\n    }\n\n    export function uniqueBy<T>(source: T[], accessor: (item: T) => any, predicate?: (item: T) => boolean): T[] {\n        const uniqueValues = Object.create(null);\n        return source.filter(item => {\n            const value = accessor(item);\n            if (uniqueValues[value]) return false;\n\n            uniqueValues[value] = accessor;\n            return predicate ? predicate(item) : true;\n        });\n    }\n}\n","'use strict';\nimport { distanceInWordsToNow as _fromNow, format as _format } from 'date-fns';\nimport * as en from 'date-fns/locale/en';\n\n// Taken from https://github.com/date-fns/date-fns/blob/601bc8e5708cbaebee5389bdaf51c2b4b33b73c4/src/locale/en/build_distance_in_words_locale/index.js\nfunction buildDistanceInWordsLocale() {\n    const distanceInWordsLocale: { [key: string]: string | { one: string; other: string } } = {\n        lessThanXSeconds: {\n            one: 'less than a second',\n            other: 'less than {{count}} seconds'\n        },\n\n        xSeconds: {\n            one: '1 second',\n            other: '{{count}} seconds'\n        },\n\n        halfAMinute: 'half a minute',\n\n        lessThanXMinutes: {\n            one: 'a few seconds',\n            other: 'less than {{count}} minutes'\n        },\n\n        xMinutes: {\n            one: 'a minute',\n            other: '{{count}} minutes'\n        },\n\n        aboutXHours: {\n            one: 'an hour',\n            other: '{{count}} hours'\n        },\n\n        xHours: {\n            one: 'an hour',\n            other: '{{count}} hours'\n        },\n\n        xDays: {\n            one: 'a day',\n            other: '{{count}} days'\n        },\n\n        aboutXMonths: {\n            one: 'a month',\n            other: '{{count}} months'\n        },\n\n        xMonths: {\n            one: 'a month',\n            other: '{{count}} months'\n        },\n\n        aboutXYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        },\n\n        xYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        },\n\n        overXYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        },\n\n        almostXYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        }\n    };\n\n    function localize(token: string, count: number, options: any) {\n        options = options || {};\n\n        if (count === 12 && token === 'xMonths') {\n            token = 'aboutXYears';\n            count = 1;\n        }\n\n        const result = distanceInWordsLocale[token];\n\n        let value: string;\n        if (typeof result === 'string') {\n            value = result;\n        }\n        else {\n            if (count === 1) {\n                value = result.one;\n            }\n            else {\n                value = result.other.replace('{{count}}', count.toString());\n            }\n        }\n\n        if (!options.addSuffix) return value;\n\n        if (options.comparison > 0) return 'in ' + value;\n\n        return value + ' ago';\n    }\n\n    return {\n        localize: localize\n    };\n}\n\n// Monkey patch the locale to customize the wording\nconst patch = en as any;\npatch.distanceInWords = buildDistanceInWordsLocale();\n\nconst formatterOptions = { addSuffix: true, locale: patch };\n\nexport namespace Dates {\n    export const MillisecondsPerMinute = 60000; // 60 * 1000\n    export const MillisecondsPerHour = 3600000; // 60 * 60 * 1000\n    export const MillisecondsPerDay = 86400000; // 24 * 60 * 60 * 1000\n\n    export interface IDateFormatter {\n        fromNow(): string;\n        format(format: string): string;\n    }\n\n    export function dateDaysFromNow(date: Date, now: number = Date.now()) {\n        const startOfDayLeft = startOfDay(now);\n        const startOfDayRight = startOfDay(date);\n\n        const timestampLeft = startOfDayLeft.getTime() - startOfDayLeft.getTimezoneOffset() * MillisecondsPerMinute;\n        const timestampRight = startOfDayRight.getTime() - startOfDayRight.getTimezoneOffset() * MillisecondsPerMinute;\n\n        return Math.round((timestampLeft - timestampRight) / MillisecondsPerDay);\n    }\n\n    export function startOfDay(date: Date | number) {\n        const newDate = new Date(typeof date === 'number' ? date : date.getTime());\n        newDate.setHours(0, 0, 0, 0);\n        return newDate;\n    }\n\n    export function toFormatter(date: Date): IDateFormatter {\n        return {\n            fromNow: () => {\n                return _fromNow(date, formatterOptions);\n            },\n            format: (format: string) => _format(date, format)\n        };\n    }\n}\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\nexport default before;\n","import before from './before.js';\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\nexport default once;\n","'use strict';\nimport { debounce as _debounce, once as _once } from 'lodash-es';\nimport { CancellationToken, Disposable } from 'vscode';\n\nexport interface IDeferrable {\n    cancel(): void;\n    flush(...args: any[]): void;\n    pending?(): boolean;\n}\n\ninterface IPropOfValue {\n    (): any;\n    value: string | undefined;\n}\n\nexport namespace Functions {\n    export function cachedOnce<T>(fn: (...args: any[]) => Promise<T>, seed: T): (...args: any[]) => Promise<T> {\n        let cached: T | undefined = seed;\n        return (...args: any[]) => {\n            if (cached !== undefined) {\n                const promise = Promise.resolve(cached);\n                cached = undefined;\n\n                return promise;\n            }\n            return fn(...args);\n        };\n    }\n\n    export function cancellable<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined> {\n        return new Promise<T | undefined>((resolve, reject) => {\n            token.onCancellationRequested(() => resolve(undefined));\n\n            promise.then(resolve, reject);\n        });\n    }\n\n    export function debounce<T extends (...args: any[]) => any>(\n        fn: T,\n        wait?: number,\n        options?: { leading?: boolean; maxWait?: number; track?: boolean; trailing?: boolean }\n    ): T & IDeferrable {\n        const { track, ...opts } = {\n            track: false,\n            ...(options || {})\n        } as { leading?: boolean; maxWait?: number; track?: boolean; trailing?: boolean };\n\n        if (track !== true) return _debounce(fn, wait, opts);\n\n        let pending = false;\n\n        const debounced = _debounce(\n            (function(this: any, ...args: any[]) {\n                pending = false;\n                return fn.apply(this, args);\n            } as any) as T,\n            wait,\n            options\n        ) as T & IDeferrable;\n\n        const tracked = (function(this: any, ...args: any[]) {\n            pending = true;\n            return debounced.apply(this, args);\n        } as any) as T & IDeferrable;\n\n        tracked.pending = function() {\n            return pending;\n        };\n        tracked.cancel = function() {\n            return debounced.cancel.apply(debounced);\n        };\n        tracked.flush = function(...args: any[]) {\n            return debounced.flush.apply(debounced, args);\n        };\n\n        return tracked;\n    }\n\n    const comma = ',';\n    const empty = '';\n    const equals = '=';\n    const openBrace = '{';\n    const openParen = '(';\n    const closeParen = ')';\n\n    const fnBodyRegex = /\\(([\\s\\S]*)\\)/;\n    const fnBodyStripCommentsRegex = /(\\/\\*([\\s\\S]*?)\\*\\/|([^:]|^)\\/\\/(.*)$)/gm;\n    const fnBodyStripParamDefaultValueRegex = /\\s?=.*$/;\n\n    export function getParameters(fn: Function): string[] {\n        if (typeof fn !== 'function') throw new Error('Not supported');\n\n        if (fn.length === 0) return [];\n\n        let fnBody: string = Function.prototype.toString.call(fn);\n        fnBody = fnBody.replace(fnBodyStripCommentsRegex, empty) || fnBody;\n        fnBody = fnBody.slice(0, fnBody.indexOf(openBrace));\n\n        let open = fnBody.indexOf(openParen);\n        let close = fnBody.indexOf(closeParen);\n\n        open = open >= 0 ? open + 1 : 0;\n        close = close > 0 ? close : fnBody.indexOf(equals);\n\n        fnBody = fnBody.slice(open, close);\n        fnBody = `(${fnBody})`;\n\n        const match = fnBody.match(fnBodyRegex);\n        return match != null\n            ? match[1].split(comma).map(param => param.trim().replace(fnBodyStripParamDefaultValueRegex, empty))\n            : [];\n    }\n\n    export function isPromise(o: any): o is Promise<any> {\n        return (typeof o === 'object' || typeof o === 'function') && typeof o.then === 'function';\n    }\n\n    export function once<T extends (...args: any[]) => any>(fn: T): T {\n        return _once(fn);\n    }\n\n    export function propOf<T, K extends Extract<keyof T, string>>(o: T, key: K) {\n        const propOfCore = <T, K extends Extract<keyof T, string>>(o: T, key: K) => {\n            const value: string =\n                (propOfCore as IPropOfValue).value === undefined ? key : `${(propOfCore as IPropOfValue).value}.${key}`;\n            (propOfCore as IPropOfValue).value = value;\n            const fn = <Y extends Extract<keyof T[K], string>>(k: Y) => propOfCore(o[key], k);\n            return Object.assign(fn, { value: value });\n        };\n        return propOfCore(o, key);\n    }\n\n    export function interval(fn: (...args: any[]) => void, ms: number): Disposable {\n        let timer: NodeJS.Timer | undefined;\n        const disposable = {\n            dispose: () => {\n                if (timer !== undefined) {\n                    clearInterval(timer);\n                    timer = undefined;\n                }\n            }\n        };\n        timer = setInterval(fn, ms);\n\n        return disposable;\n    }\n\n    export async function wait(ms: number) {\n        await new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    export async function waitUntil(fn: (...args: any[]) => boolean, timeout: number): Promise<boolean> {\n        const max = Math.round(timeout / 100);\n        let counter = 0;\n        while (true) {\n            if (fn()) return true;\n            if (counter > max) return false;\n\n            await wait(100);\n            counter++;\n        }\n    }\n}\n","'use strict';\nimport { Functions } from '../function';\n\nexport function gate() {\n    return (target: any, key: string, descriptor: PropertyDescriptor) => {\n        let fn: Function | undefined;\n        if (typeof descriptor.value === 'function') {\n            fn = descriptor.value;\n        }\n        else if (typeof descriptor.get === 'function') {\n            fn = descriptor.get;\n        }\n        if (fn == null) throw new Error('Not supported');\n\n        const gateKey = `$gate$${key}`;\n\n        descriptor.value = function(this: any, ...args: any[]) {\n            if (!this.hasOwnProperty(gateKey)) {\n                Object.defineProperty(this, gateKey, {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: undefined\n                });\n            }\n\n            let promise = this[gateKey];\n            if (promise === undefined) {\n                const result = fn!.apply(this, args);\n                if (result == null || !Functions.isPromise(result)) {\n                    return result;\n                }\n\n                this[gateKey] = promise = result.then((r: any) => {\n                    this[gateKey] = undefined;\n                    return r;\n                });\n            }\n\n            return promise;\n        };\n    };\n}\n","'use strict';\nimport { createHash, HexBase64Latin1Encoding } from 'crypto';\n\nexport namespace Strings {\n    export const enum CharCode {\n        /**\n         * The `/` character.\n         */\n        Slash = 47,\n        /**\n         * The `\\` character.\n         */\n        Backslash = 92\n    }\n\n    export function getDurationMilliseconds(start: [number, number]) {\n        const [secs, nanosecs] = process.hrtime(start);\n        return secs * 1000 + Math.floor(nanosecs / 1000000);\n    }\n\n    const pathNormalizeRegex = /\\\\/g;\n    const pathStripTrailingSlashRegex = /\\/$/g;\n    const tokenRegex = /\\$\\{(\\W*)?([^|]*?)(?:\\|(\\d+)(\\-|\\?)?)?(\\W*)?\\}/g;\n    const tokenSanitizeRegex = /\\$\\{(?:\\W*)?(\\w*?)(?:[\\W\\d]*)\\}/g;\n\n    export interface ITokenOptions {\n        collapseWhitespace: boolean;\n        padDirection: 'left' | 'right';\n        prefix: string | undefined;\n        suffix: string | undefined;\n        truncateTo: number | undefined;\n    }\n\n    export function getTokensFromTemplate(template: string) {\n        const tokens: { key: string; options: ITokenOptions }[] = [];\n\n        let match = tokenRegex.exec(template);\n        while (match != null) {\n            const [, prefix, key, truncateTo, option, suffix] = match;\n            tokens.push({\n                key: key,\n                options: {\n                    collapseWhitespace: option === '?',\n                    padDirection: option === '-' ? 'left' : 'right',\n                    prefix: prefix,\n                    suffix: suffix,\n                    truncateTo: truncateTo == null ? undefined : parseInt(truncateTo, 10)\n                }\n            });\n            match = tokenRegex.exec(template);\n        }\n\n        return tokens;\n    }\n\n    export function interpolate(template: string, context: object | undefined): string {\n        if (!template) return template;\n        if (context === undefined) return template.replace(tokenSanitizeRegex, '');\n\n        template = template.replace(tokenSanitizeRegex, '$${this.$1}');\n        return new Function(`return \\`${template}\\`;`).call(context);\n    }\n\n    export function* lines(s: string): IterableIterator<string> {\n        let i = 0;\n        while (i < s.length) {\n            let j = s.indexOf('\\n', i);\n            if (j === -1) {\n                j = s.length;\n            }\n\n            yield s.substring(i, j);\n            i = j + 1;\n        }\n    }\n\n    export function md5(s: string, encoding: HexBase64Latin1Encoding = 'base64'): string {\n        return createHash('md5')\n            .update(s)\n            .digest(encoding);\n    }\n\n    export function normalizePath(\n        fileName: string,\n        options: { addLeadingSlash?: boolean; stripTrailingSlash?: boolean } = { stripTrailingSlash: true }\n    ) {\n        if (fileName == null || fileName.length === 0) return fileName;\n\n        let normalized = fileName.replace(pathNormalizeRegex, '/');\n\n        const { addLeadingSlash, stripTrailingSlash } = { stripTrailingSlash: true, ...options };\n\n        if (stripTrailingSlash) {\n            normalized = normalized.replace(pathStripTrailingSlashRegex, '');\n        }\n\n        if (addLeadingSlash && normalized.charCodeAt(0) !== CharCode.Slash) {\n            normalized = `/${normalized}`;\n        }\n\n        return normalized;\n    }\n\n    export function pad(s: string, before: number = 0, after: number = 0, padding: string = `\\u00a0`) {\n        if (before === 0 && after === 0) return s;\n\n        return `${before === 0 ? '' : padding.repeat(before)}${s}${after === 0 ? '' : padding.repeat(after)}`;\n    }\n\n    export function padLeft(s: string, padTo: number, padding: string = '\\u00a0', width?: number) {\n        const diff = padTo - (width || getWidth(s));\n        return diff <= 0 ? s : padding.repeat(diff) + s;\n    }\n\n    export function padLeftOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        width = width || getWidth(s);\n        if (width < max) return padLeft(s, max, padding, width);\n        if (width > max) return truncate(s, max, undefined, width);\n        return s;\n    }\n\n    export function padRight(s: string, padTo: number, padding: string = '\\u00a0', width?: number) {\n        const diff = padTo - (width || getWidth(s));\n        return diff <= 0 ? s : s + padding.repeat(diff);\n    }\n\n    export function padOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        const left = max < 0;\n        max = Math.abs(max);\n\n        width = width || getWidth(s);\n        if (width < max) return left ? padLeft(s, max, padding, width) : padRight(s, max, padding, width);\n        if (width > max) return truncate(s, max, undefined, width);\n        return s;\n    }\n\n    export function padRightOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        width = width || getWidth(s);\n        if (width < max) return padRight(s, max, padding, width);\n        if (width > max) return truncate(s, max);\n        return s;\n    }\n\n    export function pluralize(\n        s: string,\n        count: number,\n        options?: { number?: string; plural?: string; suffix?: string; zero?: string }\n    ) {\n        if (options === undefined) return `${count} ${s}${count === 1 ? '' : 's'}`;\n\n        return `${count === 0 ? options.zero || count : options.number || count} ${\n            count === 1 ? s : options.plural || `${s}${options.suffix || 's'}`\n        }`;\n    }\n\n    // Removes \\ / : * ? \" < > | and C0 and C1 control codes\n    const illegalCharsForFSRegex = /[\\\\/:*?\"<>|\\x00-\\x1f\\x80-\\x9f]/g;\n\n    export function sanitizeForFileSystem(s: string, replacement: string = '_') {\n        if (!s) return s;\n        return s.replace(illegalCharsForFSRegex, replacement);\n    }\n\n    export function sha1(s: string, encoding: HexBase64Latin1Encoding = 'base64'): string {\n        return createHash('sha1')\n            .update(s)\n            .digest(encoding);\n    }\n\n    export function truncate(s: string, truncateTo: number, ellipsis: string = '\\u2026', width?: number) {\n        if (!s) return s;\n\n        width = width || getWidth(s);\n        if (width <= truncateTo) return s;\n        if (width === s.length) return `${s.substring(0, truncateTo - 1)}${ellipsis}`;\n\n        // Skip ahead to start as far as we can by assuming all the double-width characters won't be truncated\n        let chars = Math.floor(truncateTo / (width / s.length));\n        let count = getWidth(s.substring(0, chars));\n        while (count < truncateTo) {\n            count += getWidth(s[chars++]);\n        }\n\n        if (count >= truncateTo) {\n            chars--;\n        }\n\n        return `${s.substring(0, chars)}${ellipsis}`;\n    }\n\n    const ansiRegex = /[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[a-zA-Z\\\\d]*)*)?\\\\u0007)|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PRZcf-ntqry=><~]))/g;\n    const containsNonAsciiRegex = /[^\\x20-\\x7F\\u00a0\\u2026]/;\n\n    export function getWidth(s: string): number {\n        if (s == null || s.length === 0) return 0;\n\n        // Shortcut to avoid needless string `RegExp`s, replacements, and allocations\n        if (!containsNonAsciiRegex.test(s)) return s.length;\n\n        s = s.replace(ansiRegex, '');\n\n        let count = 0;\n        let emoji = 0;\n        let joiners = 0;\n\n        const graphemes = [...s];\n        for (let i = 0; i < graphemes.length; i++) {\n            const code = graphemes[i].codePointAt(0)!;\n\n            // Ignore control characters\n            if (code <= 0x1f || (code >= 0x7f && code <= 0x9f)) continue;\n\n            // Ignore combining characters\n            if (code >= 0x300 && code <= 0x36f) continue;\n\n            // https://stackoverflow.com/questions/30757193/find-out-if-character-in-string-is-emoji\n            if (\n                (code >= 0x1f600 && code <= 0x1f64f) || // Emoticons\n                (code >= 0x1f300 && code <= 0x1f5ff) || // Misc Symbols and Pictographs\n                (code >= 0x1f680 && code <= 0x1f6ff) || // Transport and Map\n                (code >= 0x2600 && code <= 0x26ff) || // Misc symbols\n                (code >= 0x2700 && code <= 0x27bf) || // Dingbats\n                (code >= 0xfe00 && code <= 0xfe0f) || // Variation Selectors\n                (code >= 0x1f900 && code <= 0x1f9ff) || // Supplemental Symbols and Pictographs\n                (code >= 65024 && code <= 65039) || // Variation selector\n                (code >= 8400 && code <= 8447) // Combining Diacritical Marks for Symbols\n            ) {\n                if (code >= 0x1f3fb && code <= 0x1f3ff) continue; // emoji modifier fitzpatrick type\n\n                emoji++;\n                count += 2;\n                continue;\n            }\n\n            // Ignore zero-width joiners '\\u200d'\n            if (code === 8205) {\n                joiners++;\n                count -= 2;\n                continue;\n            }\n\n            // Surrogates\n            if (code > 0xffff) {\n                i++;\n            }\n\n            count += isFullwidthCodePoint(code) ? 2 : 1;\n        }\n\n        const offset = emoji - joiners;\n        if (offset > 1) {\n            count += offset - 1;\n        }\n        return count;\n    }\n\n    function isFullwidthCodePoint(cp: number) {\n        // code points are derived from:\n        // http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n        if (\n            cp >= 0x1100 &&\n            (cp <= 0x115f || // Hangul Jamo\n            cp === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n            cp === 0x232a || // RIGHT-POINTING ANGLE BRACKET\n                // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n                (0x2e80 <= cp && cp <= 0x3247 && cp !== 0x303f) ||\n                // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n                (0x3250 <= cp && cp <= 0x4dbf) ||\n                // CJK Unified Ideographs .. Yi Radicals\n                (0x4e00 <= cp && cp <= 0xa4c6) ||\n                // Hangul Jamo Extended-A\n                (0xa960 <= cp && cp <= 0xa97c) ||\n                // Hangul Syllables\n                (0xac00 <= cp && cp <= 0xd7a3) ||\n                // CJK Compatibility Ideographs\n                (0xf900 <= cp && cp <= 0xfaff) ||\n                // Vertical Forms\n                (0xfe10 <= cp && cp <= 0xfe19) ||\n                // CJK Compatibility Forms .. Small Form Variants\n                (0xfe30 <= cp && cp <= 0xfe6b) ||\n                // Halfwidth and Fullwidth Forms\n                (0xff01 <= cp && cp <= 0xff60) ||\n                (0xffe0 <= cp && cp <= 0xffe6) ||\n                // Kana Supplement\n                (0x1b000 <= cp && cp <= 0x1b001) ||\n                // Enclosed Ideographic Supplement\n                (0x1f200 <= cp && cp <= 0x1f251) ||\n                // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n                (0x20000 <= cp && cp <= 0x3fffd))\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n}\n","'use strict';\nimport { LogCorrelationContext, Logger, LogLevel } from '../../logger';\nimport { Functions } from './../function';\nimport { Strings } from './../string';\n\nconst correlationContext = new Map<number, LogCorrelationContext>();\nlet correlationCounter = 0;\n\nexport function getCorrelationContext() {\n    return correlationContext.get(correlationCounter);\n}\n\nexport function getCorrelationId() {\n    return correlationCounter;\n}\n\nfunction getNextCorrelationId() {\n    if (correlationCounter === Number.MAX_SAFE_INTEGER) {\n        correlationCounter = 0;\n    }\n    return ++correlationCounter;\n}\n\nfunction clearCorrelationContext(correlationId: number) {\n    correlationContext.delete(correlationId);\n}\n\nfunction setCorrelationContext(correlationId: number, context: LogCorrelationContext) {\n    correlationContext.set(correlationId, context);\n}\n\nexport interface LogContext<T> {\n    id: number;\n    instance: T;\n    instanceName: string;\n    name: string;\n    prefix: string;\n}\n\nexport const LogInstanceNameFn = Symbol('logInstanceNameFn');\n\nexport function logName<T>(fn: (c: T, name: string) => string) {\n    return (target: Function) => {\n        (target as any)[LogInstanceNameFn] = fn;\n    };\n}\n\nexport function debug<T>(\n    options: {\n        args?: false | { [arg: string]: (arg: any) => string | false };\n        condition?(...args: any[]): boolean;\n        correlate?: boolean;\n        enter?(...args: any[]): string;\n        exit?(result: any): string;\n        prefix?(context: LogContext<T>, ...args: any[]): string;\n        sanitize?(key: string, value: any): any;\n        singleLine?: boolean;\n        timed?: boolean;\n    } = { timed: true }\n) {\n    return log<T>({ debug: true, ...options });\n}\n\nexport function log<T>(\n    options: {\n        args?: false | { [arg: number]: (arg: any) => string | false };\n        condition?(...args: any[]): boolean;\n        correlate?: boolean;\n        debug?: boolean;\n        enter?(...args: any[]): string;\n        exit?(result: any): string;\n        prefix?(context: LogContext<T>, ...args: any[]): string;\n        sanitize?(key: string, value: any): any;\n        singleLine?: boolean;\n        timed?: boolean;\n    } = { timed: true }\n) {\n    options = { timed: true, ...options };\n\n    const logFn = (options.debug ? Logger.debug.bind(Logger) : Logger.log.bind(Logger)) as\n        | typeof Logger.debug\n        | typeof Logger.log;\n\n    return (target: any, key: string, descriptor: PropertyDescriptor) => {\n        let fn: Function | undefined;\n        if (typeof descriptor.value === 'function') {\n            fn = descriptor.value;\n        }\n        else if (typeof descriptor.get === 'function') {\n            fn = descriptor.get;\n        }\n        if (fn == null) throw new Error('Not supported');\n\n        const parameters = Functions.getParameters(fn);\n\n        descriptor.value = function(this: any, ...args: any[]) {\n            const correlationId = getNextCorrelationId();\n\n            if (\n                (!Logger.isDebugging &&\n                    Logger.level !== LogLevel.Debug &&\n                    !(Logger.level === LogLevel.Verbose && !options.debug)) ||\n                (typeof options.condition === 'function' && !options.condition(...args))\n            ) {\n                return fn!.apply(this, args);\n            }\n\n            let instanceName: string;\n            if (this != null) {\n                instanceName = Logger.toLoggableName(this);\n                if (this.constructor != null && this.constructor[LogInstanceNameFn]) {\n                    instanceName = target.constructor[LogInstanceNameFn](this, instanceName);\n                }\n            }\n            else {\n                instanceName = '';\n            }\n\n            let { correlate } = options;\n            if (!correlate && options.timed) {\n                correlate = true;\n            }\n\n            let prefix = `${correlate ? `[${correlationId.toString(16)}] ` : ''}${\n                instanceName ? `${instanceName}.` : ''\n            }${key}`;\n\n            if (options.prefix != null) {\n                prefix = options.prefix(\n                    {\n                        id: correlationId,\n                        instance: this,\n                        instanceName: instanceName,\n                        name: key,\n                        prefix: prefix\n                    } as LogContext<T>,\n                    ...args\n                );\n            }\n\n            let correlationContext: LogCorrelationContext | undefined;\n            if (correlate) {\n                correlationContext = { correlationId: correlationId, prefix: prefix };\n                setCorrelationContext(correlationId, correlationContext);\n            }\n\n            const enter = options.enter != null ? options.enter(...args) : '';\n\n            let loggableParams: string;\n            if (options.args === false || args.length === 0) {\n                loggableParams = '';\n\n                if (!options.singleLine) {\n                    logFn(`${prefix}${enter}`);\n                }\n            }\n            else {\n                const argFns = typeof options.args === 'object' ? options.args : undefined;\n                let argFn;\n                let loggable;\n                loggableParams = args\n                    .map((v: any, index: number) => {\n                        const p = parameters[index];\n\n                        argFn = argFns !== undefined ? argFns[index] : undefined;\n                        if (argFn !== undefined) {\n                            loggable = argFn(v);\n                            if (loggable === false) return undefined;\n                        }\n                        else {\n                            loggable = Logger.toLoggable(v, options.sanitize);\n                        }\n\n                        return p ? `${p}=${loggable}` : loggable;\n                    })\n                    .filter(Boolean)\n                    .join(', ');\n\n                if (!options.singleLine) {\n                    if (!options.debug) {\n                        Logger.logWithDebugParams(`${prefix}${enter}`, loggableParams);\n                    }\n                    else {\n                        logFn(`${prefix}${enter}`, loggableParams);\n                    }\n                }\n            }\n\n            if (options.timed || options.exit != null) {\n                const start = options.timed ? process.hrtime() : undefined;\n\n                const logError = (ex: Error) => {\n                    const timing = start !== undefined ? ` \\u2022 ${Strings.getDurationMilliseconds(start)} ms` : '';\n                    if (options.singleLine) {\n                        Logger.error(\n                            ex,\n                            `${prefix}${enter}`,\n                            `failed${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : ''\n                            }${timing}`,\n                            loggableParams\n                        );\n                    }\n                    else {\n                        Logger.error(\n                            ex,\n                            prefix,\n                            `failed${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : ''\n                            }${timing}`\n                        );\n                    }\n\n                    if (correlate) {\n                        clearCorrelationContext(correlationId);\n                    }\n                };\n\n                let result;\n                try {\n                    result = fn!.apply(this, args);\n                }\n                catch (ex) {\n                    logError(ex);\n                    throw ex;\n                }\n\n                const logResult = (r: any) => {\n                    const timing = start !== undefined ? ` \\u2022 ${Strings.getDurationMilliseconds(start)} ms` : '';\n                    let exit;\n                    if (options.exit != null) {\n                        try {\n                            exit = options.exit(r);\n                        }\n                        catch (ex) {\n                            exit = `@log.exit error: ${ex}`;\n                        }\n                    }\n                    else {\n                        exit = 'completed';\n                    }\n\n                    if (options.singleLine) {\n                        if (!options.debug) {\n                            Logger.logWithDebugParams(\n                                `${prefix}${enter} ${exit}${\n                                    correlationContext !== undefined && correlationContext.exitDetails\n                                        ? correlationContext.exitDetails\n                                        : ''\n                                }${timing}`,\n                                loggableParams\n                            );\n                        }\n                        else {\n                            logFn(\n                                `${prefix}${enter} ${exit}${\n                                    correlationContext !== undefined && correlationContext.exitDetails\n                                        ? correlationContext.exitDetails\n                                        : ''\n                                }${timing}`,\n                                loggableParams\n                            );\n                        }\n                    }\n                    else {\n                        logFn(\n                            `${prefix} ${exit}${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : ''\n                            }${timing}`\n                        );\n                    }\n\n                    if (correlate) {\n                        clearCorrelationContext(correlationId);\n                    }\n                };\n\n                if (result != null && Functions.isPromise(result)) {\n                    const promise = result.then(logResult);\n                    promise.catch(logError);\n                }\n                else {\n                    logResult(result);\n                }\n\n                return result;\n            }\n\n            return fn!.apply(this, args);\n        };\n    };\n}\n","'use strict';\n\nexport namespace Iterables {\n    export function count<T>(source: Iterable<T> | IterableIterator<T>, predicate?: (item: T) => boolean): number {\n        let count = 0;\n        let next: IteratorResult<T>;\n\n        while (true) {\n            next = (source as IterableIterator<T>).next();\n            if (next.done) break;\n\n            if (predicate === undefined || predicate(next.value)) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n\n    export function every<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): boolean {\n        for (const item of source) {\n            if (!predicate(item)) return false;\n        }\n        return true;\n    }\n\n    export function filter<T>(\n        source: Iterable<T | undefined | null> | IterableIterator<T | undefined | null>\n    ): Iterable<T>;\n    export function filter<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): Iterable<T>;\n    export function* filter<T>(\n        source: Iterable<T> | IterableIterator<T>,\n        predicate?: (item: T) => boolean\n    ): Iterable<T> {\n        if (predicate === undefined) {\n            for (const item of source) {\n                if (item != null) yield item;\n            }\n        }\n        else {\n            for (const item of source) {\n                if (predicate(item)) yield item;\n            }\n        }\n    }\n\n    export function* filterMap<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        predicateMapper: (item: T) => TMapped | undefined | null\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            const mapped = predicateMapper(item);\n            if (mapped != null) yield mapped;\n        }\n    }\n\n    export function forEach<T>(source: Iterable<T> | IterableIterator<T>, fn: (item: T, index: number) => void): void {\n        let i = 0;\n        for (const item of source) {\n            fn(item, i);\n            i++;\n        }\n    }\n\n    export function find<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): T | null {\n        for (const item of source) {\n            if (predicate(item)) return item;\n        }\n        return null;\n    }\n\n    export function first<T>(source: Iterable<T>): T {\n        return source[Symbol.iterator]().next().value;\n    }\n\n    export function* flatMap<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        mapper: (item: T) => Iterable<TMapped>\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            yield* mapper(item);\n        }\n    }\n\n    export function has<T>(source: Iterable<T> | IterableIterator<T>, item: T): boolean {\n        return some(source, i => i === item);\n    }\n\n    export function isIterable(source: Iterable<any>): boolean {\n        return typeof source[Symbol.iterator] === 'function';\n    }\n\n    export function join(source: Iterable<any>, separator: string): string {\n        let value = '';\n\n        const iterator = source[Symbol.iterator]();\n        let next = iterator.next();\n        if (next.done) return value;\n\n        while (true) {\n            const s = next.value.toString();\n\n            next = iterator.next();\n            if (next.done) {\n                value += s;\n                break;\n            }\n\n            value += `${s}${separator}`;\n        }\n\n        return value;\n    }\n\n    export function last<T>(source: Iterable<T>): T | null {\n        let item: T | null = null;\n        for (item of source) {\n            /* noop */\n        }\n        return item;\n    }\n\n    export function* map<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        mapper: (item: T) => TMapped\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            yield mapper(item);\n        }\n    }\n\n    export function next<T>(source: IterableIterator<T>): T {\n        return source.next().value;\n    }\n\n    export function* skip<T>(source: Iterable<T> | IterableIterator<T>, count: number): IterableIterator<T> {\n        let i = 0;\n        for (const item of source) {\n            if (i >= count) yield item;\n            i++;\n        }\n    }\n\n    export function some<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): boolean {\n        for (const item of source) {\n            if (predicate(item)) return true;\n        }\n        return false;\n    }\n\n    export function* take<T>(source: Iterable<T> | IterableIterator<T>, count: number): Iterable<T> {\n        if (count > 0) {\n            let i = 0;\n            for (const item of source) {\n                yield item;\n                i++;\n                if (i >= count) break;\n            }\n        }\n    }\n\n    export function* union<T>(...sources: (Iterable<T> | IterableIterator<T>)[]): Iterable<T> {\n        for (const source of sources) {\n            for (const item of source) {\n                yield item;\n            }\n        }\n    }\n}\n","'use strict';\n\nexport namespace Objects {\n    export function entries<T>(o: { [key: string]: T }): IterableIterator<[string, T]>;\n    export function entries<T>(o: { [key: number]: T }): IterableIterator<[string, T]>;\n    export function* entries<T>(o: any): IterableIterator<[string, T]> {\n        for (const key in o) {\n            yield [key, o[key]];\n        }\n    }\n\n    export function flatten(o: any, prefix: string = '', stringify: boolean = false): { [key: string]: any } {\n        const flattened = Object.create(null);\n        _flatten(flattened, prefix, o, stringify);\n        return flattened;\n    }\n\n    function _flatten(flattened: { [key: string]: any }, key: string, value: any, stringify: boolean = false) {\n        if (Object(value) !== value) {\n            if (stringify) {\n                if (value == null) {\n                    flattened[key] = null;\n                }\n                else if (typeof value === 'string') {\n                    flattened[key] = value;\n                }\n                else {\n                    flattened[key] = JSON.stringify(value);\n                }\n            }\n            else {\n                flattened[key] = value;\n            }\n        }\n        else if (Array.isArray(value)) {\n            const len = value.length;\n            for (let i = 0; i < len; i++) {\n                _flatten(flattened, `${key}[${i}]`, value[i], stringify);\n            }\n            if (len === 0) {\n                flattened[key] = null;\n            }\n        }\n        else {\n            let isEmpty = true;\n            for (const p in value) {\n                isEmpty = false;\n                _flatten(flattened, key ? `${key}.${p}` : p, value[p], stringify);\n            }\n            if (isEmpty && key) {\n                flattened[key] = null;\n            }\n        }\n    }\n\n    export function paths(o: { [key: string]: any }, path?: string): string[] {\n        const results = [];\n\n        for (const key in o) {\n            const child = o[key];\n            if (typeof child === 'object') {\n                results.push(...paths(child, path === undefined ? key : `${path}.${key}`));\n            }\n            else {\n                results.push(path === undefined ? key : `${path}.${key}`);\n            }\n        }\n\n        return results;\n    }\n\n    export function values<T>(o: { [key: string]: T }): IterableIterator<T>;\n    export function values<T>(o: { [key: number]: T }): IterableIterator<T>;\n    export function* values<T>(o: any): IterableIterator<T> {\n        for (const key in o) {\n            yield o[key];\n        }\n    }\n}\n","'use strict';\n\nexport namespace Versions {\n    declare type VersionComparisonResult = -1 | 0 | 1;\n\n    export interface Version {\n        major: number;\n        minor: number;\n        patch: number;\n        pre?: string;\n    }\n\n    export function compare(v1: Version, v2: Version): VersionComparisonResult {\n        if (v1.major > v2.major) return 1;\n        if (v1.major < v2.major) return -1;\n\n        if (v1.minor > v2.minor) return 1;\n        if (v1.minor < v2.minor) return -1;\n\n        if (v1.patch > v2.patch) return 1;\n        if (v1.patch < v2.patch) return -1;\n\n        if (v1.pre === undefined && v2.pre !== undefined) return 1;\n        if (v1.pre !== undefined && v2.pre === undefined) return -1;\n\n        if (v1.pre !== undefined && v2.pre !== undefined) {\n            return v1.pre.localeCompare(v2.pre) as VersionComparisonResult;\n        }\n\n        return 0;\n    }\n\n    export function from(\n        major: string | number,\n        minor: string | number,\n        patch: string | number,\n        pre?: string\n    ): Version {\n        return {\n            major: typeof major === 'string' ? parseInt(major, 10) : major,\n            minor: typeof minor === 'string' ? parseInt(minor, 10) : minor,\n            patch: typeof patch === 'string' ? parseInt(patch, 10) : patch,\n            pre: pre\n        };\n    }\n\n    export function fromString(version: string): Version {\n        const [ver, pre] = version.split('-');\n        const [major, minor, patch] = ver.split('.');\n        return from(major, minor, patch, pre);\n    }\n}\n","'use strict';\nimport { Iterables } from './iterable';\nimport { Strings } from './string';\n\n// Code stolen from https://github.com/Microsoft/vscode/blob/b3e6d5bb039a4a9362b52a2c8726267ca68cf64e/src/vs/base/common/map.ts#L352\n\nexport interface IKeyIterator {\n    reset(key: string): this;\n    next(): this;\n\n    hasNext(): boolean;\n    cmp(a: string): number;\n    value(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n    private _value: string = '';\n    private _pos: number = 0;\n\n    reset(key: string): this {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    }\n\n    next(): this {\n        this._pos += 1;\n        return this;\n    }\n\n    hasNext(): boolean {\n        return this._pos < this._value.length - 1;\n    }\n\n    cmp(a: string): number {\n        const aCode = a.charCodeAt(0);\n        const thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    }\n\n    value(): string {\n        return this._value[this._pos];\n    }\n}\n\nexport class PathIterator implements IKeyIterator {\n    private _value!: string;\n    private _from!: number;\n    private _to!: number;\n\n    reset(key: string): this {\n        this._value = key.replace(/\\\\$|\\/$/, '');\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    }\n\n    hasNext(): boolean {\n        return this._to < this._value.length;\n    }\n\n    next(): this {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === Strings.CharCode.Slash || ch === Strings.CharCode.Backslash) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n\n    cmp(a: string): number {\n        let aPos = 0;\n        const aLen = a.length;\n        let thisPos = this._from;\n\n        while (aPos < aLen && thisPos < this._to) {\n            const cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n            if (cmp !== 0) {\n                return cmp;\n            }\n            aPos += 1;\n            thisPos += 1;\n        }\n\n        if (aLen === this._to - this._from) {\n            return 0;\n        }\n        else if (aPos < aLen) {\n            return -1;\n        }\n        else {\n            return 1;\n        }\n    }\n\n    value(): string {\n        return this._value.substring(this._from, this._to);\n    }\n}\n\nclass TernarySearchTreeNode<E> {\n    segment!: string;\n    value: E | undefined;\n    key!: string;\n    left: TernarySearchTreeNode<E> | undefined;\n    mid: TernarySearchTreeNode<E> | undefined;\n    right: TernarySearchTreeNode<E> | undefined;\n\n    isEmpty(): boolean {\n        return !this.left && !this.mid && !this.right && !this.value;\n    }\n}\n\nexport class TernarySearchTree<E> {\n    static forPaths<E>(): TernarySearchTree<E> {\n        return new TernarySearchTree<E>(new PathIterator());\n    }\n\n    static forStrings<E>(): TernarySearchTree<E> {\n        return new TernarySearchTree<E>(new StringIterator());\n    }\n\n    private _iter: IKeyIterator;\n    private _root: TernarySearchTreeNode<E> | undefined;\n\n    constructor(segments: IKeyIterator) {\n        this._iter = segments;\n    }\n\n    clear(): void {\n        this._root = undefined;\n    }\n\n    set(key: string, element: E): E | undefined {\n        const iter = this._iter.reset(key);\n        let node: TernarySearchTreeNode<E>;\n\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode<E>();\n            this._root.segment = iter.value();\n        }\n\n        node = this._root;\n        while (true) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode<E>();\n                    node.left.segment = iter.value();\n                }\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode<E>();\n                    node.right.segment = iter.value();\n                }\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode<E>();\n                    node.mid.segment = iter.value();\n                }\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        const oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        return oldElement;\n    }\n\n    get(key: string): E | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node ? node.value : undefined;\n    }\n\n    delete(key: string): void {\n        const iter = this._iter.reset(key);\n        const stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n        let node = this._root;\n\n        // find and unset node\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([1, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([-1, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0, node]);\n                node = node.mid;\n            }\n            else {\n                // remove element\n                node.value = undefined;\n\n                // clean up empty nodes\n                while (stack.length > 0 && node.isEmpty()) {\n                    const [dir, parent] = stack.pop()!;\n                    switch (dir) {\n                        case 1:\n                            parent.left = undefined;\n                            break;\n                        case 0:\n                            parent.mid = undefined;\n                            break;\n                        case -1:\n                            parent.right = undefined;\n                            break;\n                    }\n                    node = parent;\n                }\n                break;\n            }\n        }\n    }\n\n    findSubstr(key: string): E | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        let candidate: E | undefined;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return (node && node.value) || candidate;\n    }\n\n    findSuperstr(key: string, limit: boolean = false): Iterable<E> | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    return undefined;\n                }\n                else {\n                    node = node.mid;\n                    return {\n                        [Symbol.iterator]: () => this._nodeIterator(node!, limit)\n                    };\n                }\n            }\n        }\n        return undefined;\n    }\n\n    private _nodeIterator(node: TernarySearchTreeNode<E>, limit: boolean = false): Iterator<E> {\n        const res = {\n            done: false,\n            value: undefined! as E\n        };\n        let idx: number;\n        let data: E[];\n        const next = () => {\n            if (!data) {\n                // lazy till first invocation\n                data = [];\n                idx = 0;\n                this._forEach(node, value => data.push(value), limit);\n            }\n            if (idx >= data.length) {\n                res.done = true;\n                res.value = undefined!;\n            }\n            else {\n                res.done = false;\n                res.value = data[idx++];\n            }\n            return res;\n        };\n        return { next };\n    }\n\n    forEach(callback: (value: E, index: string) => any) {\n        this._forEach(this._root!, callback);\n    }\n\n    private _forEach(\n        node: TernarySearchTreeNode<E>,\n        callback: (value: E, index: string) => any,\n        limit: boolean = false\n    ) {\n        if (node === undefined) return;\n\n        // left\n        this._forEach(node.left!, callback, limit);\n\n        // node\n        if (node.value) {\n            callback(node.value, node.key);\n        }\n\n        if (!limit) {\n            // mid\n            this._forEach(node.mid!, callback, limit);\n        }\n\n        // right\n        this._forEach(node.right!, callback, limit);\n    }\n\n    any(): boolean {\n        return this._root !== undefined && !this._root.isEmpty();\n    }\n\n    count(predicate?: (entry: E) => boolean): number {\n        if (this._root === undefined || this._root.isEmpty()) return 0;\n\n        return Iterables.count(this.entries(), predicate === undefined ? undefined : ([e]) => predicate(e));\n    }\n\n    entries(): Iterable<[E, string]> {\n        return this._iterator(this._root!);\n    }\n\n    values(): Iterable<E> {\n        return Iterables.map(this.entries(), ([e]) => e);\n    }\n\n    highlander(): [E, string] | undefined {\n        if (this._root === undefined || this._root.isEmpty()) return undefined;\n\n        const entries = this.entries() as IterableIterator<[E, string]>;\n\n        let count = 0;\n        let next: IteratorResult<[E, string]>;\n        let value: [E, string] | undefined;\n\n        while (true) {\n            next = entries.next();\n            if (next.done) break;\n\n            value = next.value;\n\n            count++;\n            if (count > 1) return undefined;\n        }\n\n        return value;\n    }\n\n    some(predicate: (entry: E) => boolean): boolean {\n        if (this._root === undefined || this._root.isEmpty()) return false;\n\n        return Iterables.some(this.entries(), ([e]) => predicate(e));\n    }\n\n    private *_iterator(node: TernarySearchTreeNode<E> | undefined): IterableIterator<[E, string]> {\n        if (node !== undefined) {\n            // left\n            yield* this._iterator(node.left!);\n\n            // node\n            if (node.value) {\n                yield [node.value, node.key];\n            }\n\n            // mid\n            yield* this._iterator(node.mid!);\n\n            // right\n            yield* this._iterator(node.right!);\n        }\n    }\n}\n","'use strict';\nimport { ConfigurationChangeEvent, ExtensionContext, OutputChannel, Uri, window } from 'vscode';\nimport { configuration, LogLevel } from './configuration';\nimport { extensionOutputChannelName } from './constants';\nimport { getCorrelationContext } from './system';\n// import { Telemetry } from './telemetry';\n\nexport { LogLevel } from './configuration';\n\nconst ConsolePrefix = `[${extensionOutputChannelName}]`;\n\nconst isDebuggingRegex = /\\bgitlens\\b/i;\n\nexport interface LogCorrelationContext {\n    readonly correlationId?: number;\n    readonly prefix: string;\n    exitDetails?: string;\n}\n\nexport class Logger {\n    static level: LogLevel = LogLevel.Silent;\n    static output: OutputChannel | undefined;\n    static customLoggableFn: ((o: object) => string | undefined) | undefined;\n\n    static configure(context: ExtensionContext, loggableFn?: (o: any) => string | undefined) {\n        this.customLoggableFn = loggableFn;\n\n        context.subscriptions.push(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    private static onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('outputLevel').value;\n        if (configuration.changed(e, section)) {\n            this.level = configuration.get<LogLevel>(section);\n\n            if (this.level === LogLevel.Silent) {\n                if (this.output !== undefined) {\n                    this.output.dispose();\n                    this.output = undefined;\n                }\n            }\n            else {\n                this.output = this.output || window.createOutputChannel(extensionOutputChannelName);\n            }\n        }\n    }\n\n    static debug(message: string, ...params: any[]): void;\n    static debug(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static debug(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== LogLevel.Debug && !Logger.isDebugging) return;\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && this.level === LogLevel.Debug) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(true, params)}`);\n        }\n    }\n\n    static error(ex: Error, message?: string, ...params: any[]): void;\n    static error(ex: Error, context?: LogCorrelationContext, message?: string, ...params: any[]): void;\n    static error(ex: Error, contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level === LogLevel.Silent && !Logger.isDebugging) return;\n\n        let message;\n        if (contextOrMessage === undefined || typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (message === undefined) {\n            const stack = ex.stack;\n            if (stack) {\n                const match = /.*\\s*?at\\s(.+?)\\s/.exec(stack);\n                if (match != null) {\n                    message = match[1];\n                }\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.error(this.timestamp, ConsolePrefix, message || '', ...params, ex);\n        }\n\n        if (this.output !== undefined && this.level !== LogLevel.Silent) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(false, params)}\\n${ex}`);\n        }\n\n        // Telemetry.trackException(ex);\n    }\n\n    static getCorrelationContext() {\n        return getCorrelationContext();\n    }\n\n    static log(message: string, ...params: any[]): void;\n    static log(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static log(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== LogLevel.Verbose && this.level !== LogLevel.Debug && !Logger.isDebugging) {\n            return;\n        }\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && (this.level === LogLevel.Verbose || this.level === LogLevel.Debug)) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(false, params)}`);\n        }\n    }\n\n    static logWithDebugParams(message: string, ...params: any[]): void;\n    static logWithDebugParams(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static logWithDebugParams(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== LogLevel.Verbose && this.level !== LogLevel.Debug && !Logger.isDebugging) {\n            return;\n        }\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && (this.level === LogLevel.Verbose || this.level === LogLevel.Debug)) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(true, params)}`);\n        }\n    }\n\n    static warn(message: string, ...params: any[]): void;\n    static warn(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static warn(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level === LogLevel.Silent && !Logger.isDebugging) return;\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.warn(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && this.level !== LogLevel.Silent) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(false, params)}`);\n        }\n    }\n\n    static showOutputChannel() {\n        if (this.output === undefined) return;\n\n        this.output.show();\n    }\n\n    static toLoggable(p: any, sanitize?: ((key: string, value: any) => any) | undefined) {\n        if (typeof p !== 'object') return String(p);\n        if (this.customLoggableFn !== undefined) {\n            const loggable = this.customLoggableFn(p);\n            if (loggable != null) return loggable;\n        }\n        if (p instanceof Uri) return `Uri(${p.toString(true)})`;\n\n        try {\n            return JSON.stringify(p, sanitize);\n        }\n        catch {\n            return `<error>`;\n        }\n    }\n\n    static toLoggableName(instance: Function | object) {\n        let name;\n        if (typeof instance === 'function') {\n            if (instance.prototype == null || instance.prototype.constructor == null) {\n                return instance.name;\n            }\n\n            name = instance.prototype.constructor.name;\n        }\n        else {\n            name = instance.constructor != null ? instance.constructor.name : '';\n        }\n\n        // Strip webpack module name (since I never name classes with an _)\n        const index = name.indexOf('_');\n        return index === -1 ? name : name.substr(index + 1);\n    }\n\n    private static get timestamp(): string {\n        const now = new Date();\n        return `[${now\n            .toISOString()\n            .replace(/T/, ' ')\n            .replace(/\\..+/, '')}:${('00' + now.getUTCMilliseconds()).slice(-3)}]`;\n    }\n\n    static gitOutput: OutputChannel | undefined;\n\n    static logGitCommand(command: string, ex?: Error): void {\n        if (this.level !== LogLevel.Debug) return;\n\n        if (this.gitOutput === undefined) {\n            this.gitOutput = window.createOutputChannel(`${extensionOutputChannelName} (Git)`);\n        }\n        this.gitOutput.appendLine(`${this.timestamp} ${command}${ex != null ? `\\n\\n${ex.toString()}` : ''}`);\n    }\n\n    private static toLoggableParams(debugOnly: boolean, params: any[]) {\n        if (params.length === 0 || (debugOnly && this.level !== LogLevel.Debug && !Logger.isDebugging)) {\n            return '';\n        }\n\n        const loggableParams = params.map(p => this.toLoggable(p)).join(', ');\n        return ` \\u2014 ${loggableParams}` || '';\n    }\n\n    private static _isDebugging: boolean | undefined;\n    static get isDebugging() {\n        if (this._isDebugging === undefined) {\n            const env = process.env;\n            this._isDebugging =\n                env && env.VSCODE_DEBUGGING_EXTENSION ? isDebuggingRegex.test(env.VSCODE_DEBUGGING_EXTENSION) : false;\n        }\n\n        return this._isDebugging;\n    }\n}\n","'use strict';\nimport {\n    DecorationOptions,\n    Disposable,\n    Range,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType,\n    TextEditorSelectionChangeEvent,\n    Uri,\n    window\n} from 'vscode';\nimport { TextDocumentComparer } from '../comparers';\nimport { FileAnnotationType } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Functions } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\n\nexport enum AnnotationStatus {\n    Computing = 'computing',\n    Computed = 'computed'\n}\n\nexport type TextEditorCorrelationKey = string;\n\nexport abstract class AnnotationProviderBase implements Disposable {\n    static getCorrelationKey(editor: TextEditor | undefined): TextEditorCorrelationKey {\n        return editor !== undefined ? (editor as any).id : '';\n    }\n\n    annotationType: FileAnnotationType | undefined;\n    correlationKey: TextEditorCorrelationKey;\n    document: TextDocument;\n    status: AnnotationStatus | undefined;\n\n    protected decorations: DecorationOptions[] | undefined;\n    protected disposable: Disposable;\n\n    constructor(\n        public editor: TextEditor,\n        protected readonly trackedDocument: TrackedDocument<GitDocumentState>,\n        protected decoration: TextEditorDecorationType,\n        protected highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        this.correlationKey = AnnotationProviderBase.getCorrelationKey(this.editor);\n        this.document = this.editor.document;\n\n        this.disposable = Disposable.from(\n            window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged, this)\n        );\n    }\n\n    dispose() {\n        this.clear();\n\n        this.disposable && this.disposable.dispose();\n    }\n\n    private async onTextEditorSelectionChanged(e: TextEditorSelectionChangeEvent) {\n        if (!TextDocumentComparer.equals(this.document, e.textEditor && e.textEditor.document)) return;\n\n        return this.selection(e.selections[0].active.line);\n    }\n\n    get editorId(): string {\n        if (this.editor === undefined || this.editor.document === undefined) return '';\n        return (this.editor as any).id;\n    }\n\n    get editorUri(): Uri | undefined {\n        if (this.editor === undefined || this.editor.document === undefined) return undefined;\n        return this.editor.document.uri;\n    }\n\n    protected additionalDecorations: { decoration: TextEditorDecorationType; ranges: Range[] }[] | undefined;\n\n    clear() {\n        this.status = undefined;\n        if (this.editor === undefined) return;\n\n        if (this.decoration !== undefined) {\n            try {\n                this.editor.setDecorations(this.decoration, []);\n            }\n            catch {}\n        }\n\n        if (this.additionalDecorations !== undefined && this.additionalDecorations.length > 0) {\n            for (const d of this.additionalDecorations) {\n                try {\n                    this.editor.setDecorations(d.decoration, []);\n                }\n                catch {}\n            }\n\n            this.additionalDecorations = undefined;\n        }\n\n        if (this.highlightDecoration !== undefined) {\n            try {\n                this.editor.setDecorations(this.highlightDecoration, []);\n            }\n            catch {}\n        }\n    }\n\n    private _resetDebounced:\n        | ((changes?: {\n              decoration: TextEditorDecorationType;\n              highlightDecoration: TextEditorDecorationType | undefined;\n          }) => void)\n        | undefined;\n\n    reset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (this._resetDebounced === undefined) {\n            this._resetDebounced = Functions.debounce(this.onReset, 250);\n        }\n\n        this._resetDebounced(changes);\n    }\n\n    async onReset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (changes !== undefined) {\n            this.clear();\n\n            this.decoration = changes.decoration;\n            this.highlightDecoration = changes.highlightDecoration;\n        }\n\n        await this.provideAnnotation(this.editor === undefined ? undefined : this.editor.selection.active.line);\n    }\n\n    async restore(editor: TextEditor) {\n        // If the editor isn't disposed then we don't need to do anything\n        // Explicitly check for `false`\n        if ((this.editor as any)._disposed === false) return;\n\n        this.status = AnnotationStatus.Computing;\n        if (editor === window.activeTextEditor) {\n            await setCommandContext(CommandContext.AnnotationStatus, this.status);\n        }\n\n        this.editor = editor;\n        this.correlationKey = AnnotationProviderBase.getCorrelationKey(editor);\n        this.document = editor.document;\n\n        if (this.decorations !== undefined && this.decorations.length) {\n            this.editor.setDecorations(this.decoration, this.decorations);\n\n            if (this.additionalDecorations !== undefined && this.additionalDecorations.length) {\n                for (const d of this.additionalDecorations) {\n                    this.editor.setDecorations(d.decoration, d.ranges);\n                }\n            }\n        }\n\n        this.status = AnnotationStatus.Computed;\n        if (editor === window.activeTextEditor) {\n            await setCommandContext(CommandContext.AnnotationStatus, this.status);\n            await this.selection(editor.selection.active.line);\n        }\n    }\n\n    async provideAnnotation(shaOrLine?: string | number): Promise<boolean> {\n        this.status = AnnotationStatus.Computing;\n        if (await this.onProvideAnnotation(shaOrLine)) {\n            this.status = AnnotationStatus.Computed;\n            return true;\n        }\n\n        this.status = undefined;\n        return false;\n    }\n\n    abstract async onProvideAnnotation(shaOrLine?: string | number): Promise<boolean>;\n    abstract async selection(shaOrLine?: string | number): Promise<void>;\n    abstract async validate(): Promise<boolean>;\n}\n","'use strict';\nimport { commands, ConfigurationTarget, MessageItem, Uri, window } from 'vscode';\nimport { Commands } from './commands';\nimport { configuration } from './configuration';\nimport { BuiltInCommands, CommandContext, setCommandContext } from './constants';\nimport { GitCommit } from './git/gitService';\nimport { Logger } from './logger';\n\nexport enum SuppressedMessages {\n    CommitHasNoPreviousCommitWarning = 'suppressCommitHasNoPreviousCommitWarning',\n    CommitNotFoundWarning = 'suppressCommitNotFoundWarning',\n    FileNotUnderSourceControlWarning = 'suppressFileNotUnderSourceControlWarning',\n    GitDisabledWarning = 'suppressGitDisabledWarning',\n    GitVersionWarning = 'suppressGitVersionWarning',\n    LineUncommittedWarning = 'suppressLineUncommittedWarning',\n    NoRepositoryWarning = 'suppressNoRepositoryWarning',\n    SupportGitLensNotification = 'suppressSupportGitLensNotification'\n}\n\nexport class Messages {\n    static showCommitHasNoPreviousCommitWarningMessage(commit?: GitCommit): Promise<MessageItem | undefined> {\n        if (commit === undefined) {\n            return Messages.showMessage(\n                'info',\n                `Commit has no previous commit.`,\n                SuppressedMessages.CommitHasNoPreviousCommitWarning\n            );\n        }\n        return Messages.showMessage(\n            'info',\n            `Commit ${commit.shortSha} (${commit.author}, ${commit.formattedDate}) has no previous commit.`,\n            SuppressedMessages.CommitHasNoPreviousCommitWarning\n        );\n    }\n\n    static showCommitNotFoundWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The commit could not be found.`,\n            SuppressedMessages.CommitNotFoundWarning\n        );\n    }\n\n    static async showGenericErrorMessage(message: string): Promise<MessageItem | undefined> {\n        const actions: MessageItem[] = [{ title: 'Open Output Channel' }];\n        const result = await Messages.showMessage(\n            'error',\n            `${message}. See output channel for more details`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result !== undefined) {\n            Logger.showOutputChannel();\n        }\n        return result;\n    }\n\n    static showFileNotUnderSourceControlWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The file is probably not under source control.`,\n            SuppressedMessages.FileNotUnderSourceControlWarning\n        );\n    }\n\n    static showGitDisabledErrorMessage() {\n        return Messages.showMessage(\n            'error',\n            `GitLens requires Git to be enabled. Please re-enable Git \\u2014 set \\`git.enabled\\` to true and reload`,\n            SuppressedMessages.GitDisabledWarning\n        );\n    }\n\n    static showGitVersionUnsupportedErrorMessage(version: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'error',\n            `GitLens requires a newer version of Git (>= 2.2.0) than is currently installed (${version}). Please install a more recent version of Git.`,\n            SuppressedMessages.GitVersionWarning\n        );\n    }\n\n    static showLineUncommittedWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The line has uncommitted changes.`,\n            SuppressedMessages.LineUncommittedWarning\n        );\n    }\n\n    static showNoRepositoryWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. No repository could be found.`,\n            SuppressedMessages.NoRepositoryWarning\n        );\n    }\n\n    static async showSupportGitLensMessage() {\n        const actions: MessageItem[] = [\n            { title: 'Become a Sponsor' },\n            { title: 'Donate via PayPal' },\n            { title: 'Donate via Cash App' }\n        ];\n\n        const result = await Messages.showMessage(\n            'info',\n            `While GitLens is offered to everyone for free, if you find it useful, please consider [supporting](https://gitlens.amod.io/#support-gitlens) it. Thank you! ❤`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result != null) {\n            let uri;\n            if (result === actions[0]) {\n                uri = Uri.parse('https://www.patreon.com/eamodio');\n            }\n            else if (result === actions[1]) {\n                uri = Uri.parse('https://www.paypal.me/eamodio');\n            }\n            else if (result === actions[2]) {\n                uri = Uri.parse('https://cash.me/$eamodio');\n            }\n\n            if (uri !== undefined) {\n                await setCommandContext(CommandContext.ViewsHideSupportGitLens, true);\n                await this.suppressedMessage(SuppressedMessages.SupportGitLensNotification!);\n                await commands.executeCommand(BuiltInCommands.Open, uri);\n            }\n        }\n    }\n\n    static async showWhatsNewMessage(version: string) {\n        const actions: MessageItem[] = [{ title: \"What's New\" }, { title: 'Release Notes' }, { title: '❤' }];\n\n        const result = await Messages.showMessage(\n            'info',\n            `GitLens has been updated to v${version} — check out what's new!`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result != null) {\n            if (result === actions[0]) {\n                await commands.executeCommand(Commands.ShowWelcomePage);\n            }\n            else if (result === actions[1]) {\n                await commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://github.com/eamodio/vscode-gitlens/blob/master/CHANGELOG.md')\n                );\n            }\n            else if (result === actions[2]) {\n                await commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://gitlens.amod.io/#support-gitlens')\n                );\n            }\n        }\n    }\n\n    private static async showMessage<T extends MessageItem>(\n        type: 'info' | 'warn' | 'error',\n        message: string,\n        suppressionKey?: SuppressedMessages,\n        dontShowAgain: T | null = { title: \"Don't Show Again\" } as T,\n        ...actions: T[]\n    ): Promise<T | undefined> {\n        Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain})`);\n\n        if (\n            suppressionKey !== undefined &&\n            configuration.get<boolean>(configuration.name('advanced')('messages')(suppressionKey).value)\n        ) {\n            Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) skipped`);\n            return undefined;\n        }\n\n        if (suppressionKey !== undefined && dontShowAgain !== null) {\n            actions.push(dontShowAgain);\n        }\n\n        let result: T | undefined = undefined;\n        switch (type) {\n            case 'info':\n                result = await window.showInformationMessage(message, ...actions);\n                break;\n\n            case 'warn':\n                result = await window.showWarningMessage(message, ...actions);\n                break;\n\n            case 'error':\n                result = await window.showErrorMessage(message, ...actions);\n                break;\n        }\n\n        if ((suppressionKey !== undefined && dontShowAgain === null) || result === dontShowAgain) {\n            Logger.log(\n                `ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) don't show again requested`\n            );\n            await this.suppressedMessage(suppressionKey!);\n\n            if (result === dontShowAgain) return undefined;\n        }\n\n        Logger.log(\n            `ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) returned ${\n                result ? result.title : result\n            }`\n        );\n        return result;\n    }\n\n    private static suppressedMessage(suppressionKey: SuppressedMessages) {\n        const section = configuration.name('advanced')('messages').value;\n        const messages: { [key: string]: boolean | undefined } = configuration.get<{}>(section);\n\n        messages[suppressionKey] = true;\n\n        for (const [key, value] of Object.entries(messages)) {\n            if (value !== true) {\n                messages[key] = undefined;\n            }\n        }\n\n        return configuration.update(section, messages, ConfigurationTarget.Global);\n    }\n}\n","'use strict';\nimport { Disposable, Event, EventEmitter, TextDocument, TextEditor, Uri } from 'vscode';\nimport { CommandContext, getEditorIfActive, isActiveDocument, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { GitUri, Repository, RepositoryChange, RepositoryChangeEvent } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Functions } from '../system';\n\nexport interface DocumentBlameStateChangeEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n    readonly blameable: boolean;\n}\n\nexport class TrackedDocument<T> implements Disposable {\n    private _onDidBlameStateChange = new EventEmitter<DocumentBlameStateChangeEvent<T>>();\n    get onDidBlameStateChange(): Event<DocumentBlameStateChangeEvent<T>> {\n        return this._onDidBlameStateChange.event;\n    }\n\n    state: T | undefined;\n\n    private _disposable: Disposable | undefined;\n    private _disposed: boolean = false;\n    private _repo: Promise<Repository | undefined>;\n    private _uri!: GitUri;\n\n    constructor(\n        private readonly _document: TextDocument,\n        public readonly key: string,\n        public dirty: boolean,\n        private _eventDelegates: { onDidBlameStateChange(e: DocumentBlameStateChangeEvent<T>): void }\n    ) {\n        this._repo = this.initialize(_document.uri);\n    }\n\n    dispose() {\n        this._disposed = true;\n        this.reset('dispose');\n        this._disposable && this._disposable.dispose();\n    }\n\n    private async initialize(uri: Uri): Promise<Repository | undefined> {\n        // Since there is a bit of a chicken & egg problem with the DocumentTracker and the GitService, wait for the GitService to load if it isn't\n        if (Container.git === undefined) {\n            if (!(await Functions.waitUntil(() => Container.git !== undefined, 2000))) {\n                Logger.log(\n                    `TrackedDocument.initialize(${uri.toString(true)})`,\n                    'Timed out waiting for the GitService to start'\n                );\n                throw new Error('TrackedDocument timed out waiting for the GitService to start');\n            }\n        }\n\n        this._uri = await GitUri.fromUri(uri);\n        if (this._disposed) return undefined;\n\n        const repo = await Container.git.getRepository(this._uri);\n        if (this._disposed) return undefined;\n\n        if (repo !== undefined) {\n            this._disposable = repo.onDidChange(this.onRepositoryChanged, this);\n        }\n\n        await this.update({ initializing: true, repo: repo });\n\n        return repo;\n    }\n\n    private onRepositoryChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        // Reset any cached state\n        this.reset('repository');\n        void this.update();\n    }\n\n    private _forceDirtyStateChangeOnNextDocumentChange: boolean = false;\n    get forceDirtyStateChangeOnNextDocumentChange() {\n        return this._forceDirtyStateChangeOnNextDocumentChange;\n    }\n\n    private _hasRemotes: boolean = false;\n    get hasRemotes() {\n        return this._hasRemotes;\n    }\n\n    get isBlameable() {\n        if (this._blameFailed) return false;\n\n        return this._isTracked;\n    }\n\n    private _isDirtyIdle: boolean = false;\n    get isDirtyIdle() {\n        return this._isDirtyIdle;\n    }\n    set isDirtyIdle(value: boolean) {\n        this._isDirtyIdle = value;\n    }\n\n    get isRevision() {\n        return this._uri !== undefined ? Boolean(this._uri.sha) : false;\n    }\n\n    private _isTracked: boolean = false;\n    get isTracked() {\n        return this._isTracked;\n    }\n\n    get lineCount(): number {\n        return this._document.lineCount;\n    }\n\n    get uri() {\n        return this._uri;\n    }\n\n    activate() {\n        setCommandContext(CommandContext.ActiveFileStatus, this.getStatus());\n    }\n\n    async ensureInitialized() {\n        await this._repo;\n    }\n\n    is(document: TextDocument) {\n        return document === this._document;\n    }\n\n    reset(reason: 'config' | 'dispose' | 'document' | 'repository') {\n        this._blameFailed = false;\n        this._isDirtyIdle = false;\n\n        if (this.state === undefined) return;\n\n        // // Don't remove broken blame on change (since otherwise we'll have to run the broken blame again)\n        // if (!this.state.hasErrors) {\n\n        this.state = undefined;\n        Logger.log(`Reset state for '${this.key}', reason=${reason}`);\n\n        // }\n    }\n\n    private _blameFailed: boolean = false;\n    setBlameFailure() {\n        const wasBlameable = this.isBlameable;\n\n        this._blameFailed = true;\n\n        if (wasBlameable && isActiveDocument(this._document)) {\n            void this.update({ forceBlameChange: true });\n        }\n    }\n\n    resetForceDirtyStateChangeOnNextDocumentChange() {\n        this._forceDirtyStateChangeOnNextDocumentChange = false;\n    }\n\n    setForceDirtyStateChangeOnNextDocumentChange() {\n        this._forceDirtyStateChangeOnNextDocumentChange = true;\n    }\n\n    async update(options: { forceBlameChange?: boolean; initializing?: boolean; repo?: Repository } = {}) {\n        if (this._disposed || this._uri === undefined) {\n            this._hasRemotes = false;\n            this._isTracked = false;\n\n            return;\n        }\n\n        this._isDirtyIdle = false;\n\n        const active = getEditorIfActive(this._document);\n        const wasBlameable = options.forceBlameChange ? undefined : this.isBlameable;\n\n        this._isTracked = await Container.git.isTracked(this._uri);\n\n        let repo = undefined;\n        if (this._isTracked) {\n            repo = options.repo;\n            if (repo === undefined) {\n                repo = await this._repo;\n            }\n        }\n\n        if (repo !== undefined) {\n            this._hasRemotes = await repo.hasRemotes();\n        }\n        else {\n            this._hasRemotes = false;\n        }\n\n        if (active !== undefined) {\n            const blameable = this.isBlameable;\n\n            setCommandContext(CommandContext.ActiveFileStatus, this.getStatus());\n\n            if (!options.initializing && wasBlameable !== blameable) {\n                const e = { editor: active, document: this, blameable: blameable } as DocumentBlameStateChangeEvent<T>;\n                this._onDidBlameStateChange.fire(e);\n                this._eventDelegates.onDidBlameStateChange(e);\n            }\n        }\n    }\n\n    private getStatus() {\n        let status = '';\n        if (this.isTracked) {\n            status += 'tracked|';\n        }\n        if (this.isBlameable) {\n            status += 'blameable|';\n        }\n        if (this.isRevision) {\n            status += 'revision|';\n        }\n        if (this.hasRemotes) {\n            status += 'remotes|';\n        }\n\n        return status ? status : undefined;\n    }\n}\n","'use strict';\nimport {\n    ConfigurationChangeEvent,\n    Disposable,\n    EndOfLine,\n    Event,\n    EventEmitter,\n    Position,\n    Range,\n    TextDocument,\n    TextDocumentChangeEvent,\n    TextEditor,\n    TextLine,\n    Uri,\n    window,\n    workspace\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { CommandContext, DocumentSchemes, isActiveDocument, isTextEditor, setCommandContext } from '../constants';\nimport { GitUri } from '../git/gitService';\nimport { Functions, IDeferrable } from '../system';\nimport { DocumentBlameStateChangeEvent, TrackedDocument } from './trackedDocument';\n\nexport * from './trackedDocument';\n\nexport interface DocumentDirtyStateChangeEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n    readonly dirty: boolean;\n}\n\nexport interface DocumentDirtyIdleTriggerEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n}\n\nexport class DocumentTracker<T> implements Disposable {\n    private _onDidChangeBlameState = new EventEmitter<DocumentBlameStateChangeEvent<T>>();\n    get onDidChangeBlameState(): Event<DocumentBlameStateChangeEvent<T>> {\n        return this._onDidChangeBlameState.event;\n    }\n\n    private _onDidChangeDirtyState = new EventEmitter<DocumentDirtyStateChangeEvent<T>>();\n    get onDidChangeDirtyState(): Event<DocumentDirtyStateChangeEvent<T>> {\n        return this._onDidChangeDirtyState.event;\n    }\n\n    private _onDidTriggerDirtyIdle = new EventEmitter<DocumentDirtyIdleTriggerEvent<T>>();\n    get onDidTriggerDirtyIdle(): Event<DocumentDirtyIdleTriggerEvent<T>> {\n        return this._onDidTriggerDirtyIdle.event;\n    }\n\n    private _dirtyIdleTriggerDelay!: number;\n    private readonly _disposable: Disposable | undefined;\n    private readonly _documentMap: Map<TextDocument | string, TrackedDocument<T>> = new Map();\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            window.onDidChangeActiveTextEditor(this.onActiveTextEditorChanged, this),\n            // window.onDidChangeVisibleTextEditors(Functions.debounce(this.onVisibleEditorsChanged, 5000), this),\n            workspace.onDidChangeTextDocument(Functions.debounce(this.onTextDocumentChanged, 50), this),\n            workspace.onDidCloseTextDocument(this.onTextDocumentClosed, this),\n            workspace.onDidSaveTextDocument(this.onTextDocumentSaved, this)\n        );\n\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n\n        this.clear();\n    }\n\n    initialize() {\n        this.onActiveTextEditorChanged(window.activeTextEditor);\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        // Only rest the cached state if we aren't initializing\n        if (\n            !configuration.initializing(e) &&\n            (configuration.changed(e, configuration.name('blame')('ignoreWhitespace').value, null) ||\n                configuration.changed(e, configuration.name('advanced')('caching')('enabled').value))\n        ) {\n            for (const d of this._documentMap.values()) {\n                d.reset('config');\n            }\n        }\n\n        const section = configuration.name('advanced')('blame')('delayAfterEdit').value;\n        if (configuration.changed(e, section)) {\n            this._dirtyIdleTriggerDelay = configuration.get<number>(section);\n            this._dirtyIdleTriggeredDebounced = undefined;\n        }\n    }\n\n    private _timer: NodeJS.Timer | undefined;\n    private onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n\n        if (editor === undefined) {\n            this._timer = setTimeout(() => {\n                this._timer = undefined;\n\n                setCommandContext(CommandContext.ActiveFileStatus, undefined);\n            }, 250);\n\n            return;\n        }\n\n        const doc = this._documentMap.get(editor.document);\n        if (doc !== undefined) {\n            doc.activate();\n\n            return;\n        }\n\n        // No need to activate this, as it is implicit in initialization if currently active\n        this.addCore(editor.document);\n    }\n\n    private onTextDocumentChanged(e: TextDocumentChangeEvent) {\n        const { scheme } = e.document.uri;\n        if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) return;\n\n        let doc = this._documentMap.get(e.document);\n        if (doc === undefined) {\n            doc = this.addCore(e.document);\n        }\n\n        doc.reset('document');\n\n        const dirty = e.document.isDirty;\n        const editor = window.activeTextEditor;\n\n        // If we have an idle tracker, either reset or cancel it\n        if (this._dirtyIdleTriggeredDebounced !== undefined) {\n            if (dirty) {\n                this._dirtyIdleTriggeredDebounced({ editor: editor!, document: doc });\n            }\n            else {\n                this._dirtyIdleTriggeredDebounced.cancel();\n            }\n        }\n\n        if (!doc.forceDirtyStateChangeOnNextDocumentChange && doc.dirty === dirty) return;\n\n        doc.resetForceDirtyStateChangeOnNextDocumentChange();\n        doc.dirty = dirty;\n\n        // Only fire state change events for the active document\n        if (editor === undefined || editor.document !== e.document) return;\n\n        this.fireDocumentDirtyStateChanged({ editor: editor, document: doc, dirty: doc.dirty });\n    }\n\n    private onTextDocumentClosed(document: TextDocument) {\n        const doc = this._documentMap.get(document);\n        if (doc === undefined) return;\n\n        doc.dispose();\n        this._documentMap.delete(document);\n        this._documentMap.delete(doc.key);\n    }\n\n    private onTextDocumentSaved(document: TextDocument) {\n        const doc = this._documentMap.get(document);\n        if (doc !== undefined) {\n            void doc.update({ forceBlameChange: true });\n\n            return;\n        }\n\n        // If we are saving the active document make sure we are tracking it\n        if (isActiveDocument(document)) {\n            void this.addCore(document);\n        }\n    }\n\n    // private onVisibleEditorsChanged(editors: TextEditor[]) {\n    //     if (this._documentMap.size === 0) return;\n\n    //     // If we have no visible editors, or no \"real\" visible editors reset our cache\n    //     if (editors.length === 0 || editors.every(e => !isTextEditor(e))) {\n    //         this.clear();\n    //     }\n    // }\n\n    add(document: TextDocument): Promise<TrackedDocument<T>>;\n    add(uri: Uri): Promise<TrackedDocument<T>>;\n    add(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        return this._add(documentOrId);\n    }\n\n    clear() {\n        for (const d of this._documentMap.values()) {\n            d.dispose();\n        }\n\n        this._documentMap.clear();\n    }\n\n    get(fileName: string): Promise<TrackedDocument<T> | undefined>;\n    get(document: TextDocument): Promise<TrackedDocument<T> | undefined>;\n    get(uri: Uri): Promise<TrackedDocument<T> | undefined>;\n    get(documentOrId: string | TextDocument | Uri): Promise<TrackedDocument<T> | undefined> {\n        return this._get(documentOrId);\n    }\n\n    async getOrAdd(document: TextDocument): Promise<TrackedDocument<T>>;\n    async getOrAdd(uri: Uri): Promise<TrackedDocument<T>>;\n    async getOrAdd(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        let doc = await this._get(documentOrId);\n        if (doc === undefined) {\n            doc = await this._add(documentOrId);\n        }\n        return doc;\n    }\n\n    has(fileName: string): boolean;\n    has(document: TextDocument): boolean;\n    has(uri: Uri): boolean;\n    has(key: string | TextDocument | Uri): boolean {\n        if (typeof key === 'string' || key instanceof Uri) {\n            key = GitUri.toKey(key);\n        }\n        return this._documentMap.has(key);\n    }\n\n    private async _add(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        if (documentOrId instanceof GitUri) {\n            try {\n                documentOrId = await workspace.openTextDocument(documentOrId.documentUri({ useVersionedPath: true }));\n            }\n            catch (ex) {\n                const msg = ex.toString();\n                if (msg.includes('File seems to be binary and cannot be opened as text')) {\n                    documentOrId = new BinaryTextDocument(documentOrId);\n                }\n                else if (msg.includes('File not found')) {\n                    // If we can't find the file, assume it is because the file has been renamed or deleted at some point\n                    documentOrId = new MissingRevisionTextDocument(documentOrId);\n\n                    // const [fileName, repoPath] = await Container.git.findWorkingFileName(documentOrId, undefined, ref);\n                    // if (fileName === undefined) throw new Error(`Failed to add tracking for document: ${documentOrId}`);\n\n                    // documentOrId = await workspace.openTextDocument(path.resolve(repoPath!, fileName));\n                }\n                else {\n                    throw ex;\n                }\n            }\n        }\n        else if (documentOrId instanceof Uri) {\n            documentOrId = await workspace.openTextDocument(documentOrId);\n        }\n\n        const doc = await this.addCore(documentOrId);\n        await doc.ensureInitialized();\n\n        return doc;\n    }\n\n    private async _get(documentOrId: string | TextDocument | Uri) {\n        if (documentOrId instanceof GitUri) {\n            documentOrId = GitUri.toKey(documentOrId.documentUri({ useVersionedPath: true }));\n        }\n        else if (typeof documentOrId === 'string' || documentOrId instanceof Uri) {\n            documentOrId = GitUri.toKey(documentOrId);\n        }\n\n        const doc = this._documentMap.get(documentOrId);\n        if (doc === undefined) return undefined;\n\n        await doc.ensureInitialized();\n        return doc;\n    }\n\n    private addCore(document: TextDocument): TrackedDocument<T> {\n        const key = GitUri.toKey(document.uri);\n\n        // Always start out false, so we will fire the event if needed\n        const doc = new TrackedDocument<T>(document, key, false, {\n            onDidBlameStateChange: (e: DocumentBlameStateChangeEvent<T>) => this._onDidChangeBlameState.fire(e)\n        });\n        this._documentMap.set(document, doc);\n        this._documentMap.set(key, doc);\n\n        return doc;\n    }\n\n    private _dirtyIdleTriggeredDebounced: (((e: DocumentDirtyIdleTriggerEvent<T>) => void) & IDeferrable) | undefined;\n    private _dirtyStateChangedDebounced: (((e: DocumentDirtyStateChangeEvent<T>) => void) & IDeferrable) | undefined;\n    private fireDocumentDirtyStateChanged(e: DocumentDirtyStateChangeEvent<T>) {\n        if (e.dirty) {\n            setImmediate(async () => {\n                if (this._dirtyStateChangedDebounced !== undefined) {\n                    this._dirtyStateChangedDebounced.cancel();\n                }\n\n                if (window.activeTextEditor !== e.editor) return;\n\n                await e.document.ensureInitialized();\n                this._onDidChangeDirtyState.fire(e);\n            });\n\n            if (this._dirtyIdleTriggerDelay > 0) {\n                if (this._dirtyIdleTriggeredDebounced === undefined) {\n                    this._dirtyIdleTriggeredDebounced = Functions.debounce(\n                        async (e: DocumentDirtyIdleTriggerEvent<T>) => {\n                            if (\n                                this._dirtyIdleTriggeredDebounced !== undefined &&\n                                this._dirtyIdleTriggeredDebounced.pending!()\n                            ) {\n                                return;\n                            }\n\n                            await e.document.ensureInitialized();\n\n                            e.document.isDirtyIdle = true;\n                            this._onDidTriggerDirtyIdle.fire(e);\n                        },\n                        this._dirtyIdleTriggerDelay,\n                        { track: true }\n                    );\n                }\n\n                this._dirtyIdleTriggeredDebounced({ editor: e.editor, document: e.document });\n            }\n\n            return;\n        }\n\n        if (this._dirtyStateChangedDebounced === undefined) {\n            this._dirtyStateChangedDebounced = Functions.debounce(async (e: DocumentDirtyStateChangeEvent<T>) => {\n                if (window.activeTextEditor !== e.editor) return;\n\n                await e.document.ensureInitialized();\n                this._onDidChangeDirtyState.fire(e);\n            }, 250);\n        }\n\n        this._dirtyStateChangedDebounced(e);\n    }\n}\n\nclass EmptyTextDocument implements TextDocument {\n    readonly eol: EndOfLine;\n    readonly fileName: string;\n    readonly isClosed: boolean;\n    readonly isDirty: boolean;\n    readonly isUntitled: boolean;\n    readonly languageId: string;\n    readonly lineCount: number;\n    readonly uri: Uri;\n    readonly version: number;\n\n    constructor(\n        public readonly gitUri: GitUri\n    ) {\n        this.uri = gitUri.documentUri({ useVersionedPath: true });\n\n        this.eol = EndOfLine.LF;\n        this.fileName = this.uri.fsPath;\n        this.isClosed = false;\n        this.isDirty = false;\n        this.isUntitled = false;\n        this.languageId = '';\n        this.lineCount = 0;\n        this.version = 0;\n    }\n\n    getText(range?: Range | undefined): string {\n        throw new Error('Method not supported.');\n    }\n\n    getWordRangeAtPosition(position: Position, regex?: RegExp | undefined): Range | undefined {\n        throw new Error('Method not supported.');\n    }\n\n    lineAt(line: number): TextLine;\n    lineAt(position: Position): TextLine;\n    lineAt(position: any): TextLine {\n        throw new Error('Method not supported.');\n    }\n\n    offsetAt(position: Position): number {\n        throw new Error('Method not supported.');\n    }\n\n    positionAt(offset: number): Position {\n        throw new Error('Method not supported.');\n    }\n\n    save(): Thenable<boolean> {\n        throw new Error('Method not supported.');\n    }\n\n    validatePosition(position: Position): Position {\n        throw new Error('Method not supported.');\n    }\n\n    validateRange(range: Range): Range {\n        throw new Error('Method not supported.');\n    }\n}\n\nclass BinaryTextDocument extends EmptyTextDocument {}\nclass MissingRevisionTextDocument extends EmptyTextDocument {}\n","'use strict';\nimport { GitBlame, GitDiff, GitLog } from '../git/git';\nimport { DocumentTracker } from './documentTracker';\n\nexport * from './documentTracker';\n\ninterface CachedItem<T> {\n    item: Promise<T>;\n    errorMessage?: string;\n}\n\nexport type CachedBlame = CachedItem<GitBlame>;\nexport type CachedDiff = CachedItem<GitDiff>;\nexport type CachedLog = CachedItem<GitLog>;\n\nexport class GitDocumentState {\n    private cache: Map<string, CachedBlame | CachedDiff | CachedLog> = new Map();\n\n    constructor(\n        public readonly key: string\n    ) {}\n\n    get<T extends CachedBlame | CachedDiff | CachedLog>(key: string): T | undefined {\n        return this.cache.get(key) as T;\n    }\n\n    set<T extends CachedBlame | CachedDiff | CachedLog>(key: string, value: T) {\n        this.cache.set(key, value);\n    }\n}\n\nexport class GitDocumentTracker extends DocumentTracker<GitDocumentState> {}\n","'use strict';\nimport { execFile } from 'child_process';\nimport * as fs from 'fs';\nimport * as iconv from 'iconv-lite';\nimport * as paths from 'path';\nimport { Logger } from '../logger';\n\nconst isWindows = process.platform === 'win32';\n\n/**\n * Search PATH to see if a file exists in any of the path folders.\n *\n * @param  {string} exe The file to search for\n * @return {string}     A fully qualified path, or the original path if nothing\n *                      is found\n *\n * @private\n */\nfunction runDownPath(exe: string): string {\n    // NB: Windows won't search PATH looking for executables in spawn like\n    // Posix does\n\n    // Files with any directory path don't get this applied\n    if (exe.match(/[\\\\\\/]/)) return exe;\n\n    const target = paths.join('.', exe);\n    try {\n        if (fs.statSync(target)) return target;\n    }\n    catch {}\n\n    const haystack = process.env.PATH!.split(isWindows ? ';' : ':');\n    for (const p of haystack) {\n        const needle = paths.join(p, exe);\n        try {\n            if (fs.statSync(needle)) return needle;\n        }\n        catch {}\n    }\n\n    return exe;\n}\n\n/**\n * Finds the executable and parameters to run on Windows. This method\n * mimics the POSIX behavior of being able to run scripts as executables by\n * replacing the passed-in executable with the script runner, for PowerShell,\n * CMD, and node scripts.\n *\n * This method also does the work of running down PATH, which spawn on Windows\n * also doesn't do, unlike on POSIX.\n */\nexport function findExecutable(exe: string, args: string[]): { cmd: string; args: string[] } {\n    // POSIX can just execute scripts directly, no need for silly goosery\n    if (!isWindows) return { cmd: runDownPath(exe), args: args };\n\n    if (!fs.existsSync(exe)) {\n        // NB: When you write something like `surf-client ... -- surf-build` on Windows,\n        // a shell would normally convert that to surf-build.cmd, but since it's passed\n        // in as an argument, it doesn't happen\n        const possibleExts = ['.exe', '.bat', '.cmd', '.ps1'];\n        for (const ext of possibleExts) {\n            const possibleFullPath = runDownPath(`${exe}${ext}`);\n\n            if (fs.existsSync(possibleFullPath)) return findExecutable(possibleFullPath, args);\n        }\n    }\n\n    if (exe.match(/\\.ps1$/i)) {\n        const cmd = paths.join(process.env.SYSTEMROOT!, 'System32', 'WindowsPowerShell', 'v1.0', 'PowerShell.exe');\n        const psargs = ['-ExecutionPolicy', 'Unrestricted', '-NoLogo', '-NonInteractive', '-File', exe];\n\n        return { cmd: cmd, args: psargs.concat(args) };\n    }\n\n    if (exe.match(/\\.(bat|cmd)$/i)) {\n        const cmd = paths.join(process.env.SYSTEMROOT!, 'System32', 'cmd.exe');\n        const cmdArgs = ['/C', exe, ...args];\n\n        return { cmd: cmd, args: cmdArgs };\n    }\n\n    if (exe.match(/\\.(js)$/i)) {\n        const cmd = process.execPath;\n        const nodeArgs = [exe];\n\n        return { cmd: cmd, args: nodeArgs.concat(args) };\n    }\n\n    return { cmd: exe, args: args };\n}\n\nexport class RunError extends Error {\n    constructor(\n        public readonly exitCode: number,\n        ...args: any[]\n    ) {\n        super(...args);\n\n        Error.captureStackTrace(this, RunError);\n    }\n}\n\nexport interface RunOptions {\n    cwd?: string;\n    readonly env?: Object;\n    readonly encoding?: BufferEncoding | 'buffer';\n    /**\n     * The size the output buffer to allocate to the spawned process. Set this\n     * if you are anticipating a large amount of output.\n     *\n     * If not specified, this will be 10MB (10485760 bytes) which should be\n     * enough for most Git operations.\n     */\n    readonly maxBuffer?: number;\n    /**\n     * An optional string or buffer which will be written to\n     * the child process stdin stream immediately immediately\n     * after spawning the process.\n     */\n    readonly stdin?: string | Buffer;\n    /**\n     * The encoding to use when writing to stdin, if the stdin\n     * parameter is a string.\n     */\n    readonly stdinEncoding?: string;\n}\n\nexport function run<TOut extends string | Buffer>(\n    command: string,\n    args: any[],\n    encoding: BufferEncoding | 'buffer',\n    options: RunOptions = {}\n): Promise<TOut> {\n    const { stdin, stdinEncoding, ...opts } = { maxBuffer: 100 * 1024 * 1024, ...options } as RunOptions;\n\n    return new Promise<TOut>((resolve, reject) => {\n        const proc = execFile(\n            command,\n            args,\n            opts,\n            (err: (Error & { code?: string | number }) | null, stdout, stderr) => {\n                if (err != null) {\n                    reject(\n                        new RunError(\n                            err.code ? Number(err.code) : 0,\n                            err.message === 'stdout maxBuffer exceeded'\n                                ? `Command output exceeded the allocated stdout buffer. Set 'options.maxBuffer' to a larger value than ${\n                                      opts.maxBuffer\n                                  } bytes`\n                                : stderr || stdout\n                        )\n                    );\n\n                    return;\n                }\n\n                if (stderr) {\n                    Logger.warn(`Warning(${command} ${args.join(' ')}): ${stderr}`);\n                }\n\n                resolve(\n                    encoding === 'utf8' || encoding === 'binary' || encoding === 'buffer'\n                        ? (stdout as TOut)\n                        : (iconv.decode(Buffer.from(stdout, 'binary'), encoding) as TOut)\n                );\n            }\n        );\n\n        if (stdin) {\n            proc.stdin.end(stdin, stdinEncoding || 'utf8');\n        }\n    });\n}\n","'use strict';\nimport * as paths from 'path';\nimport { findExecutable, run } from './shell';\n\nexport interface GitLocation {\n    path: string;\n    version: string;\n}\n\nfunction parseVersion(raw: string): string {\n    return raw.replace(/^git version /, '');\n}\n\nasync function findSpecificGit(path: string): Promise<GitLocation> {\n    const version = await run<string>(path, ['--version'], 'utf8');\n    // If needed, let's update our path to avoid the search on every command\n    if (!path || path === 'git') {\n        path = findExecutable(path, ['--version']).cmd;\n    }\n\n    return {\n        path,\n        version: parseVersion(version.trim())\n    };\n}\n\nasync function findGitDarwin(): Promise<GitLocation> {\n    try {\n        let path = await run<string>('which', ['git'], 'utf8');\n        path = path.replace(/^\\s+|\\s+$/g, '');\n\n        if (path !== '/usr/bin/git') {\n            return findSpecificGit(path);\n        }\n\n        try {\n            await run<string>('xcode-select', ['-p'], 'utf8');\n            return findSpecificGit(path);\n        }\n        catch (ex) {\n            if (ex.code === 2) {\n                return Promise.reject(new Error('Unable to find git'));\n            }\n            return findSpecificGit(path);\n        }\n    }\n    catch (ex) {\n        return Promise.reject(new Error('Unable to find git'));\n    }\n}\n\nfunction findSystemGitWin32(basePath: string): Promise<GitLocation> {\n    if (!basePath) return Promise.reject(new Error('Unable to find git'));\n    return findSpecificGit(paths.join(basePath, 'Git', 'cmd', 'git.exe'));\n}\n\nfunction findGitWin32(): Promise<GitLocation> {\n    return findSystemGitWin32(process.env['ProgramW6432']!)\n        .then(null, () => findSystemGitWin32(process.env['ProgramFiles(x86)']!))\n        .then(null, () => findSystemGitWin32(process.env['ProgramFiles']!))\n        .then(null, () => findSpecificGit('git'));\n}\n\nexport async function findGitPath(path?: string): Promise<GitLocation> {\n    try {\n        return await findSpecificGit(path || 'git');\n    }\n    catch (ex) {\n        try {\n            switch (process.platform) {\n                case 'darwin':\n                    return await findGitDarwin();\n                case 'win32':\n                    return await findGitWin32();\n                default:\n                    return Promise.reject('Unable to find git');\n            }\n        }\n        catch (ex) {\n            return Promise.reject(new Error('Unable to find git'));\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Uri } from 'vscode';\nimport { UriComparer } from '../comparers';\nimport { DocumentSchemes, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitFile, GitService } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { debug, Strings } from '../system';\n\nconst empty = '';\nconst slash = '/';\n\nexport interface GitCommitish {\n    fileName?: string;\n    repoPath: string;\n    sha?: string;\n    versionedPath?: string;\n}\n\n// Taken from https://github.com/Microsoft/vscode/blob/master/src/vs/base/common/uri.ts#L331-L337\ninterface UriComponents {\n    scheme: string;\n    authority: string;\n    path: string;\n    query: string;\n    fragment: string;\n}\n\ninterface UriEx {\n    new (): Uri;\n    new (scheme: string, authority: string, path: string, query: string, fragment: string): Uri;\n    // Use this ctor, because vscode doesn't validate it\n    new (components: UriComponents): Uri;\n}\n\nexport class GitUri extends ((Uri as any) as UriEx) {\n    repoPath?: string;\n    sha?: string;\n    versionedPath?: string;\n\n    constructor(uri?: Uri);\n    constructor(uri: Uri, commit: GitCommitish);\n    constructor(uri: Uri, repoPath: string | undefined);\n    constructor(uri?: Uri, commitOrRepoPath?: GitCommitish | string) {\n        if (uri == null) {\n            super();\n\n            return;\n        }\n\n        if (uri.scheme === DocumentSchemes.GitLens) {\n            const data = JSON.parse(uri.query) as IUriRevisionData;\n\n            // When Uri's come from the FileSystemProvider, the uri.query only contains the root repo info (not the actual file path), so fix that here\n            const index = uri.path.indexOf(data.path);\n            if (index + data.path.length < uri.path.length) {\n                data.path = uri.path.substr(index);\n            }\n\n            super({\n                scheme: uri.scheme,\n                authority: uri.authority,\n                path: data.path,\n                query: JSON.stringify(data),\n                fragment: uri.fragment\n            });\n\n            this.repoPath = data.repoPath;\n            if (GitService.isStagedUncommitted(data.ref) || !GitService.isUncommitted(data.ref)) {\n                this.sha = data.ref;\n            }\n\n            return;\n        }\n\n        if (commitOrRepoPath === undefined) {\n            super(uri);\n\n            return;\n        }\n\n        if (typeof commitOrRepoPath === 'string') {\n            super(uri);\n\n            this.repoPath = commitOrRepoPath;\n\n            return;\n        }\n\n        const [authority, fsPath] = GitUri.ensureValidUNCPath(\n            uri.authority,\n            GitUri.resolve(commitOrRepoPath.fileName || uri.fsPath, commitOrRepoPath.repoPath)\n        );\n\n        let path;\n        switch (uri.scheme) {\n            case 'https':\n            case 'http':\n            case 'file':\n                if (!fsPath) {\n                    path = slash;\n                }\n                else if (fsPath[0] !== slash) {\n                    path = `/${fsPath}`;\n                }\n                else {\n                    path = fsPath;\n                }\n                break;\n            default:\n                path = fsPath;\n                break;\n        }\n\n        super({\n            scheme: uri.scheme,\n            authority: authority,\n            path: path,\n            query: uri.query,\n            fragment: uri.fragment\n        });\n        this.repoPath = commitOrRepoPath.repoPath;\n        this.versionedPath = commitOrRepoPath.versionedPath;\n        if (GitService.isStagedUncommitted(commitOrRepoPath.sha) || !GitService.isUncommitted(commitOrRepoPath.sha)) {\n            this.sha = commitOrRepoPath.sha;\n        }\n    }\n\n    get shortSha() {\n        return this.sha && GitService.shortenSha(this.sha);\n    }\n\n    documentUri(options: { useVersionedPath?: boolean } = {}) {\n        if (options.useVersionedPath && this.versionedPath !== undefined) return GitUri.file(this.versionedPath);\n        if (this.scheme !== 'file') return this;\n\n        return GitUri.file(this.fsPath);\n    }\n\n    equals(uri: Uri | undefined) {\n        if (!UriComparer.equals(this, uri)) return false;\n\n        return this.sha === (uri instanceof GitUri ? uri.sha : undefined);\n    }\n\n    getDirectory(relativeTo?: string): string {\n        return GitUri.getDirectory(\n            this.repoPath ? paths.relative(this.repoPath, this.fsPath) : this.fsPath,\n            relativeTo\n        );\n    }\n\n    getFilename(relativeTo?: string): string {\n        return paths.basename(this.repoPath ? paths.relative(this.repoPath, this.fsPath) : this.fsPath, relativeTo);\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        const { relativeTo = this.repoPath, separator = Strings.pad(GlyphChars.Dot, 2, 2), suffix = empty } = options;\n\n        const directory = GitUri.getDirectory(this.fsPath, relativeTo);\n        return `${paths.basename(this.fsPath)}${suffix}${directory ? `${separator}${directory}` : empty}`;\n    }\n\n    getRelativePath(relativeTo?: string): string {\n        let relativePath = this.repoPath ? paths.relative(this.repoPath, this.fsPath) : this.fsPath;\n        if (relativeTo !== undefined) {\n            relativePath = paths.relative(relativeTo, relativePath);\n        }\n        return Strings.normalizePath(relativePath);\n    }\n\n    toFileUri() {\n        return GitUri.file(this.fsPath);\n    }\n\n    private static ensureValidUNCPath(authority: string, fsPath: string): [string, string] {\n        // Taken from https://github.com/Microsoft/vscode/blob/e444eaa768a1e8bd8315f2cee265d725e96a8162/src/vs/base/common/uri.ts#L300-L325\n        // check for authority as used in UNC shares or use the path as given\n        if (fsPath[0] === slash && fsPath[1] === slash) {\n            const index = fsPath.indexOf(slash, 2);\n            if (index === -1) {\n                authority = fsPath.substring(2);\n                fsPath = slash;\n            }\n            else {\n                authority = fsPath.substring(2, index);\n                fsPath = fsPath.substring(index) || slash;\n            }\n        }\n\n        return [authority, fsPath];\n    }\n\n    static file(path: string, useVslsScheme?: boolean) {\n        const uri = Uri.file(path);\n        if (Container.vsls.isMaybeGuest && useVslsScheme !== false) {\n            return uri.with({ scheme: DocumentSchemes.Vsls });\n        }\n\n        return uri;\n    }\n\n    static fromCommit(commit: GitCommit, previous: boolean = false) {\n        if (!previous) return new GitUri(commit.uri, commit);\n\n        return new GitUri(commit.previousUri, {\n            repoPath: commit.repoPath,\n            sha: commit.previousSha\n        });\n    }\n\n    static fromFile(fileName: string, repoPath: string, ref?: string): GitUri;\n    static fromFile(file: GitFile, repoPath: string, ref?: string, original?: boolean): GitUri;\n    static fromFile(fileOrName: GitFile | string, repoPath: string, ref?: string, original: boolean = false): GitUri {\n        const uri = GitUri.resolveToUri(\n            typeof fileOrName === 'string'\n                ? fileOrName\n                : (original && fileOrName.originalFileName) || fileOrName.fileName,\n            repoPath\n        );\n        return ref === undefined ? new GitUri(uri, repoPath) : new GitUri(uri, { repoPath: repoPath, sha: ref });\n    }\n\n    static fromRepoPath(repoPath: string, ref?: string) {\n        return ref === undefined\n            ? new GitUri(GitUri.file(repoPath), repoPath)\n            : new GitUri(GitUri.file(repoPath), { repoPath: repoPath, sha: ref });\n    }\n\n    static fromRevisionUri(uri: Uri): GitUri {\n        return new GitUri(uri);\n    }\n\n    @debug({\n        exit: uri => `returned ${Logger.toLoggable(uri)}`\n    })\n    static async fromUri(uri: Uri) {\n        if (uri instanceof GitUri) return uri;\n\n        if (!Container.git.isTrackable(uri)) return new GitUri(uri);\n\n        if (uri.scheme === DocumentSchemes.GitLens) return new GitUri(uri);\n\n        // If this is a git uri, find its repoPath\n        if (uri.scheme === DocumentSchemes.Git) {\n            const data: { path: string; ref: string } = JSON.parse(uri.query);\n\n            const repoPath = await Container.git.getRepoPath(data.path);\n\n            let ref;\n            switch (data.ref) {\n                case empty:\n                case '~':\n                    ref = GitService.stagedUncommittedSha;\n                    break;\n\n                case null:\n                    ref = undefined;\n                    break;\n\n                default:\n                    ref = data.ref;\n                    break;\n            }\n\n            return new GitUri(uri, {\n                fileName: data.path,\n                repoPath: repoPath,\n                sha: ref\n            } as GitCommitish);\n        }\n\n        return new GitUri(uri, await Container.git.getRepoPath(uri));\n    }\n\n    static getDirectory(fileName: string, relativeTo?: string): string {\n        let directory: string | undefined = paths.dirname(fileName);\n        if (relativeTo !== undefined) {\n            directory = paths.relative(relativeTo, directory);\n        }\n        directory = Strings.normalizePath(directory);\n        return !directory || directory === '.' ? empty : directory;\n    }\n\n    static getFormattedPath(\n        fileNameOrUri: string | Uri,\n        options: { relativeTo?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        const { relativeTo, separator = Strings.pad(GlyphChars.Dot, 2, 2), suffix = empty } = options;\n\n        let fileName: string;\n        if (fileNameOrUri instanceof Uri) {\n            if (fileNameOrUri instanceof GitUri) return fileNameOrUri.getFormattedPath(options);\n\n            fileName = fileNameOrUri.fsPath;\n        }\n        else {\n            fileName = fileNameOrUri;\n        }\n\n        const directory = GitUri.getDirectory(fileName, relativeTo);\n        return !directory\n            ? `${paths.basename(fileName)}${suffix}`\n            : `${paths.basename(fileName)}${suffix}${separator}${directory}`;\n    }\n\n    static getRelativePath(fileNameOrUri: string | Uri, relativeTo?: string, repoPath?: string): string {\n        let fileName: string;\n        if (fileNameOrUri instanceof Uri) {\n            if (fileNameOrUri instanceof GitUri) return fileNameOrUri.getRelativePath(relativeTo);\n\n            fileName = fileNameOrUri.fsPath;\n        }\n        else {\n            fileName = fileNameOrUri;\n        }\n\n        let relativePath = repoPath ? paths.relative(repoPath, fileName) : fileName;\n        if (relativeTo !== undefined) {\n            relativePath = paths.relative(relativeTo, relativePath);\n        }\n        return Strings.normalizePath(relativePath);\n    }\n\n    static git(fileName: string, repoPath?: string) {\n        const path = GitUri.resolve(fileName, repoPath);\n        return Uri.parse(\n            `git:${encodeURIComponent(path)}?${encodeURIComponent(\n                JSON.stringify({\n                    // Ensure we use the fsPath here, otherwise the url won't open properly\n                    path: Uri.file(path).fsPath,\n                    ref: '~'\n                })\n            )}`\n        );\n    }\n\n    static resolve(fileName: string, repoPath?: string) {\n        const normalizedFileName = Strings.normalizePath(fileName);\n        if (repoPath === undefined) return normalizedFileName;\n\n        const normalizedRepoPath = Strings.normalizePath(repoPath);\n        if (normalizedFileName == null || normalizedFileName.length === 0) return normalizedRepoPath;\n\n        if (normalizedFileName.startsWith(normalizedRepoPath)) return normalizedFileName;\n\n        return Strings.normalizePath(paths.join(normalizedRepoPath, normalizedFileName));\n    }\n\n    static resolveToUri(fileName: string, repoPath?: string) {\n        return GitUri.file(this.resolve(fileName, repoPath));\n    }\n\n    static toKey(fileName: string): string;\n    static toKey(uri: Uri): string;\n    static toKey(fileNameOrUri: string | Uri): string;\n    static toKey(fileNameOrUri: string | Uri): string {\n        return Strings.normalizePath(typeof fileNameOrUri === 'string' ? fileNameOrUri : fileNameOrUri.fsPath);\n\n        // return typeof fileNameOrUri === 'string'\n        //     ? GitUri.file(fileNameOrUri).toString(true)\n        //     : fileNameOrUri.toString(true);\n    }\n\n    static toRevisionUri(uri: GitUri): Uri;\n    static toRevisionUri(ref: string, fileName: string, repoPath: string): Uri;\n    static toRevisionUri(ref: string, file: GitFile, repoPath: string): Uri;\n    static toRevisionUri(uriOrRef: string | GitUri, fileNameOrFile?: string | GitFile, repoPath?: string): Uri {\n        let fileName: string;\n        let ref: string | undefined;\n        let shortSha: string | undefined;\n\n        if (typeof uriOrRef === 'string') {\n            if (typeof fileNameOrFile === 'string') {\n                fileName = fileNameOrFile;\n            }\n            else {\n                fileName = GitUri.resolve(fileNameOrFile!.fileName, repoPath);\n            }\n\n            ref = uriOrRef;\n            shortSha = GitService.shortenSha(ref);\n        }\n        else {\n            fileName = uriOrRef.fsPath!;\n            repoPath = uriOrRef.repoPath!;\n            ref = uriOrRef.sha;\n            shortSha = uriOrRef.shortSha;\n        }\n\n        repoPath = Strings.normalizePath(repoPath!);\n        const repoName = paths.basename(repoPath);\n\n        const filePath = Strings.normalizePath(fileName, { addLeadingSlash: true });\n        const data: IUriRevisionData = {\n            path: filePath,\n            ref: ref,\n            repoPath: repoPath\n        };\n\n        const uri = Uri.parse(\n            `${DocumentSchemes.GitLens}:///${encodeURIComponent(repoName)}@${shortSha}${\n                filePath === slash ? empty : encodeURIComponent(filePath)\n            }?${encodeURIComponent(JSON.stringify(data))}`\n        );\n        return uri;\n    }\n}\n\ninterface IUriRevisionData {\n    path: string;\n    ref?: string;\n    repoPath: string;\n}\n","'use strict';\nimport { Strings } from '../../system';\n\nexport interface IFormatOptions {\n    dateFormat?: string | null;\n    tokenOptions?: { [id: string]: Strings.ITokenOptions | undefined };\n}\n\ntype Constructor<T = {}> = new (...args: any[]) => T;\n\nconst spaceReplacementRegex = / /g;\n\nexport abstract class Formatter<TItem = any, TOptions extends IFormatOptions = IFormatOptions> {\n    protected _item!: TItem;\n    protected _options!: TOptions;\n\n    constructor(item: TItem, options?: TOptions) {\n        this.reset(item, options);\n    }\n\n    reset(item: TItem, options?: TOptions) {\n        this._item = item;\n\n        if (options === undefined && this._options !== undefined) return;\n\n        if (options === undefined) {\n            options = {} as TOptions;\n        }\n\n        if (options.dateFormat == null) {\n            options.dateFormat = 'MMMM Do, YYYY h:mma';\n        }\n\n        if (options.tokenOptions == null) {\n            options.tokenOptions = {};\n        }\n\n        this._options = options;\n    }\n\n    private collapsableWhitespace: number = 0;\n\n    protected _padOrTruncate(s: string, options: Strings.ITokenOptions | undefined) {\n        if (s == null || s.length === 0) return s;\n\n        // NOTE: the collapsable whitespace logic relies on the javascript template evaluation to be left to right\n        if (options === undefined) {\n            options = {\n                collapseWhitespace: false,\n                padDirection: 'left',\n                prefix: undefined,\n                suffix: undefined,\n                truncateTo: undefined\n            };\n        }\n\n        let max = options.truncateTo;\n        if (max === undefined) {\n            this.collapsableWhitespace = 0;\n        }\n        else {\n            max += this.collapsableWhitespace;\n            this.collapsableWhitespace = 0;\n\n            const width = Strings.getWidth(s);\n            const diff = max - width;\n            if (diff > 0) {\n                if (options.collapseWhitespace) {\n                    this.collapsableWhitespace = diff;\n                }\n\n                if (options.padDirection === 'left') {\n                    s = Strings.padLeft(s, max, undefined, width);\n                }\n                else {\n                    if (options.collapseWhitespace) {\n                        max -= diff;\n                    }\n                    s = Strings.padRight(s, max, undefined, width);\n                }\n            }\n            else if (diff < 0) {\n                s = Strings.truncate(s, max, undefined, width);\n            }\n        }\n\n        if (options.prefix || options.suffix) {\n            s = `${options.prefix || ''}${s}${options.suffix || ''}`;\n        }\n\n        return s;\n    }\n\n    private static _formatter: Formatter | undefined = undefined;\n\n    protected static fromTemplateCore<\n        TFormatter extends Formatter<TItem, TOptions>,\n        TItem,\n        TOptions extends IFormatOptions\n    >(\n        formatter: TFormatter | Constructor<TFormatter>,\n        template: string,\n        item: TItem,\n        dateFormatOrOptions?: string | null | TOptions\n    ): string {\n        // Preserve spaces\n        template = template.replace(spaceReplacementRegex, '\\u00a0');\n        if (formatter instanceof Formatter) return Strings.interpolate(template, formatter);\n\n        let options: TOptions | undefined = undefined;\n        if (dateFormatOrOptions == null || typeof dateFormatOrOptions === 'string') {\n            options = {\n                dateFormat: dateFormatOrOptions\n            } as TOptions;\n        }\n        else {\n            options = dateFormatOrOptions;\n        }\n\n        if (options.tokenOptions == null) {\n            const tokenOptions = Strings.getTokensFromTemplate(template).reduce(\n                (map, token) => {\n                    map[token.key] = token.options;\n                    return map;\n                },\n                {} as { [token: string]: Strings.ITokenOptions | undefined }\n            );\n\n            options.tokenOptions = tokenOptions;\n        }\n\n        if (this._formatter === undefined) {\n            this._formatter = new formatter(item, options);\n        }\n        else {\n            this._formatter.reset(item, options);\n        }\n\n        return Strings.interpolate(template, this._formatter);\n    }\n}\n","'use strict';\nimport {\n    DiffWithCommand,\n    OpenCommitInRemoteCommand,\n    OpenFileRevisionCommand,\n    ShowQuickCommitDetailsCommand,\n    ShowQuickCommitFileDetailsCommand\n} from '../../commands';\nimport { DateStyle, FileAnnotationType } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { Strings } from '../../system';\nimport { GitUri } from '../gitUri';\nimport { GitCommit, GitCommitType } from '../models/commit';\nimport { GitLogCommit, GitRemote } from '../models/models';\nimport { Formatter, IFormatOptions } from './formatter';\n\nconst emojiMap: { [key: string]: string } = require('../../../emoji/emojis.json');\nconst emojiRegex = /:([-+_a-z0-9]+):/g;\n\nconst escapeMarkdownRegex = /[`\\>\\#\\*\\_\\-\\+\\.]/g;\n// const sampleMarkdown = '## message `not code` *not important* _no underline_ \\n> don\\'t quote me \\n- don\\'t list me \\n+ don\\'t list me \\n1. don\\'t list me \\nnot h1 \\n=== \\nnot h2 \\n---\\n***\\n---\\n___';\nconst markdownHeaderReplacement = `${GlyphChars.ZeroWidthSpace}===`;\n\nexport interface ICommitFormatOptions extends IFormatOptions {\n    annotationType?: FileAnnotationType;\n    dateStyle?: DateStyle;\n    line?: number;\n    markdown?: boolean;\n    remotes?: GitRemote[];\n    truncateMessageAtNewLine?: boolean;\n\n    tokenOptions?: {\n        ago?: Strings.ITokenOptions;\n        agoOrDate?: Strings.ITokenOptions;\n        author?: Strings.ITokenOptions;\n        authorAgo?: Strings.ITokenOptions;\n        authorAgoOrDate?: Strings.ITokenOptions;\n        changes?: Strings.ITokenOptions;\n        changesShort?: Strings.ITokenOptions;\n        date?: Strings.ITokenOptions;\n        email?: Strings.ITokenOptions;\n        id?: Strings.ITokenOptions;\n        message?: Strings.ITokenOptions;\n    };\n}\n\nexport class CommitFormatter extends Formatter<GitCommit, ICommitFormatOptions> {\n    private get _ago() {\n        return this._item.fromNow();\n    }\n\n    private get _date() {\n        return this._item.formatDate(this._options.dateFormat!);\n    }\n\n    private get _agoOrDate() {\n        const dateStyle =\n            this._options.dateStyle !== undefined ? this._options.dateStyle : Container.config.defaultDateStyle;\n        return dateStyle === DateStyle.Absolute ? this._date : this._ago;\n    }\n\n    get ago() {\n        return this._padOrTruncate(this._ago, this._options.tokenOptions!.ago);\n    }\n\n    get agoOrDate() {\n        return this._padOrTruncate(this._agoOrDate, this._options.tokenOptions!.agoOrDate);\n    }\n\n    get author() {\n        return this._padOrTruncate(this._item.author, this._options.tokenOptions!.author);\n    }\n\n    get authorAgo() {\n        const authorAgo = `${this._item.author}, ${this._ago}`;\n        return this._padOrTruncate(authorAgo, this._options.tokenOptions!.authorAgo);\n    }\n\n    get authorAgoOrDate() {\n        const authorAgo = `${this._item.author}, ${this._agoOrDate}`;\n        return this._padOrTruncate(authorAgo, this._options.tokenOptions!.authorAgoOrDate);\n    }\n\n    get avatar() {\n        if (!this._options.markdown || !Container.config.hovers.avatars) {\n            return '';\n        }\n\n        return `![](${this._item.getGravatarUri(Container.config.defaultGravatarsStyle).toString(true)})`;\n    }\n\n    get changes() {\n        if (!(this._item instanceof GitLogCommit) || this._item.type === GitCommitType.File) {\n            return this._padOrTruncate('', this._options.tokenOptions!.changes);\n        }\n\n        return this._padOrTruncate(this._item.getFormattedDiffStatus(), this._options.tokenOptions!.changes);\n    }\n\n    get changesShort() {\n        if (!(this._item instanceof GitLogCommit) || this._item.type === GitCommitType.File) {\n            return this._padOrTruncate('', this._options.tokenOptions!.changesShort);\n        }\n\n        return this._padOrTruncate(\n            this._item.getFormattedDiffStatus({ compact: true, separator: '' }),\n            this._options.tokenOptions!.changesShort\n        );\n    }\n\n    get commands() {\n        if (this._item.isUncommitted) {\n            return `\\`${\n                this._item.shortSha === 'Working Tree'\n                    ? this._padOrTruncate('00000000', this._options.tokenOptions!.id)\n                    : this.id\n            }\\``;\n        }\n\n        let commands = `[\\`${this.id}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n            this._item.sha\n        )} \"Show Commit Details\") [\\`${GlyphChars.MuchGreaterThan}\\`](${DiffWithCommand.getMarkdownCommandArgs(\n            this._item\n        )} \"Open Changes\") `;\n\n        if (this._item.previousSha !== undefined) {\n            let annotationType = this._options.annotationType;\n            if (annotationType === FileAnnotationType.RecentChanges) {\n                annotationType = FileAnnotationType.Blame;\n            }\n\n            const uri = GitUri.toRevisionUri(\n                this._item.previousSha,\n                this._item.previousUri.fsPath,\n                this._item.repoPath\n            );\n            commands += `[\\`${GlyphChars.SquareWithTopShadow}\\`](${OpenFileRevisionCommand.getMarkdownCommandArgs(\n                uri,\n                annotationType || FileAnnotationType.Blame,\n                this._options.line\n            )} \"Blame Previous Revision\") `;\n        }\n\n        if (this._options.remotes !== undefined && this._options.remotes.length !== 0) {\n            commands += `[\\`${GlyphChars.ArrowUpRight}\\`](${OpenCommitInRemoteCommand.getMarkdownCommandArgs(\n                this._item.sha\n            )} \"Open in Remote\") `;\n        }\n\n        commands += `[\\`${GlyphChars.MiddleEllipsis}\\`](${ShowQuickCommitFileDetailsCommand.getMarkdownCommandArgs(\n            this._item.sha\n        )} \"Show More Actions\")`;\n\n        return commands;\n    }\n\n    get date() {\n        return this._padOrTruncate(this._date, this._options.tokenOptions!.date);\n    }\n\n    get email() {\n        return this._padOrTruncate(this._item.email || '', this._options.tokenOptions!.email);\n    }\n\n    get id() {\n        return this._padOrTruncate(this._item.shortSha || '', this._options.tokenOptions!.id);\n    }\n\n    get message() {\n        let message: string;\n        if (this._item.isStagedUncommitted) {\n            message = 'Staged changes';\n        }\n        else if (this._item.isUncommitted) {\n            message = 'Uncommitted changes';\n        }\n        else {\n            if (this._options.truncateMessageAtNewLine) {\n                const index = this._item.message.indexOf('\\n');\n                message =\n                    index === -1\n                        ? this._item.message\n                        : `${this._item.message.substring(0, index)}${GlyphChars.Space}${GlyphChars.Ellipsis}`;\n            }\n            else {\n                message = this._item.message;\n            }\n\n            message = message.replace(emojiRegex, (s, code) => emojiMap[code] || s);\n        }\n\n        message = this._padOrTruncate(message, this._options.tokenOptions!.message);\n\n        if (!this._options.markdown) {\n            return message;\n        }\n\n        if (this._options.remotes !== undefined) {\n            this._options.remotes.sort(\n                (a, b) =>\n                    (a.default ? -1 : 1) - (b.default ? -1 : 1) ||\n                    a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n            );\n\n            for (const r of this._options.remotes) {\n                if (r.provider === undefined) continue;\n\n                message = r.provider.enrichMessage(message);\n                break;\n            }\n        }\n\n        return `\\n\\n> ${message\n            // Escape markdown\n            .replace(escapeMarkdownRegex, '\\\\$&')\n            // Escape markdown header (since the above regex won't match it)\n            .replace(/^===/gm, markdownHeaderReplacement)\n            // Keep under the same block-quote but with line breaks\n            .replace(/\\n/g, '\\t\\n>  ')}`;\n    }\n\n    get sha() {\n        return this.id;\n    }\n\n    static fromTemplate(template: string, commit: GitCommit, dateFormat: string | null): string;\n    static fromTemplate(template: string, commit: GitCommit, options?: ICommitFormatOptions): string;\n    static fromTemplate(\n        template: string,\n        commit: GitCommit,\n        dateFormatOrOptions?: string | null | ICommitFormatOptions\n    ): string;\n    static fromTemplate(\n        template: string,\n        commit: GitCommit,\n        dateFormatOrOptions?: string | null | ICommitFormatOptions\n    ): string {\n        return super.fromTemplateCore(this, template, commit, dateFormatOrOptions);\n    }\n}\n","'use strict';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitUri } from '../gitUri';\nimport { GitLogCommit } from './logCommit';\n\nexport declare type GitFileStatus = '!' | '?' | 'A' | 'C' | 'D' | 'M' | 'R' | 'T' | 'U' | 'X' | 'B';\n\nexport interface GitFile {\n    status: GitFileStatus;\n    readonly repoPath?: string;\n    readonly indexStatus?: GitFileStatus;\n    readonly workingTreeStatus?: GitFileStatus;\n    readonly fileName: string;\n    readonly originalFileName?: string;\n}\n\nexport interface GitFileWithCommit extends GitFile {\n    readonly commit: GitLogCommit;\n}\n\nexport namespace GitFile {\n    export function getFormattedDirectory(\n        file: GitFile,\n        includeOriginal: boolean = false,\n        relativeTo?: string\n    ): string {\n        const directory = GitUri.getDirectory(file.fileName, relativeTo);\n        return includeOriginal && file.status === 'R' && file.originalFileName\n            ? `${directory} ${Strings.pad(GlyphChars.ArrowLeft, 1, 1)} ${file.originalFileName}`\n            : directory;\n    }\n\n    export function getFormattedPath(\n        file: GitFile,\n        options: { relativeTo?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        return GitUri.getFormattedPath(file.fileName, options);\n    }\n\n    export function getRelativePath(file: GitFile, relativeTo?: string): string {\n        return GitUri.getRelativePath(file.fileName, relativeTo);\n    }\n\n    const statusIconsMap = {\n        '!': 'icon-status-ignored.svg',\n        '?': 'icon-status-untracked.svg',\n        A: 'icon-status-added.svg',\n        C: 'icon-status-copied.svg',\n        D: 'icon-status-deleted.svg',\n        M: 'icon-status-modified.svg',\n        R: 'icon-status-renamed.svg',\n        T: 'icon-status-modified.svg',\n        U: 'icon-status-conflict.svg',\n        X: 'icon-status-unknown.svg',\n        B: 'icon-status-unknown.svg'\n    };\n\n    export function getStatusIcon(status: GitFileStatus): string {\n        return statusIconsMap[status] || statusIconsMap['X'];\n    }\n\n    const statusOcticonsMap = {\n        '!': '$(diff-ignored)',\n        '?': '$(diff-added)',\n        A: '$(diff-added)',\n        C: '$(diff-added)',\n        D: '$(diff-removed)',\n        M: '$(diff-modified)',\n        R: '$(diff-renamed)',\n        T: '$(diff-modified)',\n        U: '$(alert)',\n        X: '$(question)',\n        B: '$(question)'\n    };\n\n    export function getStatusOcticon(status: GitFileStatus, missing: string = GlyphChars.Space.repeat(4)): string {\n        return statusOcticonsMap[status] || missing;\n    }\n\n    const statusTextMap = {\n        '!': 'Ignored',\n        '?': 'Untracked',\n        A: 'Added',\n        C: 'Copied',\n        D: 'Deleted',\n        M: 'Modified',\n        R: 'Renamed',\n        T: 'Modified',\n        U: 'Conflict',\n        X: 'Unknown',\n        B: 'Unknown'\n    };\n\n    export function getStatusText(status: GitFileStatus): string {\n        return statusTextMap[status] || statusTextMap['X'];\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitFile, GitFileWithCommit } from '../models/file';\nimport { Formatter, IFormatOptions } from './formatter';\n\nexport interface IStatusFormatOptions extends IFormatOptions {\n    relativePath?: string;\n\n    tokenOptions?: {\n        directory?: Strings.ITokenOptions;\n        file?: Strings.ITokenOptions;\n        filePath?: Strings.ITokenOptions;\n        path?: Strings.ITokenOptions;\n        status?: Strings.ITokenOptions;\n        working?: Strings.ITokenOptions;\n    };\n}\n\nexport class StatusFileFormatter extends Formatter<GitFile, IStatusFormatOptions> {\n    get directory() {\n        const directory = GitFile.getFormattedDirectory(this._item, false, this._options.relativePath);\n        return this._padOrTruncate(directory, this._options.tokenOptions!.directory);\n    }\n\n    get file() {\n        const file = paths.basename(this._item.fileName);\n        return this._padOrTruncate(file, this._options.tokenOptions!.file);\n    }\n\n    get filePath() {\n        const filePath = GitFile.getFormattedPath(this._item, { relativeTo: this._options.relativePath });\n        return this._padOrTruncate(filePath, this._options.tokenOptions!.filePath);\n    }\n\n    get path() {\n        const directory = GitFile.getRelativePath(this._item, this._options.relativePath);\n        return this._padOrTruncate(directory, this._options.tokenOptions!.path);\n    }\n\n    get status() {\n        const status = GitFile.getStatusText(this._item.status);\n        return this._padOrTruncate(status, this._options.tokenOptions!.status);\n    }\n\n    get working() {\n        const commit = (this._item as GitFileWithCommit).commit;\n        const statusFile = commit === undefined ? this._item : commit.files[0];\n\n        let icon = '';\n        if (statusFile.workingTreeStatus !== undefined && statusFile.indexStatus !== undefined) {\n            icon = `${GlyphChars.Pencil}${GlyphChars.Space}${GlyphChars.SpaceThinnest}${GlyphChars.Check}`;\n        }\n        else if (statusFile.workingTreeStatus !== undefined) {\n            icon = `${GlyphChars.Pencil}${GlyphChars.SpaceThin}${GlyphChars.SpaceThinnest}${GlyphChars.EnDash}${\n                GlyphChars.Space\n            }`;\n        }\n        else if (statusFile.indexStatus !== undefined) {\n            icon = `${GlyphChars.Space}${GlyphChars.EnDash}${GlyphChars.Space.repeat(2)}${GlyphChars.Check}`;\n        }\n        else {\n            icon = '';\n        }\n        return this._padOrTruncate(icon, this._options.tokenOptions!.working);\n    }\n\n    static fromTemplate(template: string, file: GitFile, dateFormat: string | null): string;\n    static fromTemplate(template: string, file: GitFile, options?: IStatusFormatOptions): string;\n    static fromTemplate(\n        template: string,\n        file: GitFile,\n        dateFormatOrOptions?: string | null | IStatusFormatOptions\n    ): string;\n    static fromTemplate(\n        template: string,\n        file: GitFile,\n        dateFormatOrOptions?: string | null | IStatusFormatOptions\n    ): string {\n        return super.fromTemplateCore(this, template, file, dateFormatOrOptions);\n    }\n}\n","'use strict';\nimport { Uri } from 'vscode';\nimport { configuration, DateStyle, GravatarDefaultStyle } from '../../configuration';\nimport { Container } from '../../container';\nimport { Dates, Strings } from '../../system';\nimport { CommitFormatter } from '../formatters/formatters';\nimport { Git } from '../git';\nimport { GitUri } from '../gitUri';\n\nconst gravatarCache: Map<string, Uri> = new Map();\nconst missingGravatarHash = '00000000000000000000000000000000';\n\nexport function clearGravatarCache() {\n    gravatarCache.clear();\n}\n\nexport interface GitAuthor {\n    name: string;\n    lineCount: number;\n}\n\nexport interface GitCommitLine {\n    sha: string;\n    previousSha?: string;\n    line: number;\n    originalLine: number;\n    code?: string;\n}\n\nexport enum GitCommitType {\n    Blame = 'blame',\n    Branch = 'branch',\n    File = 'file',\n    Stash = 'stash',\n    StashFile = 'stash-file'\n}\n\nexport const CommitFormatting = {\n    dateFormat: undefined! as string | null,\n    dateStyle: undefined! as DateStyle,\n\n    reset: () => {\n        CommitFormatting.dateStyle = configuration.get<DateStyle>(configuration.name('defaultDateStyle').value);\n        CommitFormatting.dateFormat = configuration.get<string | null>(configuration.name('defaultDateFormat').value);\n    }\n};\n\nexport abstract class GitCommit {\n    readonly type: GitCommitType;\n    readonly originalFileName: string | undefined;\n    previousFileName: string | undefined;\n    workingFileName?: string;\n\n    protected readonly _fileName: string;\n    protected _previousSha: string | undefined;\n\n    private _isStagedUncommitted: boolean | undefined;\n    private _isUncommitted: boolean | undefined;\n    private _shortSha: string | undefined;\n\n    constructor(\n        type: GitCommitType,\n        public readonly repoPath: string,\n        public readonly sha: string,\n        public readonly author: string,\n        public readonly email: string | undefined,\n        public readonly date: Date,\n        public readonly message: string,\n        fileName: string,\n        originalFileName?: string,\n        previousSha?: string,\n        previousFileName?: string\n    ) {\n        this.type = type;\n        this._fileName = fileName || '';\n        this.originalFileName = originalFileName;\n        this._previousSha = previousSha;\n        this.previousFileName = previousFileName;\n    }\n\n    get fileName() {\n        // If we aren't a single-file commit, return an empty file name (makes it default to the repoPath)\n        return this.isFile ? this._fileName : '';\n    }\n\n    get formattedDate(): string {\n        return CommitFormatting.dateStyle === DateStyle.Absolute\n            ? this.formatDate(CommitFormatting.dateFormat)\n            : this.fromNow();\n    }\n\n    get shortSha() {\n        if (this._shortSha === undefined) {\n            this._shortSha = Git.shortenSha(this.sha);\n        }\n        return this._shortSha;\n    }\n\n    get isFile() {\n        return (\n            this.type === GitCommitType.Blame ||\n            this.type === GitCommitType.File ||\n            this.type === GitCommitType.StashFile\n        );\n    }\n\n    get isStash() {\n        return this.type === GitCommitType.Stash || this.type === GitCommitType.StashFile;\n    }\n\n    get isStagedUncommitted(): boolean {\n        if (this._isStagedUncommitted === undefined) {\n            this._isStagedUncommitted = Git.isStagedUncommitted(this.sha);\n        }\n        return this._isStagedUncommitted;\n    }\n\n    get isUncommitted(): boolean {\n        if (this._isUncommitted === undefined) {\n            this._isUncommitted = Git.isUncommitted(this.sha);\n        }\n        return this._isUncommitted;\n    }\n\n    abstract get previousFileSha(): string;\n    protected _resolvedPreviousFileSha: string | undefined;\n\n    get previousFileShortSha(): string {\n        return Git.shortenSha(this.previousFileSha)!;\n    }\n\n    get previousSha(): string | undefined {\n        return this._previousSha;\n    }\n    set previousSha(value: string | undefined) {\n        if (value === this._previousSha) return;\n\n        this._previousSha = value;\n        this._resolvedPreviousFileSha = undefined;\n    }\n\n    get previousShortSha() {\n        return this.previousSha && Git.shortenSha(this.previousSha);\n    }\n\n    get previousUri(): Uri {\n        return this.previousFileName ? GitUri.resolveToUri(this.previousFileName, this.repoPath) : this.uri;\n    }\n\n    get uri(): Uri {\n        return GitUri.resolveToUri(this.fileName, this.repoPath);\n    }\n\n    get workingUri(): Uri {\n        return this.workingFileName ? GitUri.resolveToUri(this.workingFileName, this.repoPath) : this.uri;\n    }\n\n    private _dateFormatter?: Dates.IDateFormatter;\n\n    formatDate(format?: string | null) {\n        if (format == null) {\n            format = 'MMMM Do, YYYY h:mma';\n        }\n\n        if (this._dateFormatter === undefined) {\n            this._dateFormatter = Dates.toFormatter(this.date);\n        }\n        return this._dateFormatter.format(format);\n    }\n\n    fromNow() {\n        if (this._dateFormatter === undefined) {\n            this._dateFormatter = Dates.toFormatter(this.date);\n        }\n        return this._dateFormatter.fromNow();\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        return GitUri.getFormattedPath(this.fileName, options);\n    }\n\n    getGravatarUri(fallback: GravatarDefaultStyle, size: number = 16): Uri {\n        const hash =\n            this.email != null && this.email.length !== 0\n                ? Strings.md5(this.email.trim().toLowerCase(), 'hex')\n                : missingGravatarHash;\n\n        const key = `${hash}:${size}`;\n        let gravatar = gravatarCache.get(key);\n        if (gravatar !== undefined) return gravatar;\n\n        gravatar = Uri.parse(`https://www.gravatar.com/avatar/${hash}.jpg?s=${size}&d=${fallback}`);\n        gravatarCache.set(key, gravatar);\n\n        return gravatar;\n    }\n\n    getShortMessage() {\n        return CommitFormatter.fromTemplate('${message}', this, { truncateMessageAtNewLine: true });\n    }\n\n    async resolvePreviousFileSha(): Promise<void> {\n        if (this._resolvedPreviousFileSha !== undefined) return;\n\n        this._resolvedPreviousFileSha = await Container.git.resolveReference(\n            this.repoPath,\n            this.previousFileSha,\n            this.fileName ? this.previousUri : undefined\n        );\n    }\n\n    toGitUri(previous: boolean = false): GitUri {\n        return GitUri.fromCommit(this, previous);\n    }\n\n    abstract with(changes: {\n        type?: GitCommitType;\n        sha?: string;\n        fileName?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n    }): GitCommit;\n\n    protected getChangedValue<T>(change: T | null | undefined, original: T | undefined): T | undefined {\n        if (change === undefined) return original;\n        return change !== null ? change : undefined;\n    }\n}\n","'use strict';\nimport { GitCommit, GitCommitLine, GitCommitType } from './commit';\n\nexport class GitBlameCommit extends GitCommit {\n    constructor(\n        repoPath: string,\n        sha: string,\n        author: string,\n        email: string | undefined,\n        date: Date,\n        message: string,\n        fileName: string,\n        originalFileName: string | undefined,\n        previousSha: string | undefined,\n        previousFileName: string | undefined,\n        public readonly lines: GitCommitLine[]\n    ) {\n        super(\n            GitCommitType.Blame,\n            repoPath,\n            sha,\n            author,\n            email,\n            date,\n            message,\n            fileName,\n            originalFileName,\n            previousSha,\n            previousFileName\n        );\n    }\n\n    get previousFileSha(): string {\n        if (this._resolvedPreviousFileSha !== undefined) return this._resolvedPreviousFileSha;\n\n        return `${this.sha}^`;\n    }\n\n    with(changes: {\n        sha?: string;\n        fileName?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        lines?: GitCommitLine[] | null;\n    }): GitBlameCommit {\n        return new GitBlameCommit(\n            this.repoPath,\n            changes.sha || this.sha,\n            this.author,\n            this.email,\n            this.date,\n            this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName),\n            this.getChangedValue(changes.lines, changes.sha || changes.fileName ? [] : this.lines) || []\n        );\n    }\n}\n","'use strict';\nimport { Uri } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitUri } from '../gitUri';\nimport { GitBranch, GitTrackingState } from './branch';\nimport { GitFile, GitFileStatus } from './file';\n\nexport class GitStatus {\n    readonly detached: boolean;\n\n    constructor(\n        public readonly repoPath: string,\n        public readonly branch: string,\n        public readonly sha: string,\n        public readonly files: GitStatusFile[],\n        public readonly state: GitTrackingState,\n        public readonly upstream?: string\n    ) {\n        this.detached = GitBranch.isDetached(branch);\n        if (this.detached) {\n            this.branch = GitBranch.formatDetached(this.sha);\n        }\n    }\n\n    get ref() {\n        return this.detached ? this.sha : this.branch;\n    }\n\n    private _diff?: {\n        added: number;\n        deleted: number;\n        changed: number;\n    };\n\n    getDiffStatus() {\n        if (this._diff === undefined) {\n            this._diff = {\n                added: 0,\n                deleted: 0,\n                changed: 0\n            };\n\n            if (this.files.length !== 0) {\n                for (const f of this.files) {\n                    switch (f.status) {\n                        case 'A':\n                        case '?':\n                            this._diff.added++;\n                            break;\n                        case 'D':\n                            this._diff.deleted++;\n                            break;\n                        default:\n                            this._diff.changed++;\n                            break;\n                    }\n                }\n            }\n        }\n\n        return this._diff;\n    }\n\n    getFormattedDiffStatus(\n        options: {\n            compact?: boolean;\n            empty?: string;\n            expand?: boolean;\n            prefix?: string;\n            separator?: string;\n            suffix?: string;\n        } = {}\n    ): string {\n        const { added, changed, deleted } = this.getDiffStatus();\n        if (added === 0 && changed === 0 && deleted === 0) return options.empty || '';\n\n        const { compact, expand, prefix = '', separator = ' ', suffix = '' } = options;\n        if (expand) {\n            let status = '';\n            if (added) {\n                status += `${Strings.pluralize('file', added)} added`;\n            }\n            if (changed) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', changed)} changed`;\n            }\n            if (deleted) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', deleted)} deleted`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        let status = '';\n        if (compact) {\n            if (added !== 0) {\n                status += `+${added}`;\n            }\n            if (changed !== 0) {\n                status += `${status.length === 0 ? '' : separator}~${changed}`;\n            }\n            if (deleted !== 0) {\n                status += `${status.length === 0 ? '' : separator}-${deleted}`;\n            }\n        }\n        else {\n            status += `+${added}${separator}~${changed}${separator}-${deleted}`;\n        }\n\n        return `${prefix}${status}${suffix}`;\n    }\n\n    getUpstreamStatus(options: {\n        empty?: string;\n        expand?: boolean;\n        prefix?: string;\n        separator?: string;\n        suffix?: string;\n    }): string {\n        return GitStatus.getUpstreamStatus(this.upstream, this.state, options);\n    }\n\n    static getUpstreamStatus(\n        upstream: string | undefined,\n        state: { ahead: number; behind: number },\n        options: { empty?: string; expand?: boolean; prefix?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        if (upstream === undefined || (state.behind === 0 && state.ahead === 0)) return options.empty || '';\n\n        const { expand, prefix = '', separator = ' ', suffix = '' } = options;\n        if (expand) {\n            let status = '';\n            if (state.behind) {\n                status += `${Strings.pluralize('commit', state.behind)} behind`;\n            }\n            if (state.ahead) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('commit', state.ahead)} ahead`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        return `${prefix}${state.behind}${GlyphChars.ArrowDown}${separator}${state.ahead}${\n            GlyphChars.ArrowUp\n        }${suffix}`;\n    }\n}\n\nexport class GitStatusFile implements GitFile {\n    constructor(\n        public readonly repoPath: string,\n        public readonly indexStatus: GitFileStatus | undefined,\n        public readonly workingTreeStatus: GitFileStatus | undefined,\n        public readonly fileName: string,\n        public readonly originalFileName?: string\n    ) {}\n\n    get status(): GitFileStatus {\n        return (this.indexStatus || this.workingTreeStatus || '?') as GitFileStatus;\n    }\n\n    get staged() {\n        return this.indexStatus !== undefined;\n    }\n\n    get uri(): Uri {\n        return GitUri.resolveToUri(this.fileName, this.repoPath);\n    }\n\n    getFormattedDirectory(includeOriginal: boolean = false): string {\n        return GitFile.getFormattedDirectory(this, includeOriginal);\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        return GitFile.getFormattedPath(this, options);\n    }\n\n    getOcticon() {\n        return GitFile.getStatusOcticon(this.status);\n    }\n\n    getStatusText(file: GitFile): string {\n        return GitFile.getStatusText(this.status);\n    }\n\n    with(changes: {\n        indexStatus?: GitFileStatus | null;\n        workTreeStatus?: GitFileStatus | null;\n        fileName?: string;\n        originalFileName?: string | null;\n    }): GitStatusFile {\n        return new GitStatusFile(\n            this.repoPath,\n            this.getChangedValue(changes.indexStatus, this.indexStatus) as GitFileStatus,\n            this.getChangedValue(changes.workTreeStatus, this.workingTreeStatus) as GitFileStatus,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.originalFileName, this.originalFileName)\n        );\n    }\n\n    protected getChangedValue<T>(change: T | null | undefined, original: T | undefined): T | undefined {\n        if (change === undefined) return original;\n        return change !== null ? change : undefined;\n    }\n}\n","'use strict';\nimport { StarredBranches, WorkspaceState } from '../../constants';\nimport { Container } from '../../container';\nimport { Git } from '../git';\nimport { GitStatus } from './status';\n\nexport interface GitTrackingState {\n    ahead: number;\n    behind: number;\n}\n\nexport class GitBranch {\n    readonly detached: boolean;\n    readonly id: string;\n    readonly name: string;\n    readonly remote: boolean;\n    readonly tracking?: string;\n    readonly state: GitTrackingState;\n\n    constructor(\n        public readonly repoPath: string,\n        name: string,\n        public readonly current: boolean = false,\n        public readonly sha?: string,\n        tracking?: string,\n        ahead: number = 0,\n        behind: number = 0,\n        detached: boolean = false\n    ) {\n        this.id = `${repoPath}|${name}`;\n\n        if (name.startsWith('remotes/')) {\n            name = name.substring(8);\n            this.remote = true;\n        }\n        else {\n            this.remote = false;\n        }\n\n        this.detached = detached || (this.current ? GitBranch.isDetached(name) : false);\n        if (this.detached) {\n            this.name = GitBranch.formatDetached(this.sha!);\n        }\n        else {\n            this.name = name;\n        }\n\n        this.tracking = tracking == null || tracking.length === 0 ? undefined : tracking;\n        this.state = {\n            ahead: ahead,\n            behind: behind\n        };\n    }\n\n    get ref() {\n        return this.detached ? this.sha! : this.name;\n    }\n\n    private _basename: string | undefined;\n    getBasename(): string {\n        if (this._basename === undefined) {\n            const name = this.getName();\n            const index = name.lastIndexOf('/');\n            this._basename = index !== -1 ? name.substring(index + 1) : name;\n        }\n\n        return this._basename;\n    }\n\n    private _name: string | undefined;\n    getName(): string {\n        if (this._name === undefined) {\n            this._name = this.remote ? this.name.substring(this.name.indexOf('/') + 1) : this.name;\n        }\n\n        return this._name;\n    }\n\n    getRemote(): string | undefined {\n        if (this.remote) return GitBranch.getRemote(this.name);\n        if (this.tracking !== undefined) return GitBranch.getRemote(this.tracking);\n\n        return undefined;\n    }\n\n    getTrackingStatus(options?: {\n        empty?: string;\n        expand?: boolean;\n        prefix?: string;\n        separator?: string;\n        suffix?: string;\n    }): string {\n        return GitStatus.getUpstreamStatus(this.tracking, this.state, options);\n    }\n\n    get starred() {\n        const starred = Container.context.workspaceState.get<StarredBranches>(WorkspaceState.StarredBranches);\n        return starred !== undefined && starred[this.id] === true;\n    }\n\n    star() {\n        return this.updateStarred(true);\n    }\n\n    unstar() {\n        return this.updateStarred(false);\n    }\n\n    private async updateStarred(star: boolean) {\n        let starred = Container.context.workspaceState.get<StarredBranches>(WorkspaceState.StarredBranches);\n        if (starred === undefined) {\n            starred = Object.create(null);\n        }\n\n        if (star) {\n            starred![this.id] = true;\n        }\n        else {\n            const { [this.id]: _, ...rest } = starred!;\n            starred = rest;\n        }\n        await Container.context.workspaceState.update(WorkspaceState.StarredBranches, starred);\n    }\n\n    static getRemote(branch: string): string {\n        return branch.substring(0, branch.indexOf('/'));\n    }\n\n    static formatDetached(sha: string): string {\n        return `(${Git.shortenSha(sha)}...)`;\n    }\n\n    static isDetached(name: string): boolean {\n        // If there is whitespace in the name assume this is not a valid branch name\n        // Deals with detached HEAD states\n        return name.match(/\\s/) !== null || name.match(/\\(detached\\)/) !== null;\n    }\n}\n","'use strict';\nimport { Iterables, Strings } from '../../system';\nimport {\n    GitDiff,\n    GitDiffChunk,\n    GitDiffChunkLine,\n    GitDiffLine,\n    GitDiffShortStat,\n    GitFile,\n    GitFileStatus\n} from './../git';\n\nconst nameStatusDiffRegex = /^(.*?)\\t(.*?)(?:\\t(.*?))?$/gm;\nconst shortStatDiffRegex = /^\\s*(\\d+)\\sfiles? changed(?:,\\s+(\\d+)\\s+insertions?\\(\\+\\))?(?:,\\s+(\\d+)\\s+deletions?\\(-\\))?/;\nconst unifiedDiffRegex = /^@@ -([\\d]+),([\\d]+) [+]([\\d]+),([\\d]+) @@([\\s\\S]*?)(?=^@@)/gm;\n\nexport class GitDiffParser {\n    static parse(data: string, debug: boolean = false): GitDiff | undefined {\n        if (!data) return undefined;\n\n        const chunks: GitDiffChunk[] = [];\n\n        let match: RegExpExecArray | null = null;\n\n        let chunk: string;\n        let currentStart: number;\n        let previousStart: number;\n\n        do {\n            match = unifiedDiffRegex.exec(`${data}\\n@@`);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            chunk = (' ' + match[5]).substr(1);\n            currentStart = parseInt(match[3], 10);\n            previousStart = parseInt(match[1], 10);\n\n            chunks.push(\n                new GitDiffChunk(\n                    chunk,\n                    {\n                        start: currentStart,\n                        end: currentStart + parseInt(match[4], 10)\n                    },\n                    {\n                        start: previousStart,\n                        end: previousStart + parseInt(match[2], 10)\n                    }\n                )\n            );\n        } while (match != null);\n\n        if (!chunks.length) return undefined;\n\n        const diff = {\n            diff: debug ? data : undefined,\n            chunks: chunks\n        } as GitDiff;\n        return diff;\n    }\n\n    static parseChunk(chunk: string): GitDiffChunkLine[] {\n        const lines = Iterables.skip(Strings.lines(chunk), 1);\n\n        const currentLines: (GitDiffLine | undefined)[] = [];\n        const previousLines: (GitDiffLine | undefined)[] = [];\n\n        let removed = 0;\n        for (const l of lines) {\n            switch (l[0]) {\n                case '+':\n                    currentLines.push({\n                        line: ` ${l.substring(1)}`,\n                        state: 'added'\n                    });\n\n                    if (removed > 0) {\n                        removed--;\n                    }\n                    else {\n                        previousLines.push(undefined);\n                    }\n\n                    break;\n\n                case '-':\n                    removed++;\n\n                    previousLines.push({\n                        line: ` ${l.substring(1)}`,\n                        state: 'removed'\n                    });\n\n                    break;\n\n                default:\n                    while (removed > 0) {\n                        removed--;\n                        currentLines.push(undefined);\n                    }\n\n                    currentLines.push({ line: l, state: 'unchanged' });\n                    previousLines.push({ line: l, state: 'unchanged' });\n\n                    break;\n            }\n        }\n\n        const chunkLines: GitDiffChunkLine[] = [];\n\n        let chunkLine: GitDiffChunkLine | undefined = undefined;\n        let current: GitDiffLine | undefined = undefined;\n\n        for (let i = 0; i < currentLines.length; i++) {\n            current = currentLines[i];\n            if (current === undefined) {\n                // Don't think we need to worry about this case because the diff will always have \"padding\" (i.e. unchanged lines) around each chunk\n                if (chunkLine === undefined) continue;\n\n                if (chunkLine.previous === undefined) {\n                    chunkLine.previous = [previousLines[i]];\n                    continue;\n                }\n\n                chunkLine.previous.push(previousLines[i]);\n                continue;\n            }\n\n            chunkLine = {\n                line: current.line,\n                state: current.state,\n                previous: [previousLines[i]]\n            };\n            chunkLines.push(chunkLine);\n        }\n\n        return chunkLines;\n    }\n\n    static parseNameStatus(data: string, repoPath: string): GitFile[] | undefined {\n        if (!data) return undefined;\n\n        const files: GitFile[] = [];\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = nameStatusDiffRegex.exec(data);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            const status = (' ' + match[1]).substr(1);\n            files.push({\n                repoPath,\n                status: (status[0] !== '.' ? status[0].trim() : '?') as GitFileStatus,\n                indexStatus: undefined,\n                workingTreeStatus: undefined,\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                fileName: (' ' + match[2]).substr(1),\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                originalFileName: match[3] === undefined ? undefined : (' ' + match[3]).substr(1)\n            });\n        } while (match != null);\n\n        if (!files.length) return undefined;\n\n        return files;\n    }\n\n    static parseShortStat(data: string): GitDiffShortStat | undefined {\n        if (!data) return undefined;\n\n        const match = shortStatDiffRegex.exec(data);\n        if (match == null) return undefined;\n\n        const files = match[1];\n        const insertions = match[2];\n        const deletions = match[3];\n        return {\n            files: files == null ? 0 : parseInt(files, 10),\n            insertions: insertions == null ? 0 : parseInt(insertions, 10),\n            deletions: deletions == null ? 0 : parseInt(deletions, 10)\n        } as GitDiffShortStat;\n    }\n}\n","'use strict';\nimport { GitDiffParser } from '../parsers/diffParser';\n\nexport interface GitDiffLine {\n    line: string;\n    state: 'added' | 'removed' | 'unchanged';\n}\n\nexport interface GitDiffChunkLine extends GitDiffLine {\n    previous?: (GitDiffLine | undefined)[];\n}\n\nexport class GitDiffChunk {\n    private _chunk: string | undefined;\n    private _lines: GitDiffChunkLine[] | undefined;\n\n    constructor(\n        chunk: string,\n        public currentPosition: { start: number; end: number },\n        public previousPosition: { start: number; end: number }\n    ) {\n        this._chunk = chunk;\n    }\n\n    get lines(): GitDiffChunkLine[] {\n        if (this._lines === undefined) {\n            this._lines = GitDiffParser.parseChunk(this._chunk!);\n            this._chunk = undefined;\n        }\n\n        return this._lines;\n    }\n}\n\nexport interface GitDiff {\n    readonly chunks: GitDiffChunk[];\n\n    readonly diff?: string;\n}\n\nexport interface GitDiffShortStat {\n    readonly files: number;\n    readonly insertions: number;\n    readonly deletions: number;\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Uri } from 'vscode';\nimport { Strings } from '../../system';\nimport { Git } from '../git';\nimport { GitUri } from '../gitUri';\nimport { GitCommit, GitCommitType } from './commit';\nimport { GitFile, GitFileStatus } from './file';\n\nexport class GitLogCommit extends GitCommit {\n    nextSha?: string;\n    nextFileName?: string;\n\n    constructor(\n        type: GitCommitType,\n        repoPath: string,\n        sha: string,\n        author: string,\n        email: string | undefined,\n        date: Date,\n        public readonly committedDate: Date,\n        message: string,\n        fileName: string,\n        public readonly files: GitFile[],\n        public readonly status: GitFileStatus | undefined,\n        originalFileName: string | undefined,\n        previousSha: string | undefined,\n        previousFileName: string | undefined,\n        public readonly parentShas?: string[]\n    ) {\n        super(\n            type,\n            repoPath,\n            sha,\n            author,\n            email,\n            date,\n            message,\n            fileName,\n            originalFileName,\n            previousSha,\n            previousFileName\n        );\n    }\n\n    get isMerge() {\n        return this.parentShas && this.parentShas.length > 1;\n    }\n\n    get nextShortSha() {\n        return this.nextSha && Git.shortenSha(this.nextSha);\n    }\n\n    get nextUri(): Uri {\n        return this.nextFileName ? GitUri.resolveToUri(this.nextFileName, this.repoPath) : this.uri;\n    }\n\n    get previousFileSha(): string {\n        if (this._resolvedPreviousFileSha !== undefined) return this._resolvedPreviousFileSha;\n\n        return this.isFile && this.previousSha ? this.previousSha : `${this.sha}^`;\n    }\n\n    private _diff?: {\n        added: number;\n        deleted: number;\n        changed: number;\n    };\n\n    getDiffStatus() {\n        if (this._diff === undefined) {\n            this._diff = {\n                added: 0,\n                deleted: 0,\n                changed: 0\n            };\n\n            if (this.files.length !== 0) {\n                for (const f of this.files) {\n                    switch (f.status) {\n                        case 'A':\n                        case '?':\n                            this._diff.added++;\n                            break;\n                        case 'D':\n                            this._diff.deleted++;\n                            break;\n                        default:\n                            this._diff.changed++;\n                            break;\n                    }\n                }\n            }\n        }\n\n        return this._diff;\n    }\n\n    getFormattedDiffStatus(\n        options: {\n            compact?: boolean;\n            empty?: string;\n            expand?: boolean;\n            prefix?: string;\n            separator?: string;\n            suffix?: string;\n        } = {}\n    ): string {\n        const { added, changed, deleted } = this.getDiffStatus();\n        if (added === 0 && changed === 0 && deleted === 0) return options.empty || '';\n\n        const { compact, expand, prefix = '', separator = ' ', suffix = '' } = options;\n        if (expand) {\n            let status = '';\n            if (added) {\n                status += `${Strings.pluralize('file', added)} added`;\n            }\n            if (changed) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', changed)} changed`;\n            }\n            if (deleted) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', deleted)} deleted`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        return `${prefix}${compact && added === 0 ? '' : `+${added}${separator}`}${\n            compact && changed === 0 ? '' : `~${changed}${separator}`\n        }${compact && deleted === 0 ? '' : `-${deleted}`}${suffix}`;\n    }\n\n    toFileCommit(fileName: string): GitLogCommit | undefined;\n    toFileCommit(file: GitFile): GitLogCommit;\n    toFileCommit(fileNameOrFile: string | GitFile): GitLogCommit | undefined {\n        let file: GitFile | undefined;\n        if (typeof fileNameOrFile === 'string') {\n            const fileName = Strings.normalizePath(paths.relative(this.repoPath, fileNameOrFile));\n            file = this.files.find(f => f.fileName === fileName);\n            if (file === undefined) return undefined;\n        }\n        else {\n            file = fileNameOrFile;\n        }\n\n        let sha;\n        // If this is a stash commit with an untracked file\n        if (this.type === GitCommitType.Stash && file.status === '?') {\n            sha = `${this.sha}^3`;\n        }\n\n        // If this isn't a single-file commit, we can't trust the previousSha\n        const previousSha = this.isFile ? this.previousSha : `${this.sha}^`;\n\n        return this.with({\n            type: this.isStash ? GitCommitType.StashFile : GitCommitType.File,\n            sha: sha,\n            fileName: file.fileName,\n            originalFileName: file.originalFileName,\n            previousSha: previousSha,\n            previousFileName: file.originalFileName || file.fileName,\n            status: file.status,\n            files: [file]\n        });\n    }\n\n    with(changes: {\n        type?: GitCommitType;\n        sha?: string | null;\n        fileName?: string;\n        author?: string;\n        email?: string;\n        date?: Date;\n        committedDate?: Date;\n        message?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        status?: GitFileStatus;\n        files?: GitFile[] | null;\n    }): GitLogCommit {\n        return new GitLogCommit(\n            changes.type || this.type,\n            this.repoPath,\n            this.getChangedValue(changes.sha, this.sha)!,\n            changes.author || this.author,\n            changes.email || this.email,\n            changes.date || this.date,\n            changes.committedDate || this.committedDate,\n            changes.message || this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.files, this.files) || [],\n            changes.status || this.status,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName),\n            undefined\n        );\n    }\n}\n","'use strict';\nimport { WorkspaceState } from '../../constants';\nimport { Container } from '../../container';\nimport { RemoteProvider } from '../remotes/factory';\n\nexport enum GitRemoteType {\n    Fetch = 'fetch',\n    Push = 'push'\n}\n\nexport class GitRemote {\n    constructor(\n        public readonly repoPath: string,\n        public readonly id: string,\n        public readonly name: string,\n        public readonly scheme: string,\n        public readonly domain: string,\n        public readonly path: string,\n        public readonly provider: RemoteProvider | undefined,\n        public readonly types: { type: GitRemoteType; url: string }[]\n    ) {}\n\n    get default() {\n        const defaultRemote = Container.context.workspaceState.get<string>(WorkspaceState.DefaultRemote);\n        return this.id === defaultRemote;\n    }\n\n    setAsDefault(state: boolean = true) {\n        return Container.context.workspaceState.update(WorkspaceState.DefaultRemote, state ? this.id : undefined);\n    }\n}\n","'use strict';\nimport { commands, env, Range, Uri, window } from 'vscode';\nimport { BuiltInCommands } from '../../constants';\nimport { Logger } from '../../logger';\nimport { Messages } from '../../messages';\nimport { GitLogCommit } from '../models/logCommit';\n\nexport enum RemoteResourceType {\n    Branch = 'branch',\n    Branches = 'branches',\n    Commit = 'commit',\n    File = 'file',\n    Repo = 'repo',\n    Revision = 'revision'\n}\n\nexport type RemoteResource =\n    | {\n          type: RemoteResourceType.Branch;\n          branch: string;\n      }\n    | {\n          type: RemoteResourceType.Branches;\n      }\n    | {\n          type: RemoteResourceType.Commit;\n          sha: string;\n      }\n    | {\n          type: RemoteResourceType.File;\n          branch?: string;\n          fileName: string;\n          range?: Range;\n      }\n    | {\n          type: RemoteResourceType.Repo;\n      }\n    | {\n          type: RemoteResourceType.Revision;\n          branch?: string;\n          commit?: GitLogCommit;\n          fileName: string;\n          range?: Range;\n          sha?: string;\n      };\n\nexport function getNameFromRemoteResource(resource: RemoteResource) {\n    switch (resource.type) {\n        case RemoteResourceType.Branch:\n            return 'Branch';\n        case RemoteResourceType.Branches:\n            return 'Branches';\n        case RemoteResourceType.Commit:\n            return 'Commit';\n        case RemoteResourceType.File:\n            return 'File';\n        case RemoteResourceType.Repo:\n            return 'Repository';\n        case RemoteResourceType.Revision:\n            return 'Revision';\n        default:\n            return '';\n    }\n}\n\nexport abstract class RemoteProvider {\n    private _name: string | undefined;\n\n    constructor(\n        public readonly domain: string,\n        public readonly path: string,\n        public readonly protocol: string = 'https',\n        name?: string,\n        public readonly custom: boolean = false\n    ) {\n        this._name = name;\n    }\n\n    get icon(): string {\n        return 'remote';\n    }\n\n    get displayPath(): string {\n        return this.path;\n    }\n\n    abstract get name(): string;\n\n    protected get baseUrl() {\n        return `${this.protocol}://${this.domain}/${this.path}`;\n    }\n\n    enrichMessage(message: string): string {\n        return message;\n    }\n\n    protected formatName(name: string) {\n        if (this._name !== undefined) return this._name;\n        return `${name}${this.custom ? ` (${this.domain})` : ''}`;\n    }\n\n    protected splitPath(): [string, string] {\n        const index = this.path.indexOf('/');\n        return [this.path.substring(0, index), this.path.substring(index + 1)];\n    }\n\n    protected getUrlForRepository(): string {\n        return this.baseUrl;\n    }\n    protected abstract getUrlForBranches(): string;\n    protected abstract getUrlForBranch(branch: string): string;\n    protected abstract getUrlForCommit(sha: string): string;\n    protected abstract getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string;\n\n    private async openUrl(url?: string): Promise<{} | undefined> {\n        if (url === undefined) return undefined;\n\n        return commands.executeCommand(BuiltInCommands.Open, Uri.parse(url));\n    }\n\n    async copy(resource: RemoteResource): Promise<{} | undefined> {\n        const url = this.url(resource);\n        if (url === undefined) return undefined;\n\n        try {\n            void (await env.clipboard.writeText(url));\n\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    `Unable to copy remote url, xsel is not installed. Please install it via your package manager, e.g. \\`sudo apt install xsel\\``\n                );\n                return;\n            }\n\n            Logger.error(ex, 'CopyRemoteUrlToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy remote url');\n        }\n    }\n\n    open(resource: RemoteResource): Promise<{} | undefined> {\n        return this.openUrl(this.url(resource));\n    }\n\n    url(resource: RemoteResource): string | undefined {\n        switch (resource.type) {\n            case RemoteResourceType.Branch:\n                return this.getUrlForBranch(encodeURIComponent(resource.branch));\n            case RemoteResourceType.Branches:\n                return this.getUrlForBranches();\n            case RemoteResourceType.Commit:\n                return this.getUrlForCommit(encodeURIComponent(resource.sha));\n            case RemoteResourceType.File:\n                return this.getUrlForFile(\n                    resource.fileName,\n                    resource.branch !== undefined ? encodeURIComponent(resource.branch) : undefined,\n                    undefined,\n                    resource.range\n                );\n            case RemoteResourceType.Repo:\n                return this.getUrlForRepository();\n            case RemoteResourceType.Revision:\n                return this.getUrlForFile(\n                    resource.fileName,\n                    resource.branch !== undefined ? encodeURIComponent(resource.branch) : undefined,\n                    resource.sha !== undefined ? encodeURIComponent(resource.sha) : undefined,\n                    resource.range\n                );\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(#([0-9]+))\\b/gi;\n\nconst gitRegex = /\\/_git\\/?/i;\nconst legacyDefaultCollectionRegex = /^DefaultCollection\\//i;\nconst orgAndProjectRegex = /^(.*?)\\/(.*?)\\/(.*)/;\nconst sshDomainRegex = /^(ssh|vs-ssh)\\./i;\nconst sshPathRegex = /^\\/?v\\d\\//i;\n\nexport class AzureDevOpsRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, legacy: boolean = false) {\n        if (sshDomainRegex.test(domain)) {\n            path = path.replace(sshPathRegex, '');\n            domain = domain.replace(sshDomainRegex, '');\n\n            // Add in /_git/ into ssh urls\n            const match = orgAndProjectRegex.exec(path);\n            if (match != null) {\n                const [, org, project, rest] = match;\n\n                // Handle legacy vsts urls\n                if (legacy) {\n                    domain = `${org}.${domain}`;\n                    path = `${project}/_git/${rest}`;\n                }\n                else {\n                    path = `${org}/${project}/_git/${rest}`;\n                }\n            }\n        }\n\n        super(domain, path, protocol, name);\n    }\n\n    get icon() {\n        return 'vsts';\n    }\n\n    get name() {\n        return 'Azure DevOps';\n    }\n\n    private _displayPath: string | undefined;\n    get displayPath(): string {\n        if (this._displayPath === undefined) {\n            this._displayPath = this.path.replace(gitRegex, '/').replace(legacyDefaultCollectionRegex, '');\n        }\n        return this._displayPath;\n    }\n\n    enrichMessage(message: string): string {\n        // Strip off any `_git` part from the repo url\n        const baseUrl = this.baseUrl.replace(gitRegex, '/');\n        // Matches #123\n        return message.replace(issueEnricherRegex, `$1[$2](${baseUrl}/_workitems/edit/$3 \"Open Work Item $2\")`);\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/?version=GB${branch}&_a=history`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `&line=${range.start.line}`;\n            }\n            else {\n                line = `&line=${range.start.line}&lineEnd=${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/commit/${sha}/?_a=contents&path=%2F${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/?path=%2F${fileName}&version=GB${branch}&_a=contents${line}`;\n        return `${this.baseUrl}?path=%2F${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(issue #([0-9]+))\\b/gi;\nconst prEnricherRegex = /(^|\\s)(pull request #([0-9]+))\\b/gi;\n\nexport class BitbucketRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'bitbucket';\n    }\n\n    get name() {\n        return this.formatName('Bitbucket');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches issue #123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches pull request #123\n                .replace(prEnricherRegex, `$1[$2](${this.baseUrl}/pull-requests/$3 \"Open PR $2\")`)\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/branch/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commits/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#${fileName}-${range.start.line}`;\n            }\n            else {\n                line = `#${fileName}-${range.start.line}:${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/src/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/src/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(issue #([0-9]+))\\b/gi;\nconst prEnricherRegex = /(^|\\s)(pull request #([0-9]+))\\b/gi;\n\nexport class BitbucketServerRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    protected get baseUrl() {\n        const [project, repo] = this.splitPath();\n        return `https://${this.domain}/projects/${project}/repos/${repo}`;\n    }\n\n    get icon() {\n        return 'bitbucket';\n    }\n\n    get name() {\n        return this.formatName('Bitbucket Server');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches issue #123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches pull request #123\n                .replace(prEnricherRegex, `$1[$2](${this.baseUrl}/pull-requests/$3 \"Open PR $2\")`)\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits?until=${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commits/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#${range.start.line}`;\n            }\n            else {\n                line = `#${range.start.line}-${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/browse/${fileName}?at=${sha}${line}`;\n        if (branch) return `${this.baseUrl}/browse/${fileName}?at=${branch}${line}`;\n        return `${this.baseUrl}/browse/${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemotesUrlsConfig } from '../../configuration';\nimport { Strings } from '../../system';\nimport { RemoteProvider } from './provider';\n\nexport class CustomRemote extends RemoteProvider {\n    private readonly urls: RemotesUrlsConfig;\n\n    constructor(domain: string, path: string, urls: RemotesUrlsConfig, protocol?: string, name?: string) {\n        super(domain, path, protocol, name, true);\n        this.urls = urls;\n    }\n\n    get name() {\n        return this.formatName('Custom');\n    }\n\n    protected getUrlForRepository(): string {\n        return Strings.interpolate(this.urls.repository, this.getContext());\n    }\n\n    protected getUrlForBranches(): string {\n        return Strings.interpolate(this.urls.branches, this.getContext());\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return Strings.interpolate(this.urls.branch, this.getContext({ branch: branch }));\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return Strings.interpolate(this.urls.commit, this.getContext({ id: sha }));\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = Strings.interpolate(this.urls.fileLine, { line: range.start.line });\n            }\n            else {\n                line = Strings.interpolate(this.urls.fileRange, { start: range.start.line, end: range.end.line });\n            }\n        }\n\n        if (sha) {\n            return Strings.interpolate(\n                this.urls.fileInCommit,\n                this.getContext({ id: sha, file: fileName, line: line })\n            );\n        }\n        if (branch) {\n            return Strings.interpolate(\n                this.urls.fileInBranch,\n                this.getContext({ branch: branch, file: fileName, line: line })\n            );\n        }\n        return Strings.interpolate(this.urls.file, this.getContext({ file: fileName, line: line }));\n    }\n\n    private getContext(context?: {}) {\n        const [repoBase, repoPath] = this.splitPath();\n        return {\n            repo: this.path,\n            repoBase: repoBase,\n            repoPath: repoPath,\n            ...(context || {})\n        };\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)((?:#|gh-)([0-9]+))\\b/gi;\nconst issueEnricher3rdParyRegex = /\\b((\\w+-?\\w+(?!-)\\/\\w+-?\\w+(?!-))#([0-9]+))\\b/g;\n\nexport class GitHubRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'github';\n    }\n\n    get name() {\n        return this.formatName('GitHub');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches #123 or gh-123 or GH-123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches eamodio/vscode-gitlens#123\n                .replace(\n                    issueEnricher3rdParyRegex,\n                    `[$1](${this.protocol}://${this.domain}/$2/issues/$3 \"Open Issue #$3 from $2\")`\n                )\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#L${range.start.line}`;\n            }\n            else {\n                line = `#L${range.start.line}-L${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/blob/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/blob/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(#([0-9]+))\\b/gi;\n\nexport class GitLabRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'gitlab';\n    }\n\n    get name() {\n        return this.formatName('GitLab');\n    }\n\n    enrichMessage(message: string): string {\n        // Matches #123\n        return message.replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`);\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#L${range.start.line}`;\n            }\n            else {\n                line = `#L${range.start.line}-${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/blob/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/blob/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { CustomRemoteType, RemotesConfig } from '../../configuration';\nimport { Logger } from '../../logger';\nimport { AzureDevOpsRemote } from './azure-devops';\nimport { BitbucketRemote } from './bitbucket';\nimport { BitbucketServerRemote } from './bitbucket-server';\nimport { CustomRemote } from './custom';\nimport { GitHubRemote } from './github';\nimport { GitLabRemote } from './gitlab';\nimport { RemoteProvider } from './provider';\n\nexport { RemoteProvider };\nexport type RemoteProviders = [string | RegExp, ((domain: string, path: string) => RemoteProvider)][];\n\nconst defaultProviders: RemoteProviders = [\n    ['bitbucket.org', (domain: string, path: string) => new BitbucketRemote(domain, path)],\n    ['github.com', (domain: string, path: string) => new GitHubRemote(domain, path)],\n    ['gitlab.com', (domain: string, path: string) => new GitLabRemote(domain, path)],\n    [/\\bdev\\.azure\\.com$/i, (domain: string, path: string) => new AzureDevOpsRemote(domain, path)],\n    [/\\bbitbucket\\b/i, (domain: string, path: string) => new BitbucketServerRemote(domain, path)],\n    [/\\bgitlab\\b/i, (domain: string, path: string) => new GitLabRemote(domain, path)],\n    [\n        /\\bvisualstudio\\.com$/i,\n        (domain: string, path: string) => new AzureDevOpsRemote(domain, path, undefined, undefined, true)\n    ]\n];\n\nexport class RemoteProviderFactory {\n    static factory(providers: RemoteProviders): (domain: string, path: string) => RemoteProvider | undefined {\n        return (domain: string, path: string) => this.create(providers, domain, path);\n    }\n\n    static create(providers: RemoteProviders, domain: string, path: string): RemoteProvider | undefined {\n        try {\n            const key = domain.toLowerCase();\n            for (const [matcher, creator] of providers) {\n                if (\n                    (typeof matcher === 'string' && matcher === key) ||\n                    (typeof matcher !== 'string' && matcher.test(key))\n                ) {\n                    return creator(domain, path);\n                }\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'RemoteProviderFactory');\n            return undefined;\n        }\n    }\n\n    static loadProviders(cfg: RemotesConfig[] | null | undefined): RemoteProviders {\n        const providers: RemoteProviders = [];\n\n        if (cfg != null && cfg.length > 0) {\n            for (const rc of cfg) {\n                const provider = this.getCustomProvider(rc);\n                if (provider === undefined) continue;\n\n                providers.push([rc.domain.toLowerCase(), provider]);\n            }\n        }\n\n        providers.push(...defaultProviders);\n        return providers;\n    }\n\n    private static getCustomProvider(cfg: RemotesConfig) {\n        switch (cfg.type) {\n            case CustomRemoteType.Bitbucket:\n                return (domain: string, path: string) =>\n                    new BitbucketRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.BitbucketServer:\n                return (domain: string, path: string) =>\n                    new BitbucketServerRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.Custom:\n                return (domain: string, path: string) =>\n                    new CustomRemote(domain, path, cfg.urls!, cfg.protocol, cfg.name);\n            case CustomRemoteType.GitHub:\n                return (domain: string, path: string) => new GitHubRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.GitLab:\n                return (domain: string, path: string) => new GitLabRemote(domain, path, cfg.protocol, cfg.name, true);\n        }\n        return undefined;\n    }\n}\n","'use strict';\nimport * as fs from 'fs';\nimport * as paths from 'path';\nimport {\n    commands,\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    ProgressLocation,\n    RelativePattern,\n    Uri,\n    window,\n    workspace,\n    WorkspaceFolder\n} from 'vscode';\nimport { configuration, RemotesConfig } from '../../configuration';\nimport { StarredRepositories, WorkspaceState } from '../../constants';\nimport { Container } from '../../container';\nimport { Functions, gate, log } from '../../system';\nimport { GitBranch, GitDiffShortStat, GitRemote, GitStash, GitStatus, GitTag } from '../git';\nimport { GitUri } from '../gitUri';\nimport { RemoteProviderFactory, RemoteProviders } from '../remotes/factory';\n\nexport enum RepositoryChange {\n    Config = 'config',\n    Closed = 'closed',\n    // FileSystem = 'file-system',\n    Remotes = 'remotes',\n    Repository = 'repository',\n    Stashes = 'stashes',\n    Tags = 'tags'\n}\n\nexport class RepositoryChangeEvent {\n    readonly changes: RepositoryChange[] = [];\n\n    constructor(\n        public readonly repository?: Repository\n    ) {}\n\n    changed(change: RepositoryChange, solely: boolean = false) {\n        if (solely) return this.changes.length === 1 && this.changes[0] === change;\n\n        return this.changes.includes(change);\n\n        // const changed = this.changes.includes(change);\n        // if (changed) return true;\n\n        // if (change === RepositoryChange.Repository) {\n        //     return this.changes.includes(RepositoryChange.Stashes);\n        // }\n\n        // return false;\n    }\n}\n\nexport interface RepositoryFileSystemChangeEvent {\n    readonly repository?: Repository;\n    readonly uris: Uri[];\n}\n\nexport class Repository implements Disposable {\n    private _onDidChange = new EventEmitter<RepositoryChangeEvent>();\n    get onDidChange(): Event<RepositoryChangeEvent> {\n        return this._onDidChange.event;\n    }\n\n    private _onDidChangeFileSystem = new EventEmitter<RepositoryFileSystemChangeEvent>();\n    get onDidChangeFileSystem(): Event<RepositoryFileSystemChangeEvent> {\n        return this._onDidChangeFileSystem.event;\n    }\n\n    readonly formattedName: string;\n    readonly id: string;\n    readonly index: number;\n    readonly name: string;\n    readonly normalizedPath: string;\n    readonly supportsChangeEvents: boolean = true;\n\n    private _branch: Promise<GitBranch | undefined> | undefined;\n    private readonly _disposable: Disposable;\n    private _fireChangeDebounced: ((e: RepositoryChangeEvent) => void) | undefined = undefined;\n    private _fireFileSystemChangeDebounced: ((e: RepositoryFileSystemChangeEvent) => void) | undefined = undefined;\n    private _fsWatchCounter = 0;\n    private _fsWatcherDisposable: Disposable | undefined;\n    private _pendingChanges: { repo?: RepositoryChangeEvent; fs?: RepositoryFileSystemChangeEvent } = {};\n    private _providers: RemoteProviders | undefined;\n    private _remotes: Promise<GitRemote[]> | undefined;\n    private _suspended: boolean;\n\n    constructor(\n        public readonly folder: WorkspaceFolder,\n        public readonly path: string,\n        public readonly root: boolean,\n        private readonly onAnyRepositoryChanged: (repo: Repository, reason: RepositoryChange) => void,\n        suspended: boolean,\n        closed: boolean = false\n    ) {\n        const relativePath = paths.relative(folder.uri.fsPath, path);\n        if (root) {\n            // Check if the repository is not contained by a workspace folder\n            const repoFolder = workspace.getWorkspaceFolder(GitUri.fromRepoPath(path));\n            if (repoFolder === undefined) {\n                // If it isn't within a workspace folder we can't get change events, see: https://github.com/Microsoft/vscode/issues/3025\n                this.supportsChangeEvents = false;\n                this.formattedName = this.name = paths.basename(path);\n            }\n            else {\n                this.formattedName = this.name = folder.name;\n            }\n        }\n        else {\n            this.formattedName = relativePath ? `${folder.name} (${relativePath})` : folder.name;\n            this.name = folder.name;\n        }\n        this.index = folder.index;\n\n        this.normalizedPath = (path.endsWith('/') ? path : `${path}/`).toLowerCase();\n        this.id = this.normalizedPath;\n\n        this._suspended = suspended;\n        this._closed = closed;\n\n        // TODO: createFileSystemWatcher doesn't work unless the folder is part of the workspaceFolders\n        // https://github.com/Microsoft/vscode/issues/3025\n        const watcher = workspace.createFileSystemWatcher(\n            new RelativePattern(\n                folder,\n                '{\\\n**/.git/config,\\\n**/.git/index,\\\n**/.git/HEAD,\\\n**/.git/refs/stash,\\\n**/.git/refs/heads/**,\\\n**/.git/refs/remotes/**,\\\n**/.git/refs/tags/**,\\\n**/.gitignore\\\n}'\n            )\n        );\n        this._disposable = Disposable.from(\n            watcher,\n            watcher.onDidChange(this.onRepositoryChanged, this),\n            watcher.onDidCreate(this.onRepositoryChanged, this),\n            watcher.onDidDelete(this.onRepositoryChanged, this),\n            configuration.onDidChange(this.onConfigurationChanged, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.stopWatchingFileSystem();\n\n        // // Clean up any disposables in storage\n        // for (const item of this.storage.values()) {\n        //     if (item != null && typeof item.dispose === 'function') {\n        //         item.dispose();\n        //     }\n        // }\n\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('remotes').value;\n        if (configuration.changed(e, section, this.folder.uri)) {\n            this._providers = RemoteProviderFactory.loadProviders(\n                configuration.get<RemotesConfig[] | null | undefined>(section, this.folder.uri)\n            );\n\n            if (!configuration.initializing(e)) {\n                this._remotes = undefined;\n                this.fireChange(RepositoryChange.Remotes);\n            }\n        }\n    }\n\n    private onFileSystemChanged(uri: Uri) {\n        // Ignore .git changes\n        if (/\\.git(?:\\/|\\\\|$)/.test(uri.fsPath)) return;\n\n        this.fireFileSystemChange(uri);\n    }\n\n    private onRepositoryChanged(uri: Uri) {\n        if (uri !== undefined && uri.path.endsWith('refs/stash')) {\n            this.fireChange(RepositoryChange.Stashes);\n\n            return;\n        }\n\n        this._branch = undefined;\n\n        if (uri !== undefined && uri.path.endsWith('refs/remotes')) {\n            this._remotes = undefined;\n            this.fireChange(RepositoryChange.Remotes);\n\n            return;\n        }\n\n        if (uri !== undefined && uri.path.endsWith('refs/tags')) {\n            this.fireChange(RepositoryChange.Tags);\n\n            return;\n        }\n\n        if (uri !== undefined && uri.path.endsWith('config')) {\n            this._remotes = undefined;\n            this.fireChange(RepositoryChange.Config, RepositoryChange.Remotes);\n\n            return;\n        }\n\n        this.onAnyRepositoryChanged(this, RepositoryChange.Repository);\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    private _closed: boolean = false;\n    get closed(): boolean {\n        return this._closed;\n    }\n    set closed(value: boolean) {\n        const changed = this._closed !== value;\n        this._closed = value;\n        if (changed) {\n            this.onAnyRepositoryChanged(this, RepositoryChange.Closed);\n            this.fireChange(RepositoryChange.Closed);\n        }\n    }\n\n    containsUri(uri: Uri) {\n        if (uri instanceof GitUri) {\n            uri = uri.repoPath !== undefined ? GitUri.file(uri.repoPath) : uri.documentUri();\n        }\n\n        return this.folder === workspace.getWorkspaceFolder(uri);\n    }\n\n    @gate()\n    @log()\n    async fetch(options: { progress?: boolean; remote?: string } = {}) {\n        const { progress, ...opts } = { progress: true, ...options };\n        if (!progress) return this.fetchCore(opts);\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Fetching ${opts.remote ? `${opts.remote} of ` : ''}${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.fetchCore(opts)\n        );\n    }\n\n    private async fetchCore(options: { remote?: string } = {}) {\n        await Container.git.fetch(this.path, options.remote);\n\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    getBranch(): Promise<GitBranch | undefined> {\n        if (this._branch === undefined || !this.supportsChangeEvents) {\n            this._branch = Container.git.getBranch(this.path);\n        }\n        return this._branch;\n    }\n\n    getBranches(): Promise<GitBranch[]> {\n        return Container.git.getBranches(this.path);\n    }\n\n    getChangedFilesCount(sha?: string): Promise<GitDiffShortStat | undefined> {\n        return Container.git.getChangedFilesCount(this.path, sha);\n    }\n\n    async getLastFetched(): Promise<number> {\n        const hasRemotes = await this.hasRemotes();\n        if (!hasRemotes || Container.vsls.isMaybeGuest) return 0;\n\n        return new Promise<number>((resolve, reject) =>\n            fs.stat(paths.join(this.path, '.git/FETCH_HEAD'), (err, stat) => resolve(err ? 0 : stat.mtime.getTime()))\n        );\n    }\n\n    getRemotes(): Promise<GitRemote[]> {\n        if (this._remotes === undefined || !this.supportsChangeEvents) {\n            if (this._providers === undefined) {\n                const remotesCfg = configuration.get<RemotesConfig[] | null | undefined>(\n                    configuration.name('remotes').value,\n                    this.folder.uri\n                );\n                this._providers = RemoteProviderFactory.loadProviders(remotesCfg);\n            }\n\n            this._remotes = Container.git.getRemotesCore(this.path, this._providers);\n        }\n\n        return this._remotes;\n    }\n\n    getStashList(): Promise<GitStash | undefined> {\n        return Container.git.getStashList(this.path);\n    }\n\n    getStatus(): Promise<GitStatus | undefined> {\n        return Container.git.getStatusForRepo(this.path);\n    }\n\n    getTags(options?: { includeRefs?: boolean }): Promise<GitTag[]> {\n        return Container.git.getTags(this.path, options);\n    }\n\n    async hasRemotes(): Promise<boolean> {\n        const remotes = await this.getRemotes();\n        return remotes !== undefined && remotes.length > 0;\n    }\n\n    async hasTrackingBranch(): Promise<boolean> {\n        const branch = await this.getBranch();\n        return branch !== undefined && branch.tracking !== undefined;\n    }\n\n    @gate()\n    @log()\n    async pull(options: { progress?: boolean } = {}) {\n        const { progress } = { progress: true, ...options };\n        if (!progress) return this.pullCore();\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pulling ${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.pullCore()\n        );\n    }\n\n    private async pullCore() {\n        await commands.executeCommand('git.pull', this.path);\n\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    @gate()\n    @log()\n    async push(options: { force?: boolean; progress?: boolean } = {}) {\n        const { force, progress } = { progress: true, ...options };\n        if (!progress) return this.pushCore(force);\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pushing ${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.pushCore(force)\n        );\n    }\n\n    private async pushCore(force: boolean = false) {\n        await commands.executeCommand(force ? 'git.pushForce' : 'git.push', this.path);\n\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    resume() {\n        if (!this._suspended) return;\n\n        this._suspended = false;\n\n        // If we've come back into focus and we are dirty, fire the change events\n\n        if (this._pendingChanges.repo !== undefined) {\n            this._fireChangeDebounced!(this._pendingChanges.repo);\n        }\n\n        if (this._pendingChanges.fs !== undefined) {\n            this._fireFileSystemChangeDebounced!(this._pendingChanges.fs);\n        }\n    }\n\n    get starred() {\n        const starred = Container.context.workspaceState.get<StarredRepositories>(WorkspaceState.StarredRepositories);\n        return starred !== undefined && starred[this.id] === true;\n    }\n\n    star() {\n        return this.updateStarred(true);\n    }\n\n    unstar() {\n        return this.updateStarred(false);\n    }\n\n    private async updateStarred(star: boolean) {\n        let starred = Container.context.workspaceState.get<StarredRepositories>(WorkspaceState.StarredRepositories);\n        if (starred === undefined) {\n            starred = Object.create(null);\n        }\n\n        if (star) {\n            starred![this.id] = true;\n        }\n        else {\n            const { [this.id]: _, ...rest } = starred!;\n            starred = rest;\n        }\n        await Container.context.workspaceState.update(WorkspaceState.StarredRepositories, starred);\n    }\n\n    startWatchingFileSystem() {\n        this._fsWatchCounter++;\n        if (this._fsWatcherDisposable !== undefined) return;\n\n        // TODO: createFileSystemWatcher doesn't work unless the folder is part of the workspaceFolders\n        // https://github.com/Microsoft/vscode/issues/3025\n        const watcher = workspace.createFileSystemWatcher(new RelativePattern(this.folder, `**`));\n        this._fsWatcherDisposable = Disposable.from(\n            watcher,\n            watcher.onDidChange(this.onFileSystemChanged, this),\n            watcher.onDidCreate(this.onFileSystemChanged, this),\n            watcher.onDidDelete(this.onFileSystemChanged, this)\n        );\n    }\n\n    stopWatchingFileSystem() {\n        if (this._fsWatcherDisposable === undefined) return;\n        if (--this._fsWatchCounter > 0) return;\n\n        this._fsWatcherDisposable.dispose();\n        this._fsWatcherDisposable = undefined;\n    }\n\n    suspend() {\n        this._suspended = true;\n    }\n\n    private fireChange(...reasons: RepositoryChange[]) {\n        if (this._fireChangeDebounced === undefined) {\n            this._fireChangeDebounced = Functions.debounce(this.fireChangeCore, 250);\n        }\n\n        if (this._pendingChanges.repo === undefined) {\n            this._pendingChanges.repo = new RepositoryChangeEvent(this);\n        }\n\n        const e = this._pendingChanges.repo;\n\n        for (const reason of reasons) {\n            if (!e.changes.includes(reason)) {\n                e.changes.push(reason);\n            }\n        }\n\n        if (this._suspended) return;\n\n        this._fireChangeDebounced(e);\n    }\n\n    private fireChangeCore(e: RepositoryChangeEvent) {\n        this._pendingChanges.repo = undefined;\n\n        this._onDidChange.fire(e);\n    }\n\n    private fireFileSystemChange(uri: Uri) {\n        if (this._fireFileSystemChangeDebounced === undefined) {\n            this._fireFileSystemChangeDebounced = Functions.debounce(this.fireFileSystemChangeCore, 2500);\n        }\n\n        if (this._pendingChanges.fs === undefined) {\n            this._pendingChanges.fs = { repository: this, uris: [] };\n        }\n\n        const e = this._pendingChanges.fs;\n        e.uris.push(uri);\n\n        if (this._suspended) return;\n\n        this._fireFileSystemChangeDebounced(e);\n    }\n\n    private fireFileSystemChangeCore(e: RepositoryFileSystemChangeEvent) {\n        this._pendingChanges.fs = undefined;\n\n        this._onDidChangeFileSystem.fire(e);\n    }\n}\n","'use strict';\nimport { GitCommitType } from './commit';\nimport { GitFile, GitFileStatus } from './file';\nimport { GitLogCommit } from './logCommit';\n\nexport class GitStashCommit extends GitLogCommit {\n    constructor(\n        type: GitCommitType,\n        public readonly stashName: string,\n        repoPath: string,\n        sha: string,\n        date: Date,\n        committedDate: Date,\n        message: string,\n        fileName: string,\n        files: GitFile[],\n        status?: GitFileStatus | undefined,\n        originalFileName?: string | undefined,\n        previousSha?: string | undefined,\n        previousFileName?: string | undefined\n    ) {\n        super(\n            type,\n            repoPath,\n            sha,\n            'You',\n            undefined,\n            date,\n            committedDate,\n            message,\n            fileName,\n            files,\n            status,\n            originalFileName,\n            previousSha === undefined ? `${sha}^` : previousSha,\n            previousFileName\n        );\n    }\n\n    get shortSha() {\n        return this.stashName;\n    }\n\n    with(changes: {\n        type?: GitCommitType;\n        sha?: string | null;\n        fileName?: string;\n        date?: Date;\n        committedDate?: Date;\n        message?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        status?: GitFileStatus;\n        files?: GitFile[] | null;\n    }): GitLogCommit {\n        return new GitStashCommit(\n            changes.type || this.type,\n            this.stashName,\n            this.repoPath,\n            this.getChangedValue(changes.sha, this.sha)!,\n            changes.date || this.date,\n            changes.committedDate || this.committedDate,\n            changes.message || this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.files, this.files) || [],\n            changes.status || this.status,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName)\n        );\n    }\n}\n","'use strict';\n\nexport class GitTag {\n    constructor(\n        public readonly repoPath: string,\n        public readonly name: string,\n        public readonly sha?: string,\n        public readonly annotation?: string\n    ) {}\n\n    get ref() {\n        return this.name;\n    }\n\n    private _basename: string | undefined;\n    getBasename(): string {\n        if (this._basename === undefined) {\n            const index = this.name.lastIndexOf('/');\n            this._basename = index !== -1 ? this.name.substring(index + 1) : this.name;\n        }\n\n        return this._basename;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Strings } from '../../system';\nimport { Git, GitAuthor, GitBlame, GitBlameCommit, GitCommitLine } from './../git';\n\ninterface BlameEntry {\n    sha: string;\n\n    line: number;\n    originalLine: number;\n    lineCount: number;\n\n    author: string;\n    authorDate?: string;\n    authorTimeZone?: string;\n    authorEmail?: string;\n\n    previousSha?: string;\n    previousFileName?: string;\n\n    fileName?: string;\n\n    summary?: string;\n}\n\nexport class GitBlameParser {\n    static parse(\n        data: string,\n        repoPath: string | undefined,\n        fileName: string,\n        currentUser: { name?: string; email?: string } | undefined\n    ): GitBlame | undefined {\n        if (!data) return undefined;\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitBlameCommit> = new Map();\n        const lines: GitCommitLine[] = [];\n\n        let relativeFileName = repoPath && fileName;\n\n        let entry: BlameEntry | undefined = undefined;\n        let line: string;\n        let lineParts: string[];\n\n        let first = true;\n\n        for (line of Strings.lines(data)) {\n            lineParts = line.split(' ');\n            if (lineParts.length < 2) continue;\n\n            if (entry === undefined) {\n                entry = {\n                    sha: lineParts[0],\n                    originalLine: parseInt(lineParts[1], 10) - 1,\n                    line: parseInt(lineParts[2], 10) - 1,\n                    lineCount: parseInt(lineParts[3], 10)\n                } as BlameEntry;\n\n                continue;\n            }\n\n            switch (lineParts[0]) {\n                case 'author':\n                    if (Git.isUncommitted(entry.sha)) {\n                        entry.author = 'You';\n                    }\n                    else {\n                        entry.author = lineParts\n                            .slice(1)\n                            .join(' ')\n                            .trim();\n                    }\n                    break;\n\n                case 'author-mail':\n                    if (Git.isUncommitted(entry.sha)) {\n                        entry.authorEmail = currentUser !== undefined ? currentUser.email : undefined;\n                        continue;\n                    }\n\n                    entry.authorEmail = lineParts\n                        .slice(1)\n                        .join(' ')\n                        .trim();\n                    const start = entry.authorEmail.indexOf('<');\n                    if (start >= 0) {\n                        const end = entry.authorEmail.indexOf('>', start);\n                        if (end > start) {\n                            entry.authorEmail = entry.authorEmail.substring(start + 1, end);\n                        }\n                        else {\n                            entry.authorEmail = entry.authorEmail.substring(start + 1);\n                        }\n                    }\n\n                    break;\n\n                case 'author-time':\n                    entry.authorDate = lineParts[1];\n                    break;\n\n                case 'author-tz':\n                    entry.authorTimeZone = lineParts[1];\n                    break;\n\n                case 'summary':\n                    entry.summary = lineParts\n                        .slice(1)\n                        .join(' ')\n                        .trim();\n                    break;\n\n                case 'previous':\n                    entry.previousSha = lineParts[1];\n                    entry.previousFileName = lineParts.slice(2).join(' ');\n                    break;\n\n                case 'filename':\n                    entry.fileName = lineParts.slice(1).join(' ');\n\n                    if (first && repoPath === undefined) {\n                        // Try to get the repoPath from the most recent commit\n                        repoPath = Strings.normalizePath(\n                            fileName.replace(fileName.startsWith('/') ? `/${entry.fileName}` : entry.fileName!, '')\n                        );\n                        relativeFileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n                    }\n                    else {\n                        relativeFileName = entry.fileName!;\n                    }\n                    first = false;\n\n                    GitBlameParser.parseEntry(entry, repoPath, relativeFileName, commits, authors, lines, currentUser);\n\n                    entry = undefined;\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        for (const [, c] of commits) {\n            if (c.author === undefined) return;\n\n            const author = authors.get(c.author);\n            if (author === undefined) return;\n\n            author.lineCount += c.lines.length;\n        }\n\n        const sortedAuthors = new Map([...authors.entries()].sort((a, b) => b[1].lineCount - a[1].lineCount));\n\n        return {\n            repoPath: repoPath,\n            authors: sortedAuthors,\n            commits: commits,\n            lines: lines\n        } as GitBlame;\n    }\n\n    private static parseEntry(\n        entry: BlameEntry,\n        repoPath: string | undefined,\n        relativeFileName: string,\n        commits: Map<string, GitBlameCommit>,\n        authors: Map<string, GitAuthor>,\n        lines: GitCommitLine[],\n        currentUser: { name?: string; email?: string } | undefined\n    ) {\n        let commit = commits.get(entry.sha);\n        if (commit === undefined) {\n            if (entry.author !== undefined) {\n                if (\n                    currentUser !== undefined &&\n                    // Name or e-mail is configured\n                    (currentUser.name !== undefined || currentUser.email !== undefined) &&\n                    // Match on name if configured\n                    (currentUser.name === undefined || currentUser.name === entry.author) &&\n                    // Match on email if configured\n                    (currentUser.email === undefined || currentUser.email === entry.authorEmail)\n                ) {\n                    entry.author = 'You';\n                }\n\n                let author = authors.get(entry.author);\n                if (author === undefined) {\n                    author = {\n                        name: entry.author,\n                        lineCount: 0\n                    };\n                    authors.set(entry.author, author);\n                }\n            }\n\n            commit = new GitBlameCommit(\n                repoPath!,\n                entry.sha,\n                entry.author,\n                entry.authorEmail,\n                new Date((entry.authorDate as any) * 1000),\n                entry.summary!,\n                relativeFileName,\n                relativeFileName !== entry.fileName ? entry.fileName : undefined,\n                entry.previousSha,\n                entry.previousSha && entry.previousFileName,\n                []\n            );\n\n            commits.set(entry.sha, commit);\n        }\n\n        for (let i = 0, len = entry.lineCount; i < len; i++) {\n            const line: GitCommitLine = {\n                sha: entry.sha,\n                line: entry.line + i,\n                originalLine: entry.originalLine + i\n            };\n\n            if (commit.previousSha) {\n                line.previousSha = commit.previousSha;\n            }\n\n            commit.lines.push(line);\n            lines[line.line] = line;\n        }\n    }\n}\n","'use strict';\nimport { GitBranch } from './../git';\n\nconst branchWithTrackingRegex = /^(\\*?)\\s+(.+?)\\s+([0-9,a-f]+)\\s+(?:\\[(.*?\\/.*?)(?:\\:\\s(.*)\\]|\\]))?/gm;\nconst branchWithTrackingStateRegex = /^(?:ahead\\s([0-9]+))?[,\\s]*(?:behind\\s([0-9]+))?/;\n\nexport class GitBranchParser {\n    static parse(data: string, repoPath: string): GitBranch[] | undefined {\n        if (!data) return undefined;\n\n        const branches: GitBranch[] = [];\n\n        let ahead;\n        let behind;\n        let current;\n        let name;\n        let sha;\n        let state;\n        let tracking;\n        let match: RegExpExecArray | null = null;\n        do {\n            match = branchWithTrackingRegex.exec(data);\n            if (match == null) break;\n\n            [, current, name, sha, tracking, state] = match;\n            [ahead, behind] = this.parseState(state);\n            branches.push(\n                new GitBranch(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + name).substr(1),\n                    current === '*',\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    sha === undefined ? undefined : (' ' + sha).substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    tracking === undefined ? undefined : (' ' + tracking).substr(1),\n                    ahead,\n                    behind\n                )\n            );\n        } while (match != null);\n\n        if (!branches.length) return undefined;\n\n        return branches;\n    }\n\n    static parseState(state: string): [number, number] {\n        if (state == null) return [0, 0];\n\n        const match = branchWithTrackingStateRegex.exec(state);\n        if (match == null) return [0, 0];\n\n        const ahead = parseInt(match[1], 10);\n        const behind = parseInt(match[2], 10);\n        return [isNaN(ahead) ? 0 : ahead, isNaN(behind) ? 0 : behind];\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Range } from 'vscode';\nimport { Arrays, Strings } from '../../system';\nimport { Git, GitAuthor, GitCommitType, GitFile, GitFileStatus, GitLog, GitLogCommit } from './../git';\n\ninterface LogEntry {\n    ref?: string;\n\n    author?: string;\n    date?: string;\n    committedDate?: string;\n    email?: string;\n\n    parentShas?: string[];\n\n    fileName?: string;\n    originalFileName?: string;\n    files?: GitFile[];\n\n    status?: GitFileStatus;\n\n    summary?: string;\n}\n\nconst diffRegex = /diff --git a\\/(.*) b\\/(.*)/;\nconst emptyEntry: LogEntry = {};\n\nexport class GitLogParser {\n    static parse(\n        data: string,\n        type: GitCommitType,\n        repoPath: string | undefined,\n        fileName: string | undefined,\n        sha: string | undefined,\n        currentUser: { name?: string; email?: string } | undefined,\n        maxCount: number | undefined,\n        reverse: boolean,\n        range: Range | undefined\n    ): GitLog | undefined {\n        if (!data) return undefined;\n\n        let relativeFileName: string;\n        let recentCommit: GitLogCommit | undefined = undefined;\n\n        let entry: LogEntry = emptyEntry;\n        let line: string | undefined = undefined;\n        let token: number;\n\n        let i = 0;\n        let first = true;\n\n        const lines = Strings.lines(data + '</f>');\n        // Skip the first line since it will always be </f>\n        let next = lines.next();\n        if (next.done) return undefined;\n\n        if (repoPath !== undefined) {\n            repoPath = Strings.normalizePath(repoPath);\n        }\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitLogCommit> = new Map();\n        let truncationCount = maxCount;\n\n        while (true) {\n            next = lines.next();\n            if (next.done) break;\n\n            line = next.value;\n\n            // Since log --reverse doesn't properly honor a max count -- enforce it here\n            if (reverse && maxCount && i >= maxCount) break;\n\n            // <<1-char token>> <data>\n            // e.g. <r> bd1452a2dc\n            token = line.charCodeAt(1);\n\n            switch (token) {\n                case 114: // 'r': // ref\n                    entry = {\n                        ref: line.substring(4)\n                    };\n                    break;\n\n                case 97: // 'a': // author\n                    if (Git.isUncommitted(entry.ref)) {\n                        entry.author = 'You';\n                    }\n                    else {\n                        entry.author = line.substring(4);\n                    }\n                    break;\n\n                case 101: // 'e': // author-mail\n                    entry.email = line.substring(4);\n                    break;\n\n                case 100: // 'd': // author-date\n                    entry.date = line.substring(4);\n                    break;\n\n                case 99: // 'c': // committer-date\n                    entry.committedDate = line.substring(4);\n                    break;\n\n                case 112: // 'p': // parents\n                    entry.parentShas = line.substring(4).split(' ');\n                    break;\n\n                case 115: // 's': // summary\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</s>') break;\n\n                        if (entry.summary === undefined) {\n                            entry.summary = line;\n                        }\n                        else {\n                            entry.summary += `\\n${line}`;\n                        }\n                    }\n\n                    // Remove the trailing newline\n                    if (entry.summary != null && entry.summary.charCodeAt(entry.summary.length - 1) === 10) {\n                        entry.summary = entry.summary.slice(0, -1);\n                    }\n                    break;\n\n                case 102: // 'f': // files\n                    // Skip the blank line git adds before the files\n                    next = lines.next();\n                    if (next.done || next.value === '</f>') break;\n\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</f>') break;\n\n                        if (line.startsWith('warning:')) continue;\n\n                        if (type === GitCommitType.Branch) {\n                            const status = {\n                                status: line[0] as GitFileStatus,\n                                fileName: line.substring(1),\n                                originalFileName: undefined\n                            };\n                            this.parseFileName(status);\n\n                            if (status.fileName) {\n                                if (entry.files === undefined) {\n                                    entry.files = [];\n                                }\n                                entry.files.push(status);\n                            }\n                        }\n                        else if (line.startsWith('diff')) {\n                            const matches = diffRegex.exec(line);\n                            if (matches != null) {\n                                entry.fileName = matches[1];\n                                const originalFileName = matches[2];\n                                if (entry.fileName !== originalFileName) {\n                                    entry.originalFileName = originalFileName;\n                                    entry.status = 'R';\n                                }\n                                else {\n                                    entry.status = 'M';\n                                }\n                            }\n\n                            while (true) {\n                                next = lines.next();\n                                if (next.done || next.value === '</f>') break;\n                            }\n                            break;\n                        }\n                        else {\n                            entry.status = line[0] as GitFileStatus;\n                            entry.fileName = line.substring(1);\n                            this.parseFileName(entry);\n                        }\n                    }\n\n                    if (entry.files !== undefined) {\n                        entry.fileName = Arrays.filterMap(entry.files, f => (f.fileName ? f.fileName : undefined)).join(\n                            ', '\n                        );\n                    }\n\n                    if (first && repoPath === undefined && type === GitCommitType.File && fileName !== undefined) {\n                        // Try to get the repoPath from the most recent commit\n                        repoPath = Strings.normalizePath(\n                            fileName.replace(fileName.startsWith('/') ? `/${entry.fileName}` : entry.fileName!, '')\n                        );\n                        relativeFileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n                    }\n                    else {\n                        relativeFileName = entry.fileName!;\n                    }\n                    first = false;\n\n                    const commit = commits.get(entry.ref!);\n                    if (commit === undefined) {\n                        i++;\n                    }\n                    else if (truncationCount) {\n                        // Since this matches an existing commit it will be skipped, so reduce our truncationCount to ensure accurate truncation detection\n                        truncationCount--;\n                    }\n\n                    recentCommit = GitLogParser.parseEntry(\n                        entry,\n                        commit,\n                        type,\n                        repoPath,\n                        relativeFileName,\n                        commits,\n                        authors,\n                        recentCommit,\n                        currentUser\n                    );\n\n                    break;\n            }\n        }\n\n        return {\n            repoPath: repoPath,\n            authors: authors,\n            commits: commits,\n            sha: sha,\n            count: i,\n            maxCount: maxCount,\n            range: range,\n            truncated: Boolean(truncationCount && i >= truncationCount && truncationCount !== 1)\n        } as GitLog;\n    }\n\n    private static parseEntry(\n        entry: LogEntry,\n        commit: GitLogCommit | undefined,\n        type: GitCommitType,\n        repoPath: string | undefined,\n        relativeFileName: string,\n        commits: Map<string, GitLogCommit>,\n        authors: Map<string, GitAuthor>,\n        recentCommit: GitLogCommit | undefined,\n        currentUser: { name?: string; email?: string } | undefined\n    ): GitLogCommit | undefined {\n        if (commit === undefined) {\n            if (entry.author !== undefined) {\n                if (\n                    currentUser !== undefined &&\n                    // Name or e-mail is configured\n                    (currentUser.name !== undefined || currentUser.email !== undefined) &&\n                    // Match on name if configured\n                    (currentUser.name === undefined || currentUser.name === entry.author) &&\n                    // Match on email if configured\n                    (currentUser.email === undefined || currentUser.email === entry.email)\n                ) {\n                    entry.author = 'You';\n                }\n\n                let author = authors.get(entry.author);\n                if (author === undefined) {\n                    author = {\n                        name: entry.author,\n                        lineCount: 0\n                    };\n                    authors.set(entry.author, author);\n                }\n            }\n\n            const originalFileName = relativeFileName !== entry.fileName ? entry.fileName : undefined;\n            if (type === GitCommitType.File) {\n                entry.files = [\n                    {\n                        status: entry.status!,\n                        fileName: relativeFileName,\n                        originalFileName: originalFileName\n                    }\n                ];\n            }\n\n            commit = new GitLogCommit(\n                type,\n                repoPath!,\n                entry.ref!,\n                entry.author!,\n                entry.email,\n                new Date((entry.date! as any) * 1000),\n                new Date((entry.committedDate! as any) * 1000),\n                entry.summary === undefined ? '' : entry.summary,\n                relativeFileName,\n                entry.files || [],\n                entry.status,\n                originalFileName,\n                `${entry.ref!}^`,\n                undefined,\n                entry.parentShas!\n            );\n\n            commits.set(entry.ref!, commit);\n        }\n        // else {\n        //     Logger.log(`merge commit? ${entry.sha}`);\n        // }\n\n        if (recentCommit !== undefined) {\n            // If the commit sha's match (merge commit), just forward it along\n            commit.nextSha = commit.sha !== recentCommit.sha ? recentCommit.sha : recentCommit.nextSha;\n\n            // Only add a filename if this is a file log\n            if (type === GitCommitType.File) {\n                recentCommit.previousFileName = commit.originalFileName || commit.fileName;\n                commit.nextFileName = recentCommit.originalFileName || recentCommit.fileName;\n            }\n        }\n        return commit;\n    }\n\n    static parseFileName(entry: { fileName?: string; originalFileName?: string }) {\n        if (entry.fileName === undefined) return;\n\n        const index = entry.fileName.indexOf('\\t') + 1;\n        if (index > 0) {\n            const next = entry.fileName.indexOf('\\t', index) + 1;\n            if (next > 0) {\n                entry.originalFileName = entry.fileName.substring(index, next - 1);\n                entry.fileName = entry.fileName.substring(next);\n            }\n            else {\n                entry.fileName = entry.fileName.substring(index);\n            }\n        }\n    }\n}\n","'use strict';\nimport { GitRemoteType } from '../models/remote';\nimport { RemoteProvider } from '../remotes/factory';\nimport { GitRemote } from './../git';\n\nconst remoteRegex = /^(.*)\\t(.*)\\s\\((.*)\\)$/gm;\nconst urlRegex = /^(?:(git:\\/\\/)(.*?)\\/|(https?:\\/\\/)(?:.*?@)?(.*?)\\/|git@(.*):|(ssh:\\/\\/)(?:.*@)?(.*?)(?::.*?)?(?:\\/|(?=~))|(?:.*?@)(.*?):)(.*)$/;\n\n// Test git urls\n/*\nhttp://host.xz/user/project.git\nhttp://host.xz/path/to/repo.git\nhttp://host.xz/path/to/repo.git/\nhttp://username@host.xz/user/project.git\nhttp://username:password@host.xz/user/project.git\nhttps://host.xz/user/project.git\nhttps://host.xz/path/to/repo.git\nhttps://host.xz/path/to/repo.git/\nhttps://username@host.xz/user/project.git\nhttps://username:password@host.xz/user/project.git\n\ngit@host.xz:user/project.git\ngit://host.xz/path/to/repo.git/\ngit://host.xz/~user/path/to/repo.git/\n\nssh://host.xz/project.git\nssh://host.xz/path/to/repo.git\nssh://host.xz/path/to/repo.git/\nssh://host.xz:~project.git\nssh://host.xz:port/path/to/repo.git/\nssh://user@host.xz/project.git\nssh://user@host.xz/path/to/repo.git\nssh://user@host.xz/path/to/repo.git/\nssh://user@host.xz:port/path/to/repo.git/\nssh://user:password@host.xz/project.git\nssh://user:password@host.xz/path/to/repo.git\nssh://user:password@host.xz/path/to/repo.git/\n\nuser@host.xz:project.git\nuser@host.xz:path/to/repo.git\nuser@host.xz:/path/to/repo.git/\nuser:password@host.xz:project.git\nuser:password@host.xz:/path/to/repo.git\nuser:password@host.xz:/path/to/repo.git/\n*/\n\nexport class GitRemoteParser {\n    static parse(\n        data: string,\n        repoPath: string,\n        providerFactory: (domain: string, path: string) => RemoteProvider | undefined\n    ): GitRemote[] {\n        if (!data) return [];\n\n        const remotes: GitRemote[] = [];\n        const groups = Object.create(null);\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = remoteRegex.exec(data);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            const url = (' ' + match[2]).substr(1);\n\n            const [scheme, domain, path] = this.parseGitUrl(url);\n\n            const uniqueness = `${domain}/${path}`;\n            let remote: GitRemote | undefined = groups[uniqueness];\n            if (remote === undefined) {\n                const provider = providerFactory(domain, path);\n\n                remote = new GitRemote(\n                    repoPath,\n                    uniqueness,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + match[1]).substr(1),\n                    scheme,\n                    provider !== undefined ? provider.domain : domain,\n                    provider !== undefined ? provider.path : path,\n                    provider,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    [{ url: url, type: (' ' + match[3]).substr(1) as GitRemoteType }]\n                );\n                remotes.push(remote);\n                groups[uniqueness] = remote;\n            }\n            else {\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                remote.types.push({ url: url, type: (' ' + match[3]).substr(1) as GitRemoteType });\n            }\n        } while (match != null);\n\n        if (!remotes.length) return [];\n\n        return remotes;\n    }\n\n    static parseGitUrl(url: string): [string, string, string] {\n        const match = urlRegex.exec(url);\n        if (match == null) return ['', '', ''];\n\n        return [\n            match[1] || match[3] || match[6],\n            match[2] || match[4] || match[5] || match[7] || match[8],\n            match[9].replace(/\\.git\\/?$/, '')\n        ];\n    }\n}\n","'use strict';\nimport { Arrays, Strings } from '../../system';\nimport { GitCommitType, GitFile, GitFileStatus, GitLogParser, GitStash, GitStashCommit } from './../git';\n// import { Logger } from './logger';\n\ninterface StashEntry {\n    ref?: string;\n    date?: string;\n    committedDate?: string;\n    fileNames?: string;\n    files?: GitFile[];\n    summary?: string;\n    stashName?: string;\n}\n\nconst emptyEntry: StashEntry = {};\n\nexport class GitStashParser {\n    static parse(data: string, repoPath: string): GitStash | undefined {\n        if (!data) return undefined;\n\n        const lines = Strings.lines(data + '</f>');\n        // Skip the first line since it will always be </f>\n        let next = lines.next();\n        if (next.done) return undefined;\n\n        if (repoPath !== undefined) {\n            repoPath = Strings.normalizePath(repoPath);\n        }\n\n        const commits: Map<string, GitStashCommit> = new Map();\n\n        let entry: StashEntry = emptyEntry;\n        let line: string | undefined = undefined;\n        let token: number;\n\n        while (true) {\n            next = lines.next();\n            if (next.done) break;\n\n            line = next.value;\n\n            // <<1-char token>> <data>\n            // e.g. <r> bd1452a2dc\n            token = line.charCodeAt(1);\n\n            switch (token) {\n                case 114: // 'r': // ref\n                    entry = {\n                        ref: line.substring(4)\n                    };\n                    break;\n\n                case 100: // 'd': // author-date\n                    entry.date = line.substring(4);\n                    break;\n\n                case 99: // 'c': // committer-date\n                    entry.committedDate = line.substring(4);\n                    break;\n\n                case 108: // 'l': // reflog-selector\n                    entry.stashName = line.substring(4);\n                    break;\n\n                case 115: // 's': // summary\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</s>') break;\n\n                        if (entry.summary === undefined) {\n                            entry.summary = line;\n                        }\n                        else {\n                            entry.summary += `\\n${line}`;\n                        }\n                    }\n\n                    // Remove the trailing newline\n                    if (entry.summary != null && entry.summary.charCodeAt(entry.summary.length - 1) === 10) {\n                        entry.summary = entry.summary.slice(0, -1);\n                    }\n                    break;\n\n                case 102: // 'f': // files\n                    // Skip the blank line git adds before the files\n                    next = lines.next();\n                    if (!next.done && next.value !== '</f>') {\n                        while (true) {\n                            next = lines.next();\n                            if (next.done) break;\n\n                            line = next.value;\n                            if (line === '</f>') break;\n\n                            if (line.startsWith('warning:')) continue;\n\n                            const status = {\n                                status: line[0] as GitFileStatus,\n                                fileName: line.substring(1),\n                                originalFileName: undefined\n                            };\n                            GitLogParser.parseFileName(status);\n\n                            if (status.fileName) {\n                                if (entry.files === undefined) {\n                                    entry.files = [];\n                                }\n                                entry.files.push(status);\n                            }\n                        }\n\n                        if (entry.files !== undefined) {\n                            entry.fileNames = Arrays.filterMap(entry.files, f =>\n                                f.fileName ? f.fileName : undefined\n                            ).join(', ');\n                        }\n                    }\n\n                    GitStashParser.parseEntry(entry, repoPath, commits);\n            }\n        }\n\n        return {\n            repoPath: repoPath,\n            commits: commits\n        } as GitStash;\n    }\n\n    private static parseEntry(entry: StashEntry, repoPath: string, commits: Map<string, GitStashCommit>) {\n        let commit = commits.get(entry.ref!);\n        if (commit === undefined) {\n            commit = new GitStashCommit(\n                GitCommitType.Stash,\n                entry.stashName!,\n                repoPath,\n                entry.ref!,\n                new Date((entry.date! as any) * 1000),\n                new Date((entry.committedDate! as any) * 1000),\n                entry.summary === undefined ? '' : entry.summary,\n                entry.fileNames!,\n                entry.files || []\n            );\n        }\n\n        commits.set(entry.ref!, commit);\n    }\n}\n","'use strict';\nimport { Strings } from '../../system';\nimport { GitFileStatus, GitStatus, GitStatusFile } from './../git';\n\nconst aheadStatusV1Regex = /(?:ahead ([0-9]+))/;\nconst behindStatusV1Regex = /(?:behind ([0-9]+))/;\n\nexport class GitStatusParser {\n    static parse(data: string, repoPath: string, porcelainVersion: number): GitStatus | undefined {\n        if (!data) return undefined;\n\n        const lines = data.split('\\n').filter(Boolean);\n        if (lines.length === 0) return undefined;\n\n        if (porcelainVersion < 2) return this.parseV1(lines, repoPath);\n\n        return this.parseV2(lines, repoPath);\n    }\n\n    private static parseV1(lines: string[], repoPath: string): GitStatus {\n        let branch: string | undefined;\n        const files = [];\n        const state = {\n            ahead: 0,\n            behind: 0\n        };\n        let upstream;\n\n        let position = -1;\n        while (++position < lines.length) {\n            const line = lines[position];\n            // Header\n            if (line.startsWith('##')) {\n                const lineParts = line.split(' ');\n                [branch, upstream] = lineParts[1].split('...');\n                if (lineParts.length > 2) {\n                    const upstreamStatus = lineParts.slice(2).join(' ');\n\n                    const aheadStatus = aheadStatusV1Regex.exec(upstreamStatus);\n                    state.ahead = aheadStatus == null ? 0 : +aheadStatus[1] || 0;\n\n                    const behindStatus = behindStatusV1Regex.exec(upstreamStatus);\n                    state.behind = behindStatus == null ? 0 : +behindStatus[1] || 0;\n                }\n            }\n            else {\n                const rawStatus = line.substring(0, 2);\n                const fileName = line.substring(3);\n                if (rawStatus[0] === 'R') {\n                    const [file1, file2] = fileName.replace(/\\\"/g, '').split('->');\n                    files.push(this.parseStatusFile(repoPath, rawStatus, file2.trim(), file1.trim()));\n                }\n                else {\n                    files.push(this.parseStatusFile(repoPath, rawStatus, fileName));\n                }\n            }\n        }\n\n        return new GitStatus(Strings.normalizePath(repoPath), branch || '', '', files, state, upstream);\n    }\n\n    private static parseV2(lines: string[], repoPath: string): GitStatus {\n        let branch: string | undefined;\n        const files = [];\n        let sha: string | undefined;\n        const state = {\n            ahead: 0,\n            behind: 0\n        };\n        let upstream;\n\n        let position = -1;\n        while (++position < lines.length) {\n            const line = lines[position];\n            // Headers\n            if (line.startsWith('#')) {\n                const lineParts = line.split(' ');\n                switch (lineParts[1]) {\n                    case 'branch.oid':\n                        sha = lineParts[2];\n                        break;\n                    case 'branch.head':\n                        branch = lineParts[2];\n                        break;\n                    case 'branch.upstream':\n                        upstream = lineParts[2];\n                        break;\n                    case 'branch.ab':\n                        state.ahead = +lineParts[2].substring(1);\n                        state.behind = +lineParts[3].substring(1);\n                        break;\n                }\n            }\n            else {\n                const lineParts = line.split(' ');\n                switch (lineParts[0][0]) {\n                    case '1': // normal\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], lineParts.slice(8).join(' ')));\n                        break;\n                    case '2': // rename\n                        const file = lineParts\n                            .slice(9)\n                            .join(' ')\n                            .split('\\t');\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], file[0], file[1]));\n                        break;\n                    case 'u': // unmerged\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], lineParts.slice(10).join(' ')));\n                        break;\n                    case '?': // untracked\n                        files.push(this.parseStatusFile(repoPath, ' ?', lineParts.slice(1).join(' ')));\n                        break;\n                }\n            }\n        }\n\n        return new GitStatus(Strings.normalizePath(repoPath), branch || '', sha || '', files, state, upstream);\n    }\n\n    static parseStatusFile(\n        repoPath: string,\n        rawStatus: string,\n        fileName: string,\n        originalFileName?: string\n    ): GitStatusFile {\n        let indexStatus = rawStatus[0] !== '.' ? rawStatus[0].trim() : undefined;\n        if (indexStatus == null || indexStatus.length === 0) {\n            indexStatus = undefined;\n        }\n\n        let workTreeStatus = undefined;\n        if (rawStatus.length > 1) {\n            workTreeStatus = rawStatus[1] !== '.' ? rawStatus[1].trim() : undefined;\n            if (workTreeStatus == null || workTreeStatus.length === 0) {\n                workTreeStatus = undefined;\n            }\n        }\n\n        return new GitStatusFile(\n            repoPath,\n            indexStatus as GitFileStatus | undefined,\n            workTreeStatus as GitFileStatus | undefined,\n            fileName,\n            originalFileName\n        );\n    }\n}\n","'use strict';\nimport { GitTag } from './../git';\n\nconst tagWithRefRegex = /([0-9,a-f]+)\\srefs\\/tags\\/(.*)/gm;\nconst tagWithAnnotationRegex = /^(.+?)(?:$|(?:\\s+)(.*)$)/gm;\n\nexport class GitTagParser {\n    static parse(data: string, repoPath: string): GitTag[] | undefined {\n        if (!data) return undefined;\n\n        const tags: GitTag[] = [];\n\n        let annotation;\n        let name;\n        let match: RegExpExecArray | null = null;\n        do {\n            match = tagWithAnnotationRegex.exec(data);\n            if (match == null) break;\n\n            [, name, annotation] = match;\n            tags.push(\n                new GitTag(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + name).substr(1),\n                    undefined,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    annotation === undefined ? undefined : (' ' + annotation).substr(1)\n                )\n            );\n        } while (match != null);\n\n        if (!tags.length) return undefined;\n\n        return tags;\n    }\n\n    static parseWithRef(data: string, repoPath: string): GitTag[] | undefined {\n        if (!data) return undefined;\n\n        const tags: GitTag[] = [];\n\n        let name;\n        let sha;\n        let match: RegExpExecArray | null = null;\n        do {\n            match = tagWithRefRegex.exec(data);\n            if (match == null) break;\n\n            [, sha, name] = match;\n            tags.push(\n                new GitTag(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + name).substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + sha).substr(1)\n                )\n            );\n        } while (match != null);\n\n        if (!tags.length) return undefined;\n\n        return tags;\n    }\n}\n","'use strict';\nimport { GitTree } from './../git';\n\nconst treeRegex = /(?:.+?)\\s+(.+?)\\s+(.+?)\\s+(.+?)\\s+(.+)/gm;\n\nexport class GitTreeParser {\n    static parse(data: string | undefined): GitTree[] | undefined {\n        if (!data) return undefined;\n\n        const trees: GitTree[] = [];\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = treeRegex.exec(data);\n            if (match == null) break;\n\n            const [, type, commitSha, size, filePath] = match;\n            trees.push({\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                commitSha: commitSha === undefined ? '' : (' ' + commitSha).substr(1),\n                path: filePath === undefined ? '' : filePath,\n                size: size === '-' ? 0 : Number(size || 0),\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                type: (type === undefined ? '' : (' ' + type).substr(1)) as 'blob' | 'tree'\n            });\n        } while (match != null);\n\n        if (!trees.length) return undefined;\n\n        return trees;\n    }\n}\n","'use strict';\nimport * as iconv from 'iconv-lite';\nimport * as paths from 'path';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Objects, Strings } from '../system';\nimport { findGitPath, GitLocation } from './locator';\nimport { run, RunOptions } from './shell';\n\nexport { GitLocation } from './locator';\nexport * from './models/models';\nexport * from './parsers/parsers';\nexport * from './remotes/provider';\n\n// This is a root sha of all git repo's if using sha1\nconst rootSha = '4b825dc642cb6eb9a060e54bf8d69288fbee4904';\n\nconst defaultBlameParams = ['blame', '--root', '--incremental'];\n\n// Using %x00 codes because some shells seem to try to expand things if not\nconst lb = '%x3c'; // `%x${'<'.charCodeAt(0).toString(16)}`;\nconst rb = '%x3e'; // `%x${'>'.charCodeAt(0).toString(16)}`;\nconst sl = '%x2f'; // `%x${'/'.charCodeAt(0).toString(16)}`;\nconst sp = '%x20'; // `%x${' '.charCodeAt(0).toString(16)}`;\n\nconst logFormat = [\n    `${lb}${sl}f${rb}`,\n    `${lb}r${rb}${sp}%H`, // ref\n    `${lb}a${rb}${sp}%aN`, // author\n    `${lb}e${rb}${sp}%aE`, // email\n    `${lb}d${rb}${sp}%at`, // date\n    `${lb}c${rb}${sp}%ct`, // committed date\n    `${lb}p${rb}${sp}%P`, // parents\n    `${lb}s${rb}`,\n    `%B`, // summary\n    `${lb}${sl}s${rb}`,\n    `${lb}f${rb}`\n].join('%n');\n\nconst defaultLogParams = ['log', '--name-status', `--format=${logFormat}`];\n\nconst stashFormat = [\n    `${lb}${sl}f${rb}`,\n    `${lb}r${rb}${sp}%H`, // ref\n    `${lb}d${rb}${sp}%at`, // date\n    `${lb}c${rb}${sp}%ct`, // committed date\n    `${lb}l${rb}${sp}%gd`, // reflog-selector\n    `${lb}s${rb}`,\n    `%B`, // summary\n    `${lb}${sl}s${rb}`,\n    `${lb}f${rb}`\n].join('%n');\n\nconst defaultStashParams = ['stash', 'list', '--name-status', '-M', `--format=${stashFormat}`];\n\nconst GitErrors = {\n    badRevision: /bad revision \\'(.*?)\\'/i,\n    notAValidObjectName: /Not a valid object name/i\n};\n\nconst GitWarnings = {\n    notARepository: /Not a git repository/i,\n    outsideRepository: /is outside repository/i,\n    noPath: /no such path/i,\n    noCommits: /does not have any commits/i,\n    notFound: /Path \\'.*?\\' does not exist in/i,\n    foundButNotInRevision: /Path \\'.*?\\' exists on disk, but not in/i,\n    headNotABranch: /HEAD does not point to a branch/i,\n    noUpstream: /no upstream configured for branch \\'(.*?)\\'/i,\n    unknownRevision: /ambiguous argument \\'.*?\\': unknown revision or path not in the working tree|not stored as a remote-tracking branch/i,\n    mustRunInWorkTree: /this operation must be run in a work tree/i,\n    patchWithConflicts: /Applied patch to \\'.*?\\' with conflicts/i,\n    noRemoteRepositorySpecified: /No remote repository specified\\./i,\n    remoteConnectionError: /Could not read from remote repository/i,\n    notAGitCommand: /\\'.+\\' is not a git command/i\n};\n\nexport enum GitErrorHandling {\n    Ignore = 'ignore',\n    Throw = 'throw'\n}\n\nexport interface GitCommandOptions extends RunOptions {\n    configs?: string[];\n    readonly correlationKey?: string;\n    errors?: GitErrorHandling;\n    // Specifies that this command should always be executed locally if possible\n    local?: boolean;\n}\n\n// A map of running git commands -- avoids running duplicate overlaping commands\nconst pendingCommands: Map<string, Promise<string | Buffer>> = new Map();\n\nconst emptyArray: any = [];\nconst emptyObj = {};\n\nexport async function git<TOut extends string | Buffer>(options: GitCommandOptions, ...args: any[]): Promise<TOut> {\n    if (Container.vsls.isMaybeGuest) {\n        if (options.local !== true) {\n            const guest = await Container.vsls.guest();\n            if (guest !== undefined) {\n                return guest.git<TOut>(options, ...args);\n            }\n        }\n        else {\n            // Since we will have a live share path here, just blank it out\n            options.cwd = '';\n        }\n    }\n\n    const start = process.hrtime();\n\n    const { configs, correlationKey, errors: errorHandling, ...opts } = options;\n\n    const encoding = options.encoding || 'utf8';\n    const runOpts = {\n        ...opts,\n        encoding: encoding === 'utf8' ? 'utf8' : encoding === 'buffer' ? 'buffer' : 'binary',\n        // Adds GCM environment variables to avoid any possible credential issues -- from https://github.com/Microsoft/vscode/issues/26573#issuecomment-338686581\n        // Shouldn't *really* be needed but better safe than sorry\n        env: {\n            ...process.env,\n            ...(options.env || emptyObj),\n            GCM_INTERACTIVE: 'NEVER',\n            GCM_PRESERVE_CREDS: 'TRUE',\n            LC_ALL: 'C'\n        }\n    } as RunOptions;\n\n    const gitCommand = `[${runOpts.cwd}] git ${args.join(' ')}`;\n\n    const command = `${correlationKey !== undefined ? `${correlationKey}:` : ''}${gitCommand}`;\n\n    let waiting;\n    let promise = pendingCommands.get(command);\n    if (promise === undefined) {\n        waiting = false;\n\n        // Fixes https://github.com/eamodio/vscode-gitlens/issues/73 & https://github.com/eamodio/vscode-gitlens/issues/161\n        // See https://stackoverflow.com/questions/4144417/how-to-handle-asian-characters-in-file-names-in-git-on-os-x\n        args.splice(\n            0,\n            0,\n            '-c',\n            'core.quotepath=false',\n            '-c',\n            'color.ui=false',\n            ...(configs !== undefined ? configs : emptyArray)\n        );\n\n        promise = run<TOut>(gitInfo.path, args, encoding, runOpts);\n\n        pendingCommands.set(command, promise);\n    }\n    else {\n        waiting = true;\n    }\n\n    let exception: Error | undefined;\n    try {\n        return (await promise) as TOut;\n    }\n    catch (ex) {\n        exception = ex;\n\n        switch (errorHandling) {\n            case GitErrorHandling.Ignore:\n                exception = undefined;\n                return '' as TOut;\n\n            case GitErrorHandling.Throw:\n                throw ex;\n\n            default:\n                const result = defaultExceptionHandler(ex, options, ...args);\n                exception = undefined;\n                return result as TOut;\n        }\n    }\n    finally {\n        pendingCommands.delete(command);\n\n        const duration = `${Strings.getDurationMilliseconds(start)} ms ${waiting ? '(await) ' : ''}`;\n        Logger.log(\n            `${gitCommand} ${GlyphChars.Dot} ${\n                exception !== undefined ? `FAILED(${(exception.message || '').trim().split('\\n', 1)[0]}) ` : ''\n            }${duration}`\n        );\n        Logger.logGitCommand(\n            `${gitCommand} ${GlyphChars.Dot} ${exception !== undefined ? 'FAILED ' : ''}${duration}`,\n            exception\n        );\n    }\n}\n\nfunction defaultExceptionHandler(ex: Error, options: GitCommandOptions, ...args: any[]): string {\n    const msg = ex && ex.toString();\n    if (msg) {\n        for (const warning of Objects.values(GitWarnings)) {\n            if (warning.test(msg)) {\n                Logger.warn('git', ...args, `  cwd='${options.cwd}'\\n\\n  `, msg.replace(/\\r?\\n|\\r/g, ' '));\n                return '';\n            }\n        }\n    }\n\n    const match = GitErrors.badRevision.exec(msg);\n    if (match != null && match) {\n        const [, ref] = match;\n\n        // Since looking up a ref with ^3 (e.g. looking for untracked files in a stash) can error on some versions of git just ignore it\n        if (ref != null && ref.endsWith('^3')) return '';\n    }\n\n    Logger.error(ex, 'git', ...args, `  cwd='${options.cwd}'\\n\\n  `);\n    throw ex;\n}\n\nlet gitInfo: GitLocation;\n\nexport class Git {\n    static deletedOrMissingSha = '0000000000000000000000000000000000000000-';\n    static shaLikeRegex = /(^[0-9a-f]{40}([\\^@~:]\\S*)?$)|(^[0]{40}(:|-)$)/;\n    static shaRegex = /(^[0-9a-f]{40}$)|(^[0]{40}(:|-)$)/;\n    static shaShortenRegex = /^(.*?)([\\^@~:].*)?$/;\n    static stagedUncommittedRegex = /^[0]{40}([\\^@~]\\S*)?:$/;\n    static stagedUncommittedSha = '0000000000000000000000000000000000000000:';\n    static uncommittedRegex = /^[0]{40}(?:[\\^@~:]\\S*)?:?$/;\n    static uncommittedSha = '0000000000000000000000000000000000000000';\n\n    static getEncoding(encoding: string | undefined) {\n        return encoding !== undefined && iconv.encodingExists(encoding) ? encoding : 'utf8';\n    }\n\n    static getGitPath(): string {\n        return gitInfo.path;\n    }\n\n    static getGitVersion(): string {\n        return gitInfo.version;\n    }\n\n    static async setOrFindGitPath(gitPath?: string): Promise<void> {\n        const start = process.hrtime();\n\n        gitInfo = await findGitPath(gitPath);\n\n        Logger.log(\n            `Git found: ${gitInfo.version} @ ${gitInfo.path === 'git' ? 'PATH' : gitInfo.path} ${\n                GlyphChars.Dot\n            } ${Strings.getDurationMilliseconds(start)} ms`\n        );\n    }\n\n    static isSha(ref: string) {\n        return Git.shaRegex.test(ref);\n    }\n\n    static isShaLike(ref: string) {\n        return Git.shaLikeRegex.test(ref);\n    }\n\n    static isStagedUncommitted(ref: string | undefined): boolean {\n        return ref ? Git.stagedUncommittedRegex.test(ref) : false;\n    }\n\n    static isUncommitted(ref: string | undefined) {\n        return ref ? Git.uncommittedRegex.test(ref) : false;\n    }\n\n    static shortenSha(\n        ref: string,\n        strings: { stagedUncommitted?: string; uncommitted?: string; working?: string } = {}\n    ) {\n        strings = { stagedUncommitted: 'Index', uncommitted: 'Working Tree', working: '', ...strings };\n\n        if (ref == null || ref.length === 0) return strings.working;\n        if (Git.isUncommitted(ref)) {\n            if (Git.isStagedUncommitted(ref)) return strings.stagedUncommitted;\n\n            return strings.uncommitted;\n        }\n\n        // Don't allow shas to be shortened to less than 5 characters\n        const len = Math.max(5, Container.config.advanced.abbreviatedShaLength);\n\n        // If we have a suffix, append it\n        const match = Git.shaShortenRegex.exec(ref);\n        if (match != null) {\n            const [, rev, suffix] = match;\n\n            if (suffix != null) {\n                return `${rev.substr(0, len)}${suffix}`;\n            }\n        }\n\n        return ref.substr(0, len);\n    }\n\n    static splitPath(fileName: string, repoPath: string | undefined, extract: boolean = true): [string, string] {\n        if (repoPath) {\n            fileName = Strings.normalizePath(fileName);\n            repoPath = Strings.normalizePath(repoPath);\n\n            const normalizedRepoPath = (repoPath.endsWith('/') ? repoPath : `${repoPath}/`).toLowerCase();\n            if (fileName.toLowerCase().startsWith(normalizedRepoPath)) {\n                fileName = fileName.substring(normalizedRepoPath.length);\n            }\n        }\n        else {\n            repoPath = Strings.normalizePath(extract ? paths.dirname(fileName) : repoPath!);\n            fileName = Strings.normalizePath(extract ? paths.basename(fileName) : fileName);\n        }\n\n        return [fileName, repoPath];\n    }\n\n    static validateVersion(major: number, minor: number): boolean {\n        const [gitMajor, gitMinor] = gitInfo.version.split('.');\n        return parseInt(gitMajor, 10) >= major && parseInt(gitMinor, 10) >= minor;\n    }\n\n    // Git commands\n\n    static add(repoPath: string | undefined, pathspec: string) {\n        return git<string>({ cwd: repoPath }, 'add', '-A', '--', pathspec);\n    }\n\n    static apply(repoPath: string | undefined, patch: string, options: { allowConflicts?: boolean } = {}) {\n        const params = ['apply', '--whitespace=warn'];\n        if (options.allowConflicts) {\n            params.push(`-3`);\n        }\n        return git<string>({ cwd: repoPath, stdin: patch }, ...params);\n    }\n\n    static async blame(\n        repoPath: string | undefined,\n        fileName: string,\n        ref?: string,\n        options: { args?: string[] | null; ignoreWhitespace?: boolean; startLine?: number; endLine?: number } = {}\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = [...defaultBlameParams];\n\n        if (options.ignoreWhitespace) {\n            params.push('-w');\n        }\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}`);\n        }\n        if (options.args != null) {\n            params.push(...options.args);\n        }\n\n        let stdin;\n        if (ref) {\n            if (Git.isStagedUncommitted(ref)) {\n                // Pipe the blame contents to stdin\n                params.push('--contents', '-');\n\n                // Get the file contents for the staged version using `:`\n                stdin = await Git.show<string>(repoPath, fileName, ':');\n            }\n            else {\n                params.push(ref);\n            }\n        }\n\n        return git<string>({ cwd: root, stdin: stdin }, ...params, '--', file);\n    }\n\n    static async blame_contents(\n        repoPath: string | undefined,\n        fileName: string,\n        contents: string,\n        options: {\n            args?: string[] | null;\n            correlationKey?: string;\n            ignoreWhitespace?: boolean;\n            startLine?: number;\n            endLine?: number;\n        } = {}\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = [...defaultBlameParams];\n\n        if (options.ignoreWhitespace) {\n            params.push('-w');\n        }\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}`);\n        }\n        if (options.args != null) {\n            params.push(...options.args);\n        }\n\n        // Pipe the blame contents to stdin\n        params.push('--contents', '-');\n\n        return git<string>(\n            { cwd: root, stdin: contents, correlationKey: options.correlationKey },\n            ...params,\n            '--',\n            file\n        );\n    }\n\n    static branch(repoPath: string, options: { all: boolean } = { all: false }) {\n        const params = ['branch', '-vv', '--abbrev=40'];\n        if (options.all) {\n            params.push('-a');\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.branch=false'] }, ...params);\n    }\n\n    static branch_contains(repoPath: string, ref: string, options: { remote: boolean } = { remote: false }) {\n        const params = ['branch', '--contains'];\n        if (options.remote) {\n            params.push('-r');\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.branch=false'] }, ...params, ref);\n    }\n\n    static async cat_validate(repoPath: string, ref: string) {\n        if (Git.isUncommitted(ref)) return true;\n\n        try {\n            await git<string>({ cwd: repoPath, errors: GitErrorHandling.Throw }, 'cat-file', '-t', ref);\n            return true;\n        }\n        catch (ex) {\n            return false;\n        }\n    }\n\n    static async cat_file_validate(repoPath: string, fileName: string, ref: string) {\n        if (Git.isUncommitted(ref)) return ref;\n\n        try {\n            await git<string>(\n                { cwd: repoPath, errors: GitErrorHandling.Throw },\n                'cat-file',\n                '-e',\n                `${ref}:./${fileName}`\n            );\n            return ref;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (GitErrors.notAValidObjectName.test(msg)) {\n                return Git.deletedOrMissingSha;\n            }\n\n            return undefined;\n        }\n    }\n\n    static check_mailmap(repoPath: string, author: string) {\n        return git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore, local: true }, 'check-mailmap', author);\n    }\n\n    static checkout(repoPath: string, ref: string, fileName?: string) {\n        const params = ['checkout', ref, '--'];\n        if (fileName) {\n            [fileName, repoPath] = Git.splitPath(fileName, repoPath);\n\n            params.push(fileName);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static async config_get(key: string, repoPath?: string, options: { local?: boolean } = {}) {\n        const data = await git<string>(\n            { cwd: repoPath || '', errors: GitErrorHandling.Ignore, local: options.local },\n            'config',\n            '--get',\n            key\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async config_getRegex(pattern: string, repoPath?: string, options: { local?: boolean } = {}) {\n        const data = await git<string>(\n            { cwd: repoPath || '', errors: GitErrorHandling.Ignore, local: options.local },\n            'config',\n            '--get-regex',\n            pattern\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async diff(\n        repoPath: string,\n        fileName: string,\n        ref1?: string,\n        ref2?: string,\n        options: { encoding?: string; filter?: string } = {}\n    ): Promise<string> {\n        const params = ['diff', '-M', '--no-ext-diff', '--minimal'];\n        if (options.filter) {\n            params.push(`--diff-filter=${options.filter}`);\n        }\n\n        if (ref1) {\n            // <sha>^3 signals an untracked file in a stash and if we are trying to find its parent, use the root sha\n            if (ref1.endsWith('^3^')) {\n                ref1 = rootSha;\n            }\n            params.push(Git.isStagedUncommitted(ref1) ? '--staged' : ref1);\n        }\n        if (ref2) {\n            params.push(Git.isStagedUncommitted(ref2) ? '--staged' : ref2);\n        }\n\n        const encoding: BufferEncoding = options.encoding === 'utf8' ? 'utf8' : 'binary';\n\n        try {\n            return await git<string>(\n                { cwd: repoPath, configs: ['-c', 'color.diff=false'], encoding: encoding },\n                ...params,\n                '--',\n                fileName\n            );\n        }\n        catch (ex) {\n            const match = GitErrors.badRevision.exec(ex.message);\n            if (match !== null) {\n                const [, ref] = match;\n\n                // If the bad ref is trying to find a parent ref, assume we hit to the last commit, so try again using the root sha\n                if (ref === ref1 && ref != null && ref.endsWith('^')) {\n                    return Git.diff(repoPath, fileName, rootSha, ref2, options);\n                }\n            }\n\n            throw ex;\n        }\n    }\n\n    static diff_nameStatus(repoPath: string, ref1?: string, ref2?: string, options: { filter?: string } = {}) {\n        const params = ['diff', '--name-status', '-M', '--no-ext-diff'];\n        if (options && options.filter) {\n            params.push(`--diff-filter=${options.filter}`);\n        }\n        if (ref1) {\n            params.push(ref1);\n        }\n        if (ref2) {\n            params.push(ref2);\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.diff=false'] }, ...params);\n    }\n\n    static diff_shortstat(repoPath: string, ref?: string) {\n        const params = ['diff', '--shortstat', '--no-ext-diff'];\n        if (ref) {\n            params.push(ref);\n        }\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.diff=false'] }, ...params);\n    }\n\n    static difftool_dirDiff(repoPath: string, tool: string, ref1: string, ref2?: string) {\n        const params = ['difftool', '--dir-diff', `--tool=${tool}`, ref1];\n        if (ref2) {\n            params.push(ref2);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static difftool_fileDiff(\n        repoPath: string,\n        fileName: string,\n        tool: string,\n        options: { ref1?: string; ref2?: string; staged?: boolean } = {}\n    ) {\n        const params = ['difftool', '--no-prompt', `--tool=${tool}`];\n        if (options.staged) {\n            params.push('--staged');\n        }\n        if (options.ref1) {\n            params.push(options.ref1);\n        }\n        if (options.ref2) {\n            params.push(options.ref2);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, '--', fileName);\n    }\n\n    static fetch(repoPath: string, options: { all?: boolean; remote?: string } = {}) {\n        const params = ['fetch'];\n        if (options.remote) {\n            params.push(options.remote);\n        }\n        else if (options.all) {\n            params.push('--all');\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static log(repoPath: string, options: { authors?: string[]; maxCount?: number; ref?: string; reverse?: boolean }) {\n        const params = [...defaultLogParams, '--full-history', '-M', '-m'];\n        if (options.authors) {\n            params.push(...options.authors.map(a => `--author=${a}`));\n        }\n        if (options.maxCount && !options.reverse) {\n            params.push(`-n${options.maxCount}`);\n        }\n        if (options.ref && !Git.isStagedUncommitted(options.ref)) {\n            if (options.reverse) {\n                params.push('--reverse', '--ancestry-path', `${options.ref}..HEAD`);\n            }\n            else {\n                params.push(options.ref);\n            }\n        }\n        return git<string>({ cwd: repoPath, configs: ['-c', 'diff.renameLimit=0'] }, ...params, '--');\n    }\n\n    static log_file(\n        repoPath: string,\n        fileName: string,\n        options: {\n            maxCount?: number;\n            ref?: string;\n            renames?: boolean;\n            reverse?: boolean;\n            startLine?: number;\n            endLine?: number;\n        } = { renames: true, reverse: false }\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = [...defaultLogParams, '-m'];\n        if (options.maxCount && !options.reverse) {\n            params.push(`-n${options.maxCount}`);\n        }\n\n        if (options.renames) {\n            params.push('--follow');\n        }\n\n        if (options.ref && !Git.isStagedUncommitted(options.ref)) {\n            if (options.reverse) {\n                params.push('--reverse', '--ancestry-path', `${options.ref}..HEAD`);\n            }\n            else {\n                params.push(options.ref);\n            }\n        }\n\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}:${file}`);\n        }\n\n        return git<string>({ cwd: root }, ...params, '--', file);\n    }\n\n    static async log_recent(repoPath: string, fileName: string) {\n        const data = await git<string>(\n            { cwd: repoPath, errors: GitErrorHandling.Ignore },\n            'log',\n            '-M',\n            '-n1',\n            '--format=%H',\n            '--',\n            fileName\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static log_search(repoPath: string, search: string[] = emptyArray, options: { maxCount?: number } = {}) {\n        const params = [...defaultLogParams];\n        if (options.maxCount) {\n            params.push(`-n${options.maxCount}`);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, ...search);\n    }\n\n    static log_shortstat(repoPath: string, options: { ref?: string }) {\n        const params = ['log', '--shortstat', '--oneline'];\n        if (options.ref && !Git.isStagedUncommitted(options.ref)) {\n            params.push(options.ref);\n        }\n        return git<string>({ cwd: repoPath }, ...params, '--');\n    }\n\n    static async ls_files(\n        repoPath: string,\n        fileName: string,\n        options: { ref?: string } = {}\n    ): Promise<string | undefined> {\n        const params = ['ls-files'];\n        if (options.ref && !Git.isUncommitted(options.ref)) {\n            params.push(`--with-tree=${options.ref}`);\n        }\n\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, ...params, '--', fileName);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async ls_tree(repoPath: string, ref: string, options: { fileName?: string } = {}) {\n        const params = ['ls-tree'];\n        if (options.fileName) {\n            params.push('-l', ref, '--', options.fileName);\n        }\n        else {\n            params.push('-lrt', ref, '--');\n        }\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, ...params);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static merge_base(repoPath: string, ref1: string, ref2: string, options: { forkPoint?: boolean } = {}) {\n        const params = ['merge-base'];\n        if (options.forkPoint) {\n            params.push('--fork-point');\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, ref1, ref2);\n    }\n\n    static remote(repoPath: string): Promise<string> {\n        return git<string>({ cwd: repoPath }, 'remote', '-v');\n    }\n\n    static remote_url(repoPath: string, remote: string): Promise<string> {\n        return git<string>({ cwd: repoPath }, 'remote', 'get-url', remote);\n    }\n\n    static reset(repoPath: string | undefined, fileName: string) {\n        return git<string>({ cwd: repoPath }, 'reset', '-q', '--', fileName);\n    }\n\n    static async revparse(repoPath: string, ref: string): Promise<string | undefined> {\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, 'rev-parse', ref);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async revparse_currentBranch(repoPath: string): Promise<[string, string | undefined] | undefined> {\n        const params = ['rev-parse', '--abbrev-ref', '--symbolic-full-name', '@', '@{u}'];\n\n        const opts: GitCommandOptions = {\n            cwd: repoPath,\n            errors: GitErrorHandling.Throw\n        };\n\n        try {\n            const data = await git<string>(opts, ...params);\n            return [data, undefined];\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (GitWarnings.headNotABranch.test(msg)) {\n                const data = await git<string>(\n                    { ...opts, errors: GitErrorHandling.Ignore },\n                    'log',\n                    '-n1',\n                    '--format=%H',\n                    '--'\n                );\n                if (data.length === 0) return undefined;\n\n                // Matches output of `git branch -vv`\n                const sha = data.trim();\n                return [`(HEAD detached at ${this.shortenSha(sha)})`, sha];\n            }\n\n            const result = GitWarnings.noUpstream.exec(msg);\n            if (result !== null) return [result[1], undefined];\n\n            if (GitWarnings.unknownRevision.test(msg)) {\n                const data = await git<string>(\n                    { ...opts, errors: GitErrorHandling.Ignore },\n                    'symbolic-ref',\n                    '-q',\n                    '--short',\n                    'HEAD'\n                );\n                return data.length === 0 ? undefined : [data.trim(), undefined];\n            }\n\n            defaultExceptionHandler(ex, opts, ...params);\n            return undefined;\n        }\n    }\n\n    static async revparse_toplevel(cwd: string): Promise<string | undefined> {\n        const data = await git<string>({ cwd: cwd, errors: GitErrorHandling.Ignore }, 'rev-parse', '--show-toplevel');\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async show<TOut extends string | Buffer>(\n        repoPath: string | undefined,\n        fileName: string,\n        ref: string,\n        options: {\n            encoding?: 'binary' | 'ascii' | 'utf8' | 'utf16le' | 'ucs2' | 'base64' | 'latin1' | 'hex' | 'buffer';\n        } = {}\n    ): Promise<TOut | undefined> {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        if (Git.isStagedUncommitted(ref)) {\n            ref = ':';\n        }\n        if (Git.isUncommitted(ref)) throw new Error(`ref=${ref} is uncommitted`);\n\n        const opts: GitCommandOptions = {\n            cwd: root,\n            encoding: options.encoding || 'utf8',\n            errors: GitErrorHandling.Throw\n        };\n        const args = ref.endsWith(':') ? `${ref}./${file}` : `${ref}:./${file}`;\n\n        try {\n            const data = await git<TOut>(opts, 'show', args, '--');\n            return data;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (ref === ':' && GitErrors.badRevision.test(msg)) {\n                return Git.show<TOut>(repoPath, fileName, 'HEAD:', options);\n            }\n\n            if (\n                GitErrors.badRevision.test(msg) ||\n                GitWarnings.notFound.test(msg) ||\n                GitWarnings.foundButNotInRevision.test(msg)\n            ) {\n                return undefined;\n            }\n\n            return defaultExceptionHandler(ex, opts, args) as TOut;\n        }\n    }\n\n    static show_status(repoPath: string, fileName: string, ref: string) {\n        return git<string>({ cwd: repoPath }, 'show', '--name-status', '--format=', ref, '--', fileName);\n    }\n\n    static showref_tag(repoPath: string) {\n        return git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, 'show-ref', '--tags');\n    }\n\n    static stash_apply(repoPath: string, stashName: string, deleteAfter: boolean) {\n        if (!stashName) return undefined;\n        return git<string>({ cwd: repoPath }, 'stash', deleteAfter ? 'pop' : 'apply', stashName);\n    }\n\n    static stash_delete(repoPath: string, stashName: string) {\n        if (!stashName) return undefined;\n        return git<string>({ cwd: repoPath }, 'stash', 'drop', stashName);\n    }\n\n    static stash_list(repoPath: string) {\n        return git<string>({ cwd: repoPath }, ...defaultStashParams);\n    }\n\n    static stash_push(repoPath: string, pathspecs: string[], message?: string) {\n        const params = ['stash', 'push', '-u'];\n        if (message) {\n            params.push('-m', message);\n        }\n        return git<string>({ cwd: repoPath }, ...params, '--', ...pathspecs);\n    }\n\n    static stash_save(repoPath: string, message?: string) {\n        const params = ['stash', 'save', '-u'];\n        if (message) {\n            params.push(message);\n        }\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static status(repoPath: string, porcelainVersion: number = 1): Promise<string> {\n        const porcelain = porcelainVersion >= 2 ? `--porcelain=v${porcelainVersion}` : '--porcelain';\n        return git<string>(\n            { cwd: repoPath, configs: ['-c', 'color.status=false'], env: { GIT_OPTIONAL_LOCKS: '0' } },\n            'status',\n            porcelain,\n            '--branch',\n            '-u'\n        );\n    }\n\n    static status_file(repoPath: string, fileName: string, porcelainVersion: number = 1): Promise<string> {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const porcelain = porcelainVersion >= 2 ? `--porcelain=v${porcelainVersion}` : '--porcelain';\n        return git<string>(\n            { cwd: root, configs: ['-c', 'color.status=false'], env: { GIT_OPTIONAL_LOCKS: '0' } },\n            'status',\n            porcelain,\n            '--',\n            file\n        );\n    }\n\n    static tag(repoPath: string) {\n        return git<string>({ cwd: repoPath }, 'tag', '-l', '-n1');\n    }\n}\n","'use strict';\nimport { GitCommandOptions } from '../git/git';\n\nexport class RequestType<TRequest, TResponse> {\n    constructor(\n        public readonly name: string\n    ) {}\n}\n\nexport interface GitCommandRequest {\n    options: GitCommandOptions;\n    args: any[];\n}\n\nexport interface GitCommandResponse {\n    data: string;\n    isBuffer?: boolean;\n}\n\nexport const GitCommandRequestType = new RequestType<GitCommandRequest, GitCommandResponse>('git');\n\nexport interface RepositoryProxy {\n    folderUri: string;\n    path: string;\n    root: boolean;\n    closed: boolean;\n}\n\nexport interface RepositoriesInFolderRequest {\n    folderUri: string;\n}\n\nexport interface RepositoriesInFolderResponse {\n    repositories: RepositoryProxy[];\n}\n\nexport const RepositoriesInFolderRequestType = new RequestType<\n    RepositoriesInFolderRequest,\n    RepositoriesInFolderResponse\n>('repositories/inFolder');\n\nexport interface WorkspaceFileExistsRequest {\n    fileName: string;\n    repoPath: string;\n    options: { ensureCase: boolean };\n}\n\nexport interface WorkspaceFileExistsResponse {\n    exists: boolean;\n}\n\nexport const WorkspaceFileExistsRequestType = new RequestType<WorkspaceFileExistsRequest, WorkspaceFileExistsResponse>(\n    'workspace/fileExists'\n);\n","'use strict';\nimport { CancellationToken, Disposable, Uri, workspace, WorkspaceFoldersChangeEvent } from 'vscode';\nimport { LiveShare, SharedService } from 'vsls';\nimport { Container } from '../container';\nimport { git } from '../git/git';\nimport { GitUri } from '../git/gitUri';\nimport { Logger } from '../logger';\nimport { debug, Iterables, log, Strings } from '../system';\nimport {\n    GitCommandRequest,\n    GitCommandRequestType,\n    GitCommandResponse,\n    RepositoriesInFolderRequest,\n    RepositoriesInFolderRequestType,\n    RepositoriesInFolderResponse,\n    RequestType,\n    WorkspaceFileExistsRequest,\n    WorkspaceFileExistsRequestType,\n    WorkspaceFileExistsResponse\n} from './protocol';\nimport { vslsUriRootRegex } from './vsls';\n\nconst defaultWhitelistFn = () => true;\nconst gitWhitelist = new Map<string, (args: any[]) => boolean>([\n    ['blame', defaultWhitelistFn],\n    ['branch', args => args[1] === '-vv' || args[1] === '--contains'],\n    ['cat-file', defaultWhitelistFn],\n    ['config', args => args[1] === '--get' || args[1] === '--get-regex'],\n    ['diff', defaultWhitelistFn],\n    ['difftool', defaultWhitelistFn],\n    ['log', defaultWhitelistFn],\n    ['ls-files', defaultWhitelistFn],\n    ['ls-tree', defaultWhitelistFn],\n    ['merge-base', defaultWhitelistFn],\n    ['remote', args => args[1] === '-v' || args[1] === 'get-url'],\n    ['rev-parse', defaultWhitelistFn],\n    ['show', defaultWhitelistFn],\n    ['show-ref', defaultWhitelistFn],\n    ['stash', args => args[1] === 'list'],\n    ['status', defaultWhitelistFn],\n    ['symbolic-ref', defaultWhitelistFn],\n    ['tag', args => args[1] === '-l']\n]);\n\nconst leadingSlashRegex = /^[\\/|\\\\]/;\n\nexport class VslsHostService implements Disposable {\n    static ServiceId = 'proxy';\n\n    @log()\n    static async share(api: LiveShare) {\n        const service = await api.shareService(this.ServiceId);\n        if (service == null) {\n            throw new Error('Failed to share host service');\n        }\n\n        return new VslsHostService(api, service);\n    }\n\n    private readonly _disposable: Disposable;\n    private _localPathsRegex: RegExp | undefined;\n    private _localToSharedPaths = new Map<string, string>();\n    private _sharedPathsRegex: RegExp | undefined;\n    private _sharedToLocalPaths = new Map<string, string>();\n\n    constructor(\n        private readonly _api: LiveShare,\n        private readonly _service: SharedService\n    ) {\n        _service.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this));\n\n        this._disposable = Disposable.from(workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged, this));\n\n        this.onRequest(GitCommandRequestType, this.onGitCommandRequest.bind(this));\n        this.onRequest(RepositoriesInFolderRequestType, this.onRepositoriesInFolderRequest.bind(this));\n        this.onRequest(WorkspaceFileExistsRequestType, this.onWorkspaceFileExistsRequest.bind(this));\n\n        void this.onWorkspaceFoldersChanged();\n    }\n\n    dispose() {\n        this._disposable.dispose();\n        void this._api.unshareService(VslsHostService.ServiceId);\n    }\n\n    private onRequest<TRequest, TResponse>(\n        requestType: RequestType<TRequest, TResponse>,\n        handler: (request: TRequest, cancellation: CancellationToken) => Promise<TResponse>\n    ) {\n        this._service.onRequest(requestType.name, (args: any[], cancellation: CancellationToken) =>\n            handler(args[0], cancellation)\n        );\n    }\n\n    @log()\n    private onAvailabilityChanged(available: boolean) {\n        // TODO\n    }\n\n    @debug()\n    private async onWorkspaceFoldersChanged(e?: WorkspaceFoldersChangeEvent) {\n        if (workspace.workspaceFolders === undefined || workspace.workspaceFolders.length === 0) return;\n\n        const cc = Logger.getCorrelationContext();\n\n        this._localToSharedPaths.clear();\n        this._sharedToLocalPaths.clear();\n\n        let localPath;\n        let sharedPath;\n        for (const f of workspace.workspaceFolders) {\n            localPath = Strings.normalizePath(f.uri.fsPath);\n            sharedPath = Strings.normalizePath(this.convertLocalUriToShared(f.uri).fsPath);\n\n            Logger.debug(cc, `shared='${sharedPath}' \\u2194 local='${localPath}'`);\n            this._localToSharedPaths.set(localPath, sharedPath);\n            this._sharedToLocalPaths.set(sharedPath, localPath);\n        }\n\n        let localPaths = Iterables.join(this._sharedToLocalPaths.values(), '|');\n        localPaths = localPaths.replace(/(\\/|\\\\)/g, '[\\\\\\\\/|\\\\\\\\]');\n        this._localPathsRegex = new RegExp(`(${localPaths})`, 'gi');\n\n        let sharedPaths = Iterables.join(this._localToSharedPaths.values(), '|');\n        sharedPaths = sharedPaths.replace(/(\\/|\\\\)/g, '[\\\\\\\\/|\\\\\\\\]');\n        this._sharedPathsRegex = new RegExp(`^(${sharedPaths})`, 'i');\n    }\n\n    @log()\n    private async onGitCommandRequest(\n        request: GitCommandRequest,\n        cancellation: CancellationToken\n    ): Promise<GitCommandResponse> {\n        const { options, args } = request;\n\n        const fn = gitWhitelist.get(request.args[0]);\n        if (fn === undefined || !fn(request.args)) throw new Error(`Git ${request.args[0]} command is not allowed`);\n\n        let isRootWorkspace = false;\n        if (options.cwd !== undefined && options.cwd.length > 0 && this._sharedToLocalPaths !== undefined) {\n            // This is all so ugly, but basically we are converting shared paths to local paths\n            if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(options.cwd)) {\n                options.cwd = Strings.normalizePath(options.cwd).replace(this._sharedPathsRegex, (match, shared) => {\n                    if (!isRootWorkspace) {\n                        isRootWorkspace = shared === '/~0';\n                    }\n\n                    const local = this._sharedToLocalPaths.get(shared);\n                    return local != null ? local : shared;\n                });\n            }\n            else if (leadingSlashRegex.test(options.cwd)) {\n                const localCwd = this._sharedToLocalPaths.get('/~0');\n                if (localCwd !== undefined) {\n                    isRootWorkspace = true;\n                    options.cwd = GitUri.resolve(options.cwd, localCwd);\n                }\n            }\n        }\n\n        let files = false;\n        let i = -1;\n        for (const arg of args) {\n            i++;\n            if (arg === '--') {\n                files = true;\n                continue;\n            }\n\n            if (!files) continue;\n\n            if (typeof arg === 'string') {\n                // If we are the \"root\" workspace, then we need to remove the leading slash off the path (otherwise it will not be treated as a relative path)\n                if (isRootWorkspace && leadingSlashRegex.test(arg[0])) {\n                    args.splice(i, 1, arg.substr(1));\n                }\n\n                if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(arg)) {\n                    args.splice(\n                        i,\n                        1,\n                        Strings.normalizePath(arg).replace(this._sharedPathsRegex, (match, shared) => {\n                            const local = this._sharedToLocalPaths.get(shared);\n                            return local != null ? local : shared;\n                        })\n                    );\n                }\n            }\n        }\n\n        let data = await git(options, ...args);\n        if (typeof data === 'string') {\n            // And then we convert local paths to shared paths\n            if (this._localPathsRegex !== undefined && data.length > 0) {\n                data = data.replace(this._localPathsRegex, (match, local) => {\n                    const shared = this._localToSharedPaths.get(local);\n                    return shared != null ? shared : local;\n                });\n            }\n\n            return { data: data };\n        }\n\n        return { data: data.toString('binary'), isBuffer: true };\n    }\n\n    @log()\n    private async onRepositoriesInFolderRequest(\n        request: RepositoriesInFolderRequest,\n        cancellation: CancellationToken\n    ): Promise<RepositoriesInFolderResponse> {\n        const uri = this.convertSharedUriToLocal(Uri.parse(request.folderUri));\n        const normalized = Strings.normalizePath(uri.fsPath, { stripTrailingSlash: true }).toLowerCase();\n\n        const repos = [\n            ...Iterables.filterMap(await Container.git.getRepositories(), r => {\n                if (!r.normalizedPath.startsWith(normalized)) return undefined;\n\n                const vslsUri = this.convertLocalUriToShared(r.folder.uri);\n                return {\n                    folderUri: vslsUri.toString(true),\n                    path: vslsUri.path,\n                    root: r.root,\n                    closed: r.closed\n                };\n            })\n        ];\n\n        return {\n            repositories: repos\n        };\n    }\n\n    @log()\n    private async onWorkspaceFileExistsRequest(\n        request: WorkspaceFileExistsRequest,\n        cancellation: CancellationToken\n    ): Promise<WorkspaceFileExistsResponse> {\n        let { repoPath } = request;\n        if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(repoPath)) {\n            repoPath = Strings.normalizePath(repoPath).replace(this._sharedPathsRegex, (match, shared) => {\n                const local = this._sharedToLocalPaths!.get(shared);\n                return local != null ? local : shared;\n            });\n        }\n\n        // TODO: Lock this to be only in the contained workspaces\n\n        return { exists: await Container.git.fileExists(repoPath, request.fileName, request.options) };\n    }\n\n    @debug({\n        exit: result => `returned ${result.toString(true)}`\n    })\n    private convertLocalUriToShared(localUri: Uri) {\n        const cc = Logger.getCorrelationContext();\n\n        let sharedUri = this._api.convertLocalUriToShared(localUri);\n        Logger.debug(\n            cc,\n            `LiveShare.convertLocalUriToShared(${localUri.toString(true)}) returned ${sharedUri.toString(true)}`\n        );\n\n        const localPath = localUri.path;\n        let sharedPath = sharedUri.path;\n        if (sharedUri.authority.length > 0) {\n            sharedPath = `/${sharedUri.authority}${sharedPath}`;\n        }\n\n        if (new RegExp(`${localPath}$`, 'i').test(sharedPath)) {\n            if (sharedPath.length === localPath.length) {\n                const folder = workspace.getWorkspaceFolder(localUri)!;\n                sharedUri = sharedUri.with({ path: `/~${folder.index}` });\n            }\n            else {\n                sharedUri = sharedUri.with({ path: sharedPath.substr(0, sharedPath.length - localPath.length) });\n            }\n        }\n        else if (!sharedPath.startsWith('/~')) {\n            const folder = workspace.getWorkspaceFolder(localUri)!;\n            sharedUri = sharedUri.with({ path: `/~${folder.index}${sharedPath}` });\n        }\n\n        return sharedUri;\n    }\n\n    private convertSharedUriToLocal(sharedUri: Uri) {\n        if (vslsUriRootRegex.test(sharedUri.path)) {\n            sharedUri = sharedUri.with({ path: `${sharedUri.path}/` });\n        }\n\n        const localUri = this._api.convertSharedUriToLocal(sharedUri);\n\n        const localPath = localUri.path;\n        const sharedPath = sharedUri.path;\n        if (localPath.endsWith(sharedPath)) {\n            return localUri.with({ path: localPath.substr(0, localPath.length - sharedPath.length) });\n        }\n        return localUri;\n    }\n}\n","'use strict';\nimport { CancellationToken, Disposable, window, WorkspaceFolder } from 'vscode';\nimport { LiveShare, SharedServiceProxy } from 'vsls';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { GitCommandOptions, Repository, RepositoryChange } from '../git/git';\nimport { Logger } from '../logger';\nimport { debug, log } from '../system';\nimport { VslsHostService } from './host';\nimport {\n    GitCommandRequestType,\n    RepositoriesInFolderRequestType,\n    RepositoryProxy,\n    RequestType,\n    WorkspaceFileExistsRequestType\n} from './protocol';\n\nexport class VslsGuestService implements Disposable {\n    @log()\n    static async connect(api: LiveShare) {\n        const cc = Logger.getCorrelationContext();\n\n        try {\n            const service = await api.getSharedService(VslsHostService.ServiceId);\n            if (service == null) {\n                throw new Error('Failed to connect to host service');\n            }\n\n            return new VslsGuestService(api, service);\n        }\n        catch (ex) {\n            Logger.error(ex, cc);\n            return undefined;\n        }\n    }\n\n    constructor(\n        private readonly _api: LiveShare,\n        private readonly _service: SharedServiceProxy\n    ) {\n        _service.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this));\n        this.onAvailabilityChanged(_service.isServiceAvailable);\n    }\n\n    dispose() {}\n\n    @log()\n    private onAvailabilityChanged(available: boolean) {\n        if (available) {\n            void setCommandContext(CommandContext.Enabled, true);\n            return;\n        }\n\n        void setCommandContext(CommandContext.Enabled, false);\n        void window.showWarningMessage(\n            `GitLens features will be unavailable. Unable to connect to the host GitLens service. The host may have disabled GitLens guest access or may not have GitLens installed.`\n        );\n    }\n\n    @log()\n    async git<TOut extends string | Buffer>(options: GitCommandOptions, ...args: any[]) {\n        const response = await this.sendRequest(GitCommandRequestType, { options: options, args: args });\n\n        if (response.isBuffer) {\n            return new Buffer(response.data, 'binary') as TOut;\n        }\n        return response.data as TOut;\n    }\n\n    @log()\n    async getRepositoriesInFolder(\n        folder: WorkspaceFolder,\n        onAnyRepositoryChanged: (repo: Repository, reason: RepositoryChange) => void\n    ): Promise<Repository[]> {\n        const response = await this.sendRequest(RepositoriesInFolderRequestType, {\n            folderUri: folder.uri.toString(true)\n        });\n\n        return response.repositories.map(\n            (r: RepositoryProxy) => new Repository(folder, r.path, r.root, onAnyRepositoryChanged, false, r.closed)\n        );\n    }\n\n    @log()\n    async fileExists(\n        repoPath: string,\n        fileName: string,\n        options: { ensureCase: boolean } = { ensureCase: false }\n    ): Promise<boolean> {\n        const response = await this.sendRequest(WorkspaceFileExistsRequestType, {\n            fileName: fileName,\n            repoPath: repoPath,\n            options: options\n        });\n\n        return response.exists;\n    }\n\n    @debug()\n    private sendRequest<TRequest, TResponse>(\n        requestType: RequestType<TRequest, TResponse>,\n        request: TRequest,\n        cancellation?: CancellationToken\n    ): Promise<TResponse> {\n        return this._service.request(requestType.name, [request]);\n    }\n}\n","'use strict';\nimport { Disposable, workspace } from 'vscode';\nimport { getApi, LiveShare, Role, SessionChangeEvent } from 'vsls';\nimport { CommandContext, DocumentSchemes, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from './../logger';\nimport { VslsGuestService } from './guest';\nimport { VslsHostService } from './host';\n\nexport const vslsUriPrefixRegex = /^[\\/|\\\\]~(?:\\d+?|external)(?:[\\/|\\\\]|$)/;\nexport const vslsUriRootRegex = /^[\\/|\\\\]~(?:\\d+?|external)$/;\n\nexport class VslsController implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _guest: VslsGuestService | undefined;\n    private _host: VslsHostService | undefined;\n\n    private _onReady: (() => void) | undefined;\n    private _waitForReady: Promise<void> | undefined;\n\n    constructor() {\n        void this.initialize();\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n        if (this._host !== undefined) {\n            this._host.dispose();\n        }\n\n        if (this._guest !== undefined) {\n            this._guest.dispose();\n        }\n    }\n\n    private async initialize() {\n        try {\n            // If we have a vsls: workspace open, we might be a guest, so wait until live share transitions into a mode\n            if (\n                workspace.workspaceFolders !== undefined &&\n                workspace.workspaceFolders.some(f => f.uri.scheme === DocumentSchemes.Vsls)\n            ) {\n                setCommandContext(CommandContext.Readonly, true);\n                this._waitForReady = new Promise(resolve => (this._onReady = resolve));\n            }\n\n            const api = await getApi();\n            if (api == null) {\n                // Tear it down if we can't talk to live share\n                if (this._onReady !== undefined) {\n                    this._onReady();\n                    this._waitForReady = undefined;\n                }\n                return;\n            }\n\n            this._disposable = Disposable.from(\n                api.onDidChangeSession(e => this.onLiveShareSessionChanged(api, e), this)\n            );\n        }\n        catch (ex) {\n            debugger;\n            Logger.error(ex);\n            return;\n        }\n    }\n\n    get isMaybeGuest() {\n        return this._guest !== undefined || this._waitForReady !== undefined;\n    }\n\n    async guest() {\n        if (this._waitForReady !== undefined) {\n            await this._waitForReady;\n            this._waitForReady = undefined;\n        }\n\n        return this._guest;\n    }\n\n    host() {\n        return this._host;\n    }\n\n    private async onLiveShareSessionChanged(api: LiveShare, e: SessionChangeEvent) {\n        if (this._host !== undefined) {\n            this._host.dispose();\n        }\n\n        if (this._guest !== undefined) {\n            this._guest.dispose();\n        }\n\n        switch (e.session.role) {\n            case Role.Host:\n                setCommandContext(CommandContext.Readonly, undefined);\n                if (Container.config.liveshare.allowGuestAccess) {\n                    this._host = await VslsHostService.share(api);\n                }\n                break;\n            case Role.Guest:\n                setCommandContext(CommandContext.Readonly, true);\n                this._guest = await VslsGuestService.connect(api);\n                break;\n\n            default:\n                setCommandContext(CommandContext.Readonly, undefined);\n                break;\n        }\n\n        if (this._onReady !== undefined) {\n            this._onReady();\n            this._onReady = undefined;\n        }\n    }\n}\n","'use strict';\nimport * as fs from 'fs';\nimport * as paths from 'path';\nimport {\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    extensions,\n    MessageItem,\n    ProgressLocation,\n    Range,\n    TextEditor,\n    Uri,\n    window,\n    WindowState,\n    workspace,\n    WorkspaceFolder,\n    WorkspaceFoldersChangeEvent\n} from 'vscode';\nimport { GitExtension } from '../@types/git';\nimport { configuration, RemotesConfig } from '../configuration';\nimport { CommandContext, DocumentSchemes, GlyphChars, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { LogCorrelationContext, Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { gate, Iterables, log, Objects, Strings, TernarySearchTree, Versions } from '../system';\nimport { CachedBlame, CachedDiff, CachedLog, GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { vslsUriPrefixRegex } from '../vsls/vsls';\nimport {\n    CommitFormatting,\n    Git,\n    GitAuthor,\n    GitBlame,\n    GitBlameCommit,\n    GitBlameLine,\n    GitBlameLines,\n    GitBlameParser,\n    GitBranch,\n    GitBranchParser,\n    GitCommit,\n    GitCommitType,\n    GitDiff,\n    GitDiffChunkLine,\n    GitDiffParser,\n    GitDiffShortStat,\n    GitFile,\n    GitLog,\n    GitLogCommit,\n    GitLogParser,\n    GitRemote,\n    GitRemoteParser,\n    GitStash,\n    GitStashParser,\n    GitStatus,\n    GitStatusFile,\n    GitStatusParser,\n    GitTag,\n    GitTagParser,\n    GitTree,\n    GitTreeParser,\n    Repository,\n    RepositoryChange\n} from './git';\nimport { GitUri } from './gitUri';\nimport { RemoteProviderFactory, RemoteProviders } from './remotes/factory';\n\nexport * from './gitUri';\nexport * from './models/models';\nexport * from './formatters/formatters';\nexport { getNameFromRemoteResource, RemoteProvider, RemoteResource, RemoteResourceType } from './remotes/provider';\nexport { RemoteProviderFactory } from './remotes/factory';\n\nconst RepoSearchWarnings = {\n    doesNotExist: /no such file or directory/i\n};\n\nconst userConfigRegex = /^user\\.(name|email) (.*)$/gm;\nconst mappedAuthorRegex = /(.+)\\s<(.+)>/;\n\nexport enum GitRepoSearchBy {\n    Author = 'author',\n    ChangedLines = 'changed-lines',\n    Changes = 'changes',\n    Files = 'files',\n    Message = 'message',\n    Sha = 'sha'\n}\n\nexport class GitService implements Disposable {\n    static emptyPromise: Promise<GitBlame | GitDiff | GitLog | undefined> = Promise.resolve(undefined);\n    static deletedOrMissingSha = Git.deletedOrMissingSha;\n    static stagedUncommittedSha = Git.stagedUncommittedSha;\n    static uncommittedSha = Git.uncommittedSha;\n\n    private _onDidChangeRepositories = new EventEmitter<void>();\n    get onDidChangeRepositories(): Event<void> {\n        return this._onDidChangeRepositories.event;\n    }\n\n    private readonly _disposable: Disposable;\n    private readonly _repositoryTree: TernarySearchTree<Repository>;\n    private _repositoriesLoadingPromise: Promise<void> | undefined;\n    private _suspended: boolean = false;\n\n    private readonly _branchesCache = new Map<string, GitBranch[]>();\n    private readonly _tagsCache = new Map<string, GitTag[]>();\n    private readonly _tagsWithRefsCache = new Map<string, GitTag[]>();\n    private readonly _trackedCache = new Map<string, boolean | Promise<boolean>>();\n    private readonly _userMapCache = new Map<string, { name?: string; email?: string } | null>();\n\n    constructor() {\n        this._repositoryTree = TernarySearchTree.forPaths();\n\n        this._disposable = Disposable.from(\n            window.onDidChangeWindowState(this.onWindowStateChanged, this),\n            workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged, this),\n            configuration.onDidChange(this.onConfigurationChanged, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n\n        this._repositoriesLoadingPromise = this.onWorkspaceFoldersChanged();\n    }\n\n    dispose() {\n        this._repositoryTree.forEach(r => r.dispose());\n        this._branchesCache.clear();\n        this._tagsCache.clear();\n        this._tagsWithRefsCache.clear();\n        this._trackedCache.clear();\n        this._userMapCache.clear();\n\n        this._disposable && this._disposable.dispose();\n    }\n\n    get UseCaching() {\n        return Container.config.advanced.caching.enabled;\n    }\n\n    private onAnyRepositoryChanged(repo: Repository, reason: RepositoryChange) {\n        this._trackedCache.clear();\n\n        this._branchesCache.delete(repo.path);\n        this._tagsCache.delete(repo.path);\n        this._tagsWithRefsCache.clear();\n\n        if (reason === RepositoryChange.Config) {\n            this._userMapCache.delete(repo.path);\n        }\n\n        if (reason === RepositoryChange.Closed) {\n            // Send a notification that the repositories changed\n            setImmediate(async () => {\n                await this.updateContext(this._repositoryTree);\n\n                this.fireRepositoriesChanged();\n            });\n        }\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            configuration.changed(e, configuration.name('defaultDateStyle').value) ||\n            configuration.changed(e, configuration.name('defaultDateFormat').value)\n        ) {\n            CommitFormatting.reset();\n        }\n    }\n\n    private onWindowStateChanged(e: WindowState) {\n        if (e.focused) {\n            this._repositoryTree.forEach(r => r.resume());\n        }\n        else {\n            this._repositoryTree.forEach(r => r.suspend());\n        }\n\n        this._suspended = !e.focused;\n    }\n\n    private async onWorkspaceFoldersChanged(e?: WorkspaceFoldersChangeEvent) {\n        let initializing = false;\n        if (e === undefined) {\n            initializing = true;\n            e = {\n                added: workspace.workspaceFolders || [],\n                removed: []\n            } as WorkspaceFoldersChangeEvent;\n\n            Logger.log(`Starting repository search in ${e.added.length} folders`);\n        }\n\n        for (const f of e.added) {\n            const { scheme } = f.uri;\n            if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) continue;\n\n            if (scheme === DocumentSchemes.Vsls) {\n                if (Container.vsls.isMaybeGuest) {\n                    const guest = await Container.vsls.guest();\n                    if (guest !== undefined) {\n                        const repositories = await guest.getRepositoriesInFolder(\n                            f,\n                            this.onAnyRepositoryChanged.bind(this)\n                        );\n                        for (const r of repositories) {\n                            this._repositoryTree.set(r.path, r);\n                        }\n                    }\n                }\n            }\n            else {\n                // Search for and add all repositories (nested and/or submodules)\n                const repositories = await this.repositorySearch(f);\n                for (const r of repositories) {\n                    this._repositoryTree.set(r.path, r);\n                }\n            }\n        }\n\n        for (const f of e.removed) {\n            const { fsPath, scheme } = f.uri;\n            if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) continue;\n\n            const repos = this._repositoryTree.findSuperstr(fsPath);\n            const reposToDelete =\n                repos !== undefined\n                    ? // Since the filtered tree will have keys that are relative to the fsPath, normalize to the full path\n                      [...Iterables.map<Repository, [Repository, string]>(repos, r => [r, r.path])]\n                    : [];\n\n            // const filteredTree = this._repositoryTree.findSuperstr(fsPath);\n            // const reposToDelete =\n            //     filteredTree !== undefined\n            //         ? // Since the filtered tree will have keys that are relative to the fsPath, normalize to the full path\n            //           [\n            //               ...Iterables.map<[Repository, string], [Repository, string]>(\n            //                   filteredTree.entries(),\n            //                   ([r, k]) => [r, path.join(fsPath, k)]\n            //               )\n            //           ]\n            //         : [];\n\n            const repo = this._repositoryTree.get(fsPath);\n            if (repo !== undefined) {\n                reposToDelete.push([repo, fsPath]);\n            }\n\n            for (const [r, k] of reposToDelete) {\n                this._repositoryTree.delete(k);\n                r.dispose();\n            }\n        }\n\n        await this.updateContext(this._repositoryTree);\n\n        if (!initializing) {\n            // Defer the event trigger enough to let everything unwind\n            setImmediate(() => this.fireRepositoriesChanged());\n        }\n    }\n\n    private async repositorySearch(folder: WorkspaceFolder): Promise<Repository[]> {\n        const { uri } = folder;\n        const depth = configuration.get<number>(configuration.name('advanced')('repositorySearchDepth').value, uri);\n\n        Logger.log(`Searching for repositories (depth=${depth}) in '${uri.fsPath}' ...`);\n\n        const start = process.hrtime();\n\n        const repositories: Repository[] = [];\n        const anyRepoChangedFn = this.onAnyRepositoryChanged.bind(this);\n\n        const rootPath = await this.getRepoPathCore(uri.fsPath, true);\n        if (rootPath !== undefined) {\n            Logger.log(`Repository found in '${rootPath}'`);\n            repositories.push(new Repository(folder, rootPath, true, anyRepoChangedFn, this._suspended));\n        }\n\n        if (depth <= 0) {\n            Logger.log(\n                `Completed repository search (depth=${depth}) in '${uri.fsPath}' ${\n                    GlyphChars.Dot\n                } ${Strings.getDurationMilliseconds(start)} ms`\n            );\n\n            return repositories;\n        }\n\n        // Get any specified excludes -- this is a total hack, but works for some simple cases and something is better than nothing :)\n        let excludes = {\n            ...workspace.getConfiguration('files', uri).get<{ [key: string]: boolean }>('exclude', {}),\n            ...workspace.getConfiguration('search', uri).get<{ [key: string]: boolean }>('exclude', {})\n        };\n\n        const excludedPaths = [\n            ...Iterables.filterMap(Objects.entries(excludes), ([key, value]) => {\n                if (!value) return undefined;\n                if (key.startsWith('**/')) return key.substring(3);\n                return key;\n            })\n        ];\n\n        excludes = excludedPaths.reduce(\n            (accumulator, current) => {\n                accumulator[current] = true;\n                return accumulator;\n            },\n            Object.create(null) as any\n        );\n\n        let repoPaths;\n        try {\n            repoPaths = await this.repositorySearchCore(uri.fsPath, depth, excludes);\n        }\n        catch (ex) {\n            if (RepoSearchWarnings.doesNotExist.test(ex.message || '')) {\n                Logger.log(\n                    `Repository search (depth=${depth}) in '${uri.fsPath}' FAILED${ex.message ? `(${ex.message})` : ''}`\n                );\n            }\n            else {\n                Logger.error(ex, `Repository search (depth=${depth}) in '${uri.fsPath}' FAILED`);\n            }\n\n            return repositories;\n        }\n\n        for (let p of repoPaths) {\n            p = paths.dirname(p);\n            // If we are the same as the root, skip it\n            if (Strings.normalizePath(p) === rootPath) continue;\n\n            const rp = await this.getRepoPathCore(p, true);\n            if (rp === undefined) continue;\n\n            Logger.log(`Repository found in '${rp}'`);\n            repositories.push(new Repository(folder, rp, false, anyRepoChangedFn, this._suspended));\n        }\n\n        Logger.log(\n            `Completed repository search (depth=${depth}) in '${uri.fsPath}' ${\n                GlyphChars.Dot\n            } ${Strings.getDurationMilliseconds(start)} ms`\n        );\n\n        return repositories;\n    }\n\n    private async repositorySearchCore(\n        root: string,\n        depth: number,\n        excludes: { [key: string]: boolean },\n        repositories: string[] = []\n    ): Promise<string[]> {\n        return new Promise<string[]>((resolve, reject) => {\n            fs.readdir(root, async (err, files) => {\n                if (err != null) {\n                    reject(err);\n                    return;\n                }\n\n                if (files.length === 0) {\n                    resolve(repositories);\n                    return;\n                }\n\n                const folders: string[] = [];\n\n                const promises = files.map(file => {\n                    const path = paths.resolve(root, file);\n\n                    return new Promise<void>((res, rej) => {\n                        fs.stat(path, (err, stat) => {\n                            if (file === '.git') {\n                                repositories.push(path);\n                            }\n                            else if (err == null && excludes[file] !== true && stat != null && stat.isDirectory()) {\n                                folders.push(path);\n                            }\n\n                            res();\n                        });\n                    });\n                });\n\n                await Promise.all(promises);\n\n                if (depth-- > 0) {\n                    for (const folder of folders) {\n                        await this.repositorySearchCore(folder, depth, excludes, repositories);\n                    }\n                }\n\n                resolve(repositories);\n            });\n        });\n    }\n\n    private async updateContext(repositoryTree: TernarySearchTree<Repository>) {\n        const hasRepository = repositoryTree.any();\n        await setCommandContext(CommandContext.Enabled, hasRepository);\n\n        let hasRemotes = false;\n        if (hasRepository) {\n            for (const repo of repositoryTree.values()) {\n                hasRemotes = await repo.hasRemotes();\n                if (hasRemotes) break;\n            }\n        }\n\n        await setCommandContext(CommandContext.HasRemotes, hasRemotes);\n\n        // If we have no repositories setup a watcher in case one is initialized\n        if (!hasRepository) {\n            const watcher = workspace.createFileSystemWatcher('**/.git', false, true, true);\n            const disposable = Disposable.from(\n                watcher,\n                watcher.onDidCreate(async uri => {\n                    const f = workspace.getWorkspaceFolder(uri);\n                    if (f === undefined) return;\n\n                    // Search for and add all repositories (nested and/or submodules)\n                    const repositories = await this.repositorySearch(f);\n                    if (repositories.length === 0) return;\n\n                    disposable.dispose();\n\n                    for (const r of repositories) {\n                        this._repositoryTree.set(r.path, r);\n                    }\n\n                    await this.updateContext(this._repositoryTree);\n\n                    // Defer the event trigger enough to let everything unwind\n                    setImmediate(() => this.fireRepositoriesChanged());\n                }, this)\n            );\n        }\n    }\n\n    private fireRepositoriesChanged() {\n        this._onDidChangeRepositories.fire();\n    }\n\n    @log()\n    async applyChangesToWorkingFile(uri: GitUri, ref1?: string, ref2?: string) {\n        ref1 = ref1 || uri.sha;\n        if (ref1 === undefined || uri.repoPath === undefined) return;\n\n        if (ref2 === undefined) {\n            ref2 = ref1;\n            ref1 = `${ref1}^`;\n        }\n\n        let patch;\n        try {\n            patch = await Git.diff(uri.repoPath, uri.fsPath, ref1, ref2);\n            void (await Git.apply(uri.repoPath!, patch));\n        }\n        catch (ex) {\n            if (patch && /patch does not apply/i.test(ex.message)) {\n                const result = await window.showWarningMessage(\n                    `Unable to apply changes cleanly. Retry and allow conflicts?`,\n                    { title: 'Yes' } as MessageItem,\n                    { title: 'No', isCloseAffordance: true } as MessageItem\n                );\n\n                if (result === undefined || result.title !== 'Yes') return;\n\n                if (result.title === 'Yes') {\n                    try {\n                        void (await Git.apply(uri.repoPath!, patch, { allowConflicts: true }));\n                        return;\n                    }\n                    catch (e) {\n                        ex = e;\n                    }\n                }\n            }\n\n            Logger.error(ex);\n            void Messages.showGenericErrorMessage(`Unable to apply changes`);\n        }\n    }\n\n    @log()\n    checkout(repoPath: string, ref: string, fileName?: string) {\n        return Git.checkout(repoPath, ref, fileName);\n    }\n\n    @gate()\n    @log()\n    async fetch(repoPath: string, remote?: string) {\n        return Git.fetch(repoPath, { remote: remote });\n    }\n\n    @gate()\n    @log()\n    async fetchAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Fetching repositories`,\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await repo.fetch({ progress: false });\n                }\n            }\n        );\n    }\n\n    @gate()\n    @log()\n    async pullAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pulling repositories`,\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await repo.pull({ progress: false });\n                }\n            }\n        );\n    }\n\n    @gate()\n    @log()\n    async pushAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pushing repositories`,\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await repo.push({ progress: false });\n                }\n            }\n        );\n    }\n\n    async fileExists(\n        repoPath: string,\n        fileName: string,\n        options: { ensureCase: boolean } = { ensureCase: false }\n    ): Promise<boolean> {\n        if (Container.vsls.isMaybeGuest) {\n            const guest = await Container.vsls.guest();\n            if (guest !== undefined) {\n                return guest.fileExists(repoPath, fileName, options);\n            }\n        }\n\n        const path = paths.resolve(repoPath, fileName);\n        const exists = await new Promise<boolean>((resolve, reject) => fs.exists(path, resolve));\n        if (!options.ensureCase || !exists) return exists;\n\n        // Deal with renames in case only on case-insensative file systems\n        const normalizedRepoPath = paths.normalize(repoPath);\n        return this.fileExistsWithCase(path, normalizedRepoPath, normalizedRepoPath.length);\n    }\n\n    private async fileExistsWithCase(path: string, repoPath: string, repoPathLength: number): Promise<boolean> {\n        const dir = paths.dirname(path);\n        if (dir.length < repoPathLength) return false;\n        if (dir === repoPath) return true;\n\n        const filenames = await new Promise<string[]>((resolve, reject) =>\n            fs.readdir(dir, (err: NodeJS.ErrnoException, files: string[]) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(files);\n                }\n            })\n        );\n        if (filenames.indexOf(paths.basename(path)) === -1) {\n            return false;\n        }\n        return this.fileExistsWithCase(dir, repoPath, repoPathLength);\n    }\n\n    @log()\n    async findNextCommit(repoPath: string, fileName: string, ref?: string): Promise<GitLogCommit | undefined> {\n        let log = await this.getLogForFile(repoPath, fileName, { maxCount: 1, ref: ref, renames: true, reverse: true });\n        let commit = log && Iterables.first(log.commits.values());\n        if (commit) return commit;\n\n        const nextFileName = await this.findNextFileName(repoPath, fileName, ref);\n        if (nextFileName) {\n            log = await this.getLogForFile(repoPath, nextFileName, {\n                maxCount: 1,\n                ref: ref,\n                renames: true,\n                reverse: true\n            });\n            commit = log && Iterables.first(log.commits.values());\n        }\n\n        return commit;\n    }\n\n    @log()\n    async findNextFileName(repoPath: string | undefined, fileName: string, ref?: string): Promise<string | undefined> {\n        [fileName, repoPath] = Git.splitPath(fileName, repoPath);\n\n        return (await this.fileExists(repoPath, fileName, { ensureCase: true }))\n            ? fileName\n            : await this.findNextFileNameCore(repoPath, fileName, ref);\n    }\n\n    private async findNextFileNameCore(repoPath: string, fileName: string, ref?: string): Promise<string | undefined> {\n        if (ref === undefined) {\n            // Get the most recent commit for this file name\n            ref = await this.getRecentShaForFile(repoPath, fileName);\n            if (ref === undefined) return undefined;\n        }\n\n        // Get the full commit (so we can see if there are any matching renames in the files)\n        const log = await this.getLog(repoPath, { maxCount: 1, ref: ref });\n        if (log === undefined) return undefined;\n\n        const c = Iterables.first(log.commits.values());\n        const file = c.files.find(f => f.originalFileName === fileName);\n        if (file === undefined) return undefined;\n\n        return file.fileName;\n    }\n\n    async findWorkingFileName(commit: GitCommit): Promise<[string | undefined, string | undefined]>;\n    async findWorkingFileName(\n        fileName: string,\n        repoPath?: string,\n        ref?: string\n    ): Promise<[string | undefined, string | undefined]>;\n    @log()\n    async findWorkingFileName(\n        commitOrFileName: GitCommit | string,\n        repoPath?: string,\n        ref?: string\n    ): Promise<[string | undefined, string | undefined]> {\n        let fileName;\n        if (typeof commitOrFileName === 'string') {\n            fileName = commitOrFileName;\n            if (repoPath === undefined) {\n                repoPath = await this.getRepoPath(fileName, { ref: ref });\n                [fileName, repoPath] = Git.splitPath(fileName, repoPath);\n            }\n            else {\n                fileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n            }\n        }\n        else {\n            const c = commitOrFileName;\n            repoPath = c.repoPath;\n            if (c.workingFileName && (await this.fileExists(repoPath, c.workingFileName, { ensureCase: true }))) {\n                return [c.workingFileName, repoPath];\n            }\n            fileName = c.fileName;\n        }\n\n        // Keep walking up to the most recent commit for a given filename, until it exists on disk\n        while (true) {\n            if (await this.fileExists(repoPath, fileName, { ensureCase: true })) return [fileName, repoPath];\n\n            fileName = await this.findNextFileNameCore(repoPath, fileName);\n            if (fileName === undefined) return [undefined, undefined];\n        }\n    }\n\n    @log({\n        args: {\n            0: (editor: TextEditor) =>\n                editor !== undefined ? `TextEditor(${Logger.toLoggable(editor.document.uri)})` : 'undefined'\n        }\n    })\n    async getActiveRepoPath(editor?: TextEditor): Promise<string | undefined> {\n        editor = editor || window.activeTextEditor;\n\n        let repoPath;\n        if (editor != null) {\n            const doc = await Container.tracker.getOrAdd(editor.document.uri);\n            if (doc !== undefined) {\n                repoPath = doc.uri.repoPath;\n            }\n        }\n\n        if (repoPath != null) return repoPath;\n\n        return this.getHighlanderRepoPath();\n    }\n\n    @log()\n    getHighlanderRepoPath(): string | undefined {\n        const entry = this._repositoryTree.highlander();\n        if (entry === undefined) return undefined;\n\n        const [repo] = entry;\n        return repo.path;\n    }\n\n    @log()\n    async getBlameForFile(uri: GitUri): Promise<GitBlame | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        let key = 'blame';\n        if (uri.sha !== undefined) {\n            key += `:${uri.sha}`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.UseCaching) {\n            if (doc.state !== undefined) {\n                const cachedBlame = doc.state.get<CachedBlame>(key);\n                if (cachedBlame !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedBlame.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getBlameForFileCore(uri, doc, key, cc);\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedBlame>(key, {\n                item: promise\n            } as CachedBlame);\n        }\n\n        return promise;\n    }\n\n    private async getBlameForFileCore(\n        uri: GitUri,\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitBlame | undefined> {\n        if (!(await this.isTracked(uri))) {\n            Logger.log(cc, `Skipping blame; '${uri.fsPath}' is not tracked`);\n            return GitService.emptyPromise as Promise<GitBlame>;\n        }\n\n        const [file, root] = Git.splitPath(uri.fsPath, uri.repoPath, false);\n\n        try {\n            const data = await Git.blame(root, file, uri.sha, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace\n            });\n            const blame = GitBlameParser.parse(data, root, file, await this.getCurrentUser(root));\n            return blame;\n        }\n        catch (ex) {\n            // Trap and cache expected blame errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedBlame>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedBlame);\n\n                document.setBlameFailure();\n\n                return GitService.emptyPromise as Promise<GitBlame>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log({\n        args: {\n            1: contents => '<contents>'\n        }\n    })\n    async getBlameForFileContents(uri: GitUri, contents: string): Promise<GitBlame | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        const key = `blame:${Strings.sha1(contents)}`;\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.UseCaching) {\n            if (doc.state !== undefined) {\n                const cachedBlame = doc.state.get<CachedBlame>(key);\n                if (cachedBlame !== undefined) {\n                    Logger.debug(cc, `Cache hit: ${key}`);\n                    return cachedBlame.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: ${key}`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getBlameForFileContentsCore(uri, contents, doc, key, cc);\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedBlame>(key, {\n                item: promise\n            } as CachedBlame);\n        }\n\n        return promise;\n    }\n\n    async getBlameForFileContentsCore(\n        uri: GitUri,\n        contents: string,\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitBlame | undefined> {\n        if (!(await this.isTracked(uri))) {\n            Logger.log(cc, `Skipping blame; '${uri.fsPath}' is not tracked`);\n            return GitService.emptyPromise as Promise<GitBlame>;\n        }\n\n        const [file, root] = Git.splitPath(uri.fsPath, uri.repoPath, false);\n\n        try {\n            const data = await Git.blame_contents(root, file, contents, {\n                args: Container.config.advanced.blame.customArguments,\n                correlationKey: `:${key}`,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace\n            });\n            const blame = GitBlameParser.parse(data, root, file, await this.getCurrentUser(root));\n            return blame;\n        }\n        catch (ex) {\n            // Trap and cache expected blame errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedBlame>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedBlame);\n\n                document.setBlameFailure();\n                return GitService.emptyPromise as Promise<GitBlame>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async getBlameForLine(\n        uri: GitUri,\n        line: number,\n        options: { skipCache?: boolean } = {}\n    ): Promise<GitBlameLine | undefined> {\n        if (!options.skipCache && this.UseCaching) {\n            const blame = await this.getBlameForFile(uri);\n            if (blame === undefined) return undefined;\n\n            let blameLine = blame.lines[line];\n            if (blameLine === undefined) {\n                if (blame.lines.length !== line) return undefined;\n                blameLine = blame.lines[line - 1];\n            }\n\n            const commit = blame.commits.get(blameLine.sha);\n            if (commit === undefined) return undefined;\n\n            return {\n                author: { ...blame.authors.get(commit.author), lineCount: commit.lines.length },\n                commit: commit,\n                line: blameLine\n            } as GitBlameLine;\n        }\n\n        const lineToBlame = line + 1;\n        const fileName = uri.fsPath;\n\n        try {\n            const data = await Git.blame(uri.repoPath, fileName, uri.sha, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace,\n                startLine: lineToBlame,\n                endLine: lineToBlame\n            });\n            const blame = GitBlameParser.parse(data, uri.repoPath, fileName, await this.getCurrentUser(uri.repoPath!));\n            if (blame === undefined) return undefined;\n\n            return {\n                author: Iterables.first(blame.authors.values()),\n                commit: Iterables.first(blame.commits.values()),\n                line: blame.lines[line]\n            } as GitBlameLine;\n        }\n        catch {\n            return undefined;\n        }\n    }\n\n    @log({\n        args: {\n            2: contents => '<contents>'\n        }\n    })\n    async getBlameForLineContents(\n        uri: GitUri,\n        line: number,\n        contents: string,\n        options: { skipCache?: boolean } = {}\n    ): Promise<GitBlameLine | undefined> {\n        if (!options.skipCache && this.UseCaching) {\n            const blame = await this.getBlameForFileContents(uri, contents);\n            if (blame === undefined) return undefined;\n\n            let blameLine = blame.lines[line];\n            if (blameLine === undefined) {\n                if (blame.lines.length !== line) return undefined;\n                blameLine = blame.lines[line - 1];\n            }\n\n            const commit = blame.commits.get(blameLine.sha);\n            if (commit === undefined) return undefined;\n\n            return {\n                author: { ...blame.authors.get(commit.author), lineCount: commit.lines.length },\n                commit: commit,\n                line: blameLine\n            } as GitBlameLine;\n        }\n\n        const lineToBlame = line + 1;\n        const fileName = uri.fsPath;\n\n        try {\n            const data = await Git.blame_contents(uri.repoPath, fileName, contents, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace,\n                startLine: lineToBlame,\n                endLine: lineToBlame\n            });\n            const currentUser = await this.getCurrentUser(uri.repoPath!);\n            const blame = GitBlameParser.parse(data, uri.repoPath, fileName, currentUser);\n            if (blame === undefined) return undefined;\n\n            return {\n                author: Iterables.first(blame.authors.values()),\n                commit: Iterables.first(blame.commits.values()),\n                line: blame.lines[line]\n            } as GitBlameLine;\n        }\n        catch {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getBlameForRange(uri: GitUri, range: Range): Promise<GitBlameLines | undefined> {\n        const blame = await this.getBlameForFile(uri);\n        if (blame === undefined) return undefined;\n\n        return this.getBlameForRangeSync(blame, uri, range);\n    }\n\n    @log({\n        args: { 0: blame => '<blame>' }\n    })\n    getBlameForRangeSync(blame: GitBlame, uri: GitUri, range: Range): GitBlameLines | undefined {\n        if (blame.lines.length === 0) return { allLines: blame.lines, ...blame };\n\n        if (range.start.line === 0 && range.end.line === blame.lines.length - 1) {\n            return { allLines: blame.lines, ...blame };\n        }\n\n        const lines = blame.lines.slice(range.start.line, range.end.line + 1);\n        const shas = new Set(lines.map(l => l.sha));\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitBlameCommit> = new Map();\n        for (const c of blame.commits.values()) {\n            if (!shas.has(c.sha)) continue;\n\n            const commit = c.with({\n                lines: c.lines.filter(l => l.line >= range.start.line && l.line <= range.end.line)\n            });\n            commits.set(c.sha, commit);\n\n            let author = authors.get(commit.author);\n            if (author === undefined) {\n                author = {\n                    name: commit.author,\n                    lineCount: 0\n                };\n                authors.set(author.name, author);\n            }\n\n            author.lineCount += commit.lines.length;\n        }\n\n        const sortedAuthors = new Map([...authors.entries()].sort((a, b) => b[1].lineCount - a[1].lineCount));\n\n        return {\n            authors: sortedAuthors,\n            commits: commits,\n            lines: lines,\n            allLines: blame.lines\n        } as GitBlameLines;\n    }\n\n    @log()\n    async getBranch(repoPath: string | undefined): Promise<GitBranch | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const data = await Git.revparse_currentBranch(repoPath);\n        if (data === undefined) return undefined;\n\n        const branch = data[0].split('\\n');\n        return new GitBranch(repoPath, branch[0], true, data[1], branch[1]);\n    }\n\n    @log()\n    async getBranches(repoPath: string | undefined): Promise<GitBranch[]> {\n        if (repoPath === undefined) return [];\n\n        let branches = this._branchesCache.get(repoPath);\n        if (branches !== undefined) return branches;\n\n        const data = await Git.branch(repoPath, { all: true });\n        // If we don't get any data, assume the repo doesn't have any commits yet so check if we have a current branch\n        if (data == null || data.length === 0) {\n            const current = await this.getBranch(repoPath);\n            branches = current !== undefined ? [current] : [];\n        }\n        else {\n            branches = GitBranchParser.parse(data, repoPath) || [];\n        }\n\n        const repo = await this.getRepository(repoPath);\n        if (repo !== undefined && repo.supportsChangeEvents) {\n            this._branchesCache.set(repoPath, branches);\n        }\n        return branches;\n    }\n\n    @log()\n    async getChangedFilesCount(repoPath: string, ref?: string): Promise<GitDiffShortStat | undefined> {\n        const data = await Git.diff_shortstat(repoPath, ref);\n        return GitDiffParser.parseShortStat(data);\n    }\n\n    @log()\n    async getConfig(key: string, repoPath?: string): Promise<string | undefined> {\n        return await Git.config_get(key, repoPath);\n    }\n\n    @log()\n    async getCurrentUser(repoPath: string) {\n        let user = this._userMapCache.get(repoPath);\n        if (user != null) return user;\n        // If we found the repo, but no user data was found just return\n        if (user === null) return undefined;\n\n        const data = await Git.config_getRegex('user.(name|email)', repoPath, { local: true });\n        if (!data) {\n            // If we found no user data, mark it so we won't bother trying again\n            this._userMapCache.set(repoPath, null);\n            return undefined;\n        }\n\n        user = { name: undefined, email: undefined };\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = userConfigRegex.exec(data);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            user[match[1] as 'name' | 'email'] = (' ' + match[2]).substr(1);\n        } while (match != null);\n\n        const author = `${user.name} <${user.email}>`;\n        // Check if there is a mailmap for the current user\n        const mappedAuthor = await Git.check_mailmap(repoPath, author);\n        if (mappedAuthor != null && mappedAuthor.length !== 0 && author !== mappedAuthor) {\n            match = mappedAuthorRegex.exec(mappedAuthor);\n            if (match != null) {\n                [, user.name, user.email] = match;\n            }\n        }\n\n        this._userMapCache.set(repoPath, user);\n        return user;\n    }\n\n    @log()\n    async getDiffForFile(uri: GitUri, ref1?: string, ref2?: string): Promise<GitDiff | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        if (ref1 !== undefined && ref2 === undefined && uri.sha !== undefined) {\n            ref2 = uri.sha;\n        }\n\n        let key = 'diff';\n        if (ref1 !== undefined) {\n            key += `:${ref1}`;\n        }\n        if (ref2 !== undefined) {\n            key += `:${ref2}`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.UseCaching) {\n            if (doc.state !== undefined) {\n                const cachedDiff = doc.state.get<CachedDiff>(key);\n                if (cachedDiff !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedDiff.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getDiffForFileCore(\n            uri.repoPath,\n            uri.fsPath,\n            ref1,\n            ref2,\n            { encoding: GitService.getEncoding(uri) },\n            doc,\n            key,\n            cc\n        );\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedDiff>(key, {\n                item: promise\n            } as CachedDiff);\n        }\n\n        return promise;\n    }\n\n    private async getDiffForFileCore(\n        repoPath: string | undefined,\n        fileName: string,\n        ref1: string | undefined,\n        ref2: string | undefined,\n        options: { encoding?: string },\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitDiff | undefined> {\n        const [file, root] = Git.splitPath(fileName, repoPath, false);\n\n        try {\n            const data = await Git.diff(root, file, ref1, ref2, { ...options, filter: 'M' });\n            const diff = GitDiffParser.parse(data);\n            return diff;\n        }\n        catch (ex) {\n            // Trap and cache expected diff errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedDiff>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedDiff);\n\n                return GitService.emptyPromise as Promise<GitDiff>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async getDiffForLine(\n        uri: GitUri,\n        line: number,\n        ref1?: string,\n        ref2?: string\n    ): Promise<GitDiffChunkLine | undefined> {\n        try {\n            const diff = await this.getDiffForFile(uri, ref1, ref2);\n            if (diff === undefined) return undefined;\n\n            const chunk = diff.chunks.find(c => c.currentPosition.start <= line && c.currentPosition.end >= line);\n            if (chunk === undefined) return undefined;\n\n            return chunk.lines[line - chunk.currentPosition.start + 1];\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getDiffStatus(\n        repoPath: string,\n        ref1?: string,\n        ref2?: string,\n        options: { filter?: string } = {}\n    ): Promise<GitFile[] | undefined> {\n        try {\n            const data = await Git.diff_nameStatus(repoPath, ref1, ref2, options);\n            const diff = GitDiffParser.parseNameStatus(data, repoPath);\n            return diff;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getFileStatusForCommit(repoPath: string, fileName: string, ref: string): Promise<GitFile | undefined> {\n        if (ref === GitService.deletedOrMissingSha || GitService.isUncommitted(ref)) return undefined;\n\n        const data = await Git.show_status(repoPath, fileName, ref);\n        if (!data) return undefined;\n\n        const files = GitDiffParser.parseNameStatus(data, repoPath);\n        if (files === undefined || files.length === 0) return undefined;\n\n        return files[0];\n    }\n\n    @log()\n    async getRecentLogCommitForFile(repoPath: string | undefined, fileName: string): Promise<GitLogCommit | undefined> {\n        return this.getLogCommitForFile(repoPath, fileName, undefined);\n    }\n\n    @log()\n    async getRecentShaForFile(repoPath: string, fileName: string) {\n        return await Git.log_recent(repoPath, fileName);\n    }\n\n    @log()\n    async getLogCommit(repoPath: string, ref: string): Promise<GitLogCommit | undefined> {\n        const log = await this.getLog(repoPath, { maxCount: 2, ref: ref });\n        if (log === undefined) return undefined;\n\n        return log.commits.get(ref);\n    }\n\n    @log()\n    async getLogCommitForFile(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { ref?: string; firstIfNotFound?: boolean; reverse?: boolean } = {}\n    ): Promise<GitLogCommit | undefined> {\n        const log = await this.getLogForFile(repoPath, fileName, {\n            maxCount: 2,\n            ref: options.ref,\n            reverse: options.reverse\n        });\n        if (log === undefined) return undefined;\n\n        const commit = options.ref && log.commits.get(options.ref);\n        if (commit === undefined && !options.firstIfNotFound && options.ref) {\n            // If the ref isn't a valid sha we will never find it, so let it fall through so we return the first\n            if (!Git.isSha(options.ref) || Git.isUncommitted(options.ref)) return undefined;\n        }\n\n        return commit || Iterables.first(log.commits.values());\n    }\n\n    @log()\n    async getLog(\n        repoPath: string,\n        options: { authors?: string[]; maxCount?: number; ref?: string; reverse?: boolean } = {}\n    ): Promise<GitLog | undefined> {\n        const maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n        try {\n            const data = await Git.log(repoPath, {\n                authors: options.authors,\n                maxCount: maxCount,\n                ref: options.ref,\n                reverse: options.reverse\n            });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.Branch,\n                repoPath,\n                undefined,\n                options.ref,\n                await this.getCurrentUser(repoPath),\n                maxCount,\n                options.reverse!,\n                undefined\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options };\n                log.query = (maxCount: number | undefined) => this.getLog(repoPath, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getLogForSearch(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        options: { maxCount?: number } = {}\n    ): Promise<GitLog | undefined> {\n        let maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n        let searchArgs: string[] | undefined = undefined;\n        switch (searchBy) {\n            case GitRepoSearchBy.Author:\n                searchArgs = ['-m', '-M', '--all', '--full-history', '-E', '-i', `--author=${search}`];\n                break;\n            case GitRepoSearchBy.ChangedLines:\n                searchArgs = ['-M', '--all', '--full-history', '-E', '-i', `-G${search}`];\n                break;\n            case GitRepoSearchBy.Changes:\n                searchArgs = ['-M', '--all', '--full-history', '-E', '-i', '--pickaxe-regex', `-S${search}`];\n                break;\n            case GitRepoSearchBy.Files:\n                searchArgs = ['-M', '--all', '--full-history', '-E', '-i', `--`, `${search}`];\n                break;\n            case GitRepoSearchBy.Message:\n                searchArgs = ['-m', '-M', '--all', '--full-history', '-E', '-i'];\n                if (search) {\n                    searchArgs.push(`--grep=${search}`);\n                }\n                break;\n            case GitRepoSearchBy.Sha:\n                searchArgs = [`-m`, '-M', search];\n                maxCount = 1;\n                break;\n        }\n\n        try {\n            const data = await Git.log_search(repoPath, searchArgs, { maxCount: maxCount });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.Branch,\n                repoPath,\n                undefined,\n                undefined,\n                await this.getCurrentUser(repoPath),\n                maxCount,\n                false,\n                undefined\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options };\n                log.query = (maxCount: number | undefined) =>\n                    this.getLogForSearch(repoPath, search, searchBy, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getLogForFile(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { maxCount?: number; range?: Range; ref?: string; renames?: boolean; reverse?: boolean } = {}\n    ): Promise<GitLog | undefined> {\n        if (repoPath !== undefined && repoPath === Strings.normalizePath(fileName)) {\n            throw new Error(`File name cannot match the repository path; fileName=${fileName}`);\n        }\n\n        const cc = Logger.getCorrelationContext();\n\n        options = { reverse: false, ...options };\n\n        if (options.renames === undefined) {\n            options.renames = Container.config.advanced.fileHistoryFollowsRenames;\n        }\n\n        let key = 'log';\n        if (options.ref !== undefined) {\n            key += `:${options.ref}`;\n        }\n        if (options.maxCount !== undefined) {\n            key += `:n${options.maxCount}`;\n        }\n        if (options.renames) {\n            key += `:follow`;\n        }\n        if (options.reverse) {\n            key += `:reverse`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(GitUri.fromFile(fileName, repoPath!, options.ref));\n        if (this.UseCaching && options.range === undefined) {\n            if (doc.state !== undefined) {\n                const cachedLog = doc.state.get<CachedLog>(key);\n                if (cachedLog !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedLog.item;\n                }\n\n                if (options.ref !== undefined || options.maxCount !== undefined) {\n                    // Since we are looking for partial log, see if we have the log of the whole file\n                    const cachedLog = doc.state.get<CachedLog>(\n                        `log${options.renames ? ':follow' : ''}${options.reverse ? ':reverse' : ''}`\n                    );\n                    if (cachedLog !== undefined) {\n                        if (options.ref === undefined) {\n                            Logger.debug(cc, `Cache hit: ~'${key}'`);\n                            return cachedLog.item;\n                        }\n\n                        Logger.debug(cc, `Cache ?: '${key}'`);\n                        let log = await cachedLog.item;\n                        if (log !== undefined && !log.truncated && log.commits.has(options.ref)) {\n                            Logger.debug(cc, `Cache hit: '${key}'`);\n\n                            // Create a copy of the log starting at the requested commit\n                            let skip = true;\n                            let i = 0;\n                            const authors = new Map<string, GitAuthor>();\n                            const commits = new Map(\n                                Iterables.filterMap<[string, GitLogCommit], [string, GitLogCommit]>(\n                                    log.commits.entries(),\n                                    ([ref, c]) => {\n                                        if (skip) {\n                                            if (ref !== options.ref) return undefined;\n                                            skip = false;\n                                        }\n\n                                        i++;\n                                        if (options.maxCount !== undefined && i > options.maxCount) {\n                                            return undefined;\n                                        }\n\n                                        authors.set(c.author, log.authors.get(c.author)!);\n                                        return [ref, c];\n                                    }\n                                )\n                            );\n\n                            const opts = { ...options };\n                            log = {\n                                ...log,\n                                maxCount: options.maxCount,\n                                count: commits.size,\n                                commits: commits,\n                                authors: authors,\n                                query: (maxCount: number | undefined) =>\n                                    this.getLogForFile(repoPath, fileName, { ...opts, maxCount: maxCount })\n                            };\n\n                            return log;\n                        }\n                    }\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getLogForFileCore(repoPath, fileName, options, doc, key, cc);\n\n        if (doc.state !== undefined && options.range === undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedLog>(key, {\n                item: promise\n            } as CachedLog);\n        }\n\n        return promise;\n    }\n\n    private async getLogForFileCore(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { maxCount?: number; range?: Range; ref?: string; renames?: boolean; reverse?: boolean },\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitLog | undefined> {\n        if (!(await this.isTracked(fileName, repoPath, { ref: options.ref }))) {\n            Logger.log(cc, `Skipping log; '${fileName}' is not tracked`);\n            return GitService.emptyPromise as Promise<GitLog>;\n        }\n\n        const [file, root] = Git.splitPath(fileName, repoPath, false);\n\n        try {\n            // tslint:disable-next-line:prefer-const\n            let { range, ...opts } = options;\n            if (range !== undefined && range.start.line > range.end.line) {\n                range = new Range(range.end, range.start);\n            }\n\n            const maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n            const data = await Git.log_file(root, file, {\n                ...opts,\n                maxCount: maxCount,\n                startLine: range === undefined ? undefined : range.start.line + 1,\n                endLine: range === undefined ? undefined : range.end.line + 1\n            });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.File,\n                root,\n                file,\n                opts.ref,\n                await this.getCurrentUser(root),\n                maxCount,\n                opts.reverse!,\n                range\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options };\n                log.query = (maxCount: number | undefined) =>\n                    this.getLogForFile(repoPath, fileName, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            // Trap and cache expected log errors\n            if (document.state !== undefined && options.range === undefined && !options.reverse) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedLog>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedLog);\n\n                return GitService.emptyPromise as Promise<GitLog>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async hasRemotes(repoPath: string | undefined): Promise<boolean> {\n        if (repoPath === undefined) return false;\n\n        const repository = await this.getRepository(repoPath);\n        if (repository === undefined) return false;\n\n        return repository.hasRemotes();\n    }\n\n    @log()\n    async hasTrackingBranch(repoPath: string | undefined): Promise<boolean> {\n        if (repoPath === undefined) return false;\n\n        const repository = await this.getRepository(repoPath);\n        if (repository === undefined) return false;\n\n        return repository.hasTrackingBranch();\n    }\n\n    @log()\n    async getMergeBase(repoPath: string, ref1: string, ref2: string, options: { forkPoint?: boolean } = {}) {\n        try {\n            const data = await Git.merge_base(repoPath, ref1, ref2, options);\n            if (data === undefined) return undefined;\n\n            return data.split('\\n')[0];\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return undefined;\n        }\n    }\n\n    @log()\n    async getRemotes(repoPath: string | undefined, options: { includeAll?: boolean } = {}): Promise<GitRemote[]> {\n        if (repoPath === undefined) return [];\n\n        const repository = await this.getRepository(repoPath);\n        const remotes = repository !== undefined ? repository.getRemotes() : this.getRemotesCore(repoPath);\n\n        if (options.includeAll) return remotes;\n\n        return (await remotes).filter(r => r.provider !== undefined);\n    }\n\n    async getRemotesCore(repoPath: string | undefined, providers?: RemoteProviders): Promise<GitRemote[]> {\n        if (repoPath === undefined) return [];\n\n        providers =\n            providers ||\n            RemoteProviderFactory.loadProviders(\n                configuration.get<RemotesConfig[] | null | undefined>(configuration.name('remotes').value, null)\n            );\n\n        try {\n            const data = await Git.remote(repoPath);\n            return GitRemoteParser.parse(data, repoPath, RemoteProviderFactory.factory(providers));\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return [];\n        }\n    }\n\n    async getRepoPath(filePath: string, options?: { ref?: string }): Promise<string | undefined>;\n    async getRepoPath(uri: Uri | undefined, options?: { ref?: string }): Promise<string | undefined>;\n    @log({\n        exit: path => `returned ${path}`\n    })\n    async getRepoPath(\n        filePathOrUri: string | Uri | undefined,\n        options: { ref?: string } = {}\n    ): Promise<string | undefined> {\n        if (filePathOrUri == null) return this.getHighlanderRepoPath();\n        if (filePathOrUri instanceof GitUri) return filePathOrUri.repoPath;\n\n        const cc = Logger.getCorrelationContext();\n\n        // Don't save the tracking info to the cache, because we could be looking in the wrong place (e.g. looking in the root when the file is in a submodule)\n        let repo = await this.getRepository(filePathOrUri, { ...options, skipCacheUpdate: true });\n        if (repo !== undefined) return repo.path;\n\n        const rp = await this.getRepoPathCore(\n            typeof filePathOrUri === 'string' ? filePathOrUri : filePathOrUri.fsPath,\n            false\n        );\n        if (rp === undefined) return undefined;\n\n        // Recheck this._repositoryTree.get(rp) to make sure we haven't already tried adding this due to awaits\n        if (this._repositoryTree.get(rp) !== undefined) return rp;\n\n        const isVslsScheme =\n            typeof filePathOrUri === 'string' ? undefined : filePathOrUri.scheme === DocumentSchemes.Vsls;\n\n        // If this new repo is inside one of our known roots and we we don't already know about, add it\n        const root = this.findRepositoryForPath(this._repositoryTree, rp, isVslsScheme);\n\n        let folder;\n        if (root !== undefined) {\n            // Not sure why I added this for vsls (I can't see a reason for it anymore), but if it is added it will break submodules\n            // rp = root.path;\n            folder = root.folder;\n        }\n        else {\n            folder = workspace.getWorkspaceFolder(GitUri.file(rp, isVslsScheme));\n            if (folder === undefined) {\n                const parts = rp.split('/');\n                folder = {\n                    uri: GitUri.file(rp, isVslsScheme),\n                    name: parts[parts.length - 1],\n                    index: this._repositoryTree.count()\n                };\n            }\n        }\n\n        Logger.log(cc, `Repository found in '${rp}'`);\n        repo = new Repository(folder, rp, false, this.onAnyRepositoryChanged.bind(this), this._suspended);\n        this._repositoryTree.set(rp, repo);\n\n        // Send a notification that the repositories changed\n        setImmediate(async () => {\n            await this.updateContext(this._repositoryTree);\n\n            this.fireRepositoriesChanged();\n        });\n\n        return rp;\n    }\n\n    private async getRepoPathCore(filePath: string, isDirectory: boolean): Promise<string | undefined> {\n        try {\n            return await Git.revparse_toplevel(isDirectory ? filePath : paths.dirname(filePath));\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return undefined;\n        }\n    }\n\n    @log()\n    async getRepoPathOrActive(uri: Uri | undefined, editor: TextEditor | undefined) {\n        const repoPath = await this.getRepoPath(uri);\n        if (repoPath) return repoPath;\n\n        return this.getActiveRepoPath(editor);\n    }\n\n    @log()\n    async getRepositories(predicate?: (repo: Repository) => boolean): Promise<Iterable<Repository>> {\n        const repositoryTree = await this.getRepositoryTree();\n\n        const values = repositoryTree.values();\n        return predicate !== undefined ? Iterables.filter(values, predicate) : values;\n    }\n\n    @log()\n    async getOrderedRepositories(): Promise<Repository[]> {\n        const repositories = [...(await this.getRepositories())];\n        if (repositories.length === 0) return repositories;\n\n        return repositories\n            .filter(r => !r.closed)\n            .sort((a, b) => (a.starred ? -1 : 1) - (b.starred ? -1 : 1) || a.index - b.index);\n    }\n\n    private async getRepositoryTree(): Promise<TernarySearchTree<Repository>> {\n        if (this._repositoriesLoadingPromise !== undefined) {\n            await this._repositoriesLoadingPromise;\n            this._repositoriesLoadingPromise = undefined;\n        }\n\n        return this._repositoryTree;\n    }\n\n    async getRepository(\n        repoPath: string,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    async getRepository(\n        uri: Uri,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    async getRepository(\n        repoPathOrUri: string | Uri,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    @log({\n        exit: repo => `returned ${repo !== undefined ? `${repo.path}` : 'undefined'}`\n    })\n    async getRepository(\n        repoPathOrUri: string | Uri,\n        options: { ref?: string; skipCacheUpdate?: boolean } = {}\n    ): Promise<Repository | undefined> {\n        const repositoryTree = await this.getRepositoryTree();\n\n        let isVslsScheme;\n\n        let path: string;\n        if (typeof repoPathOrUri === 'string') {\n            const repo = repositoryTree.get(repoPathOrUri);\n            if (repo !== undefined) return repo;\n\n            path = repoPathOrUri;\n            isVslsScheme = undefined;\n        }\n        else {\n            if (repoPathOrUri instanceof GitUri) {\n                if (repoPathOrUri.repoPath) {\n                    const repo = repositoryTree.get(repoPathOrUri.repoPath);\n                    if (repo !== undefined) return repo;\n                }\n\n                path = repoPathOrUri.fsPath;\n            }\n            else {\n                path = repoPathOrUri.fsPath;\n            }\n\n            isVslsScheme = repoPathOrUri.scheme === DocumentSchemes.Vsls;\n        }\n\n        const repo = this.findRepositoryForPath(repositoryTree, path, isVslsScheme);\n        if (repo === undefined) return undefined;\n\n        // Make sure the file is tracked in this repo before returning -- it could be from a submodule\n        if (!(await this.isTracked(path, repo.path, options))) return undefined;\n        return repo;\n    }\n\n    private findRepositoryForPath(\n        repositoryTree: TernarySearchTree<Repository>,\n        path: string,\n        isVslsScheme: boolean | undefined\n    ): Repository | undefined {\n        let repo = repositoryTree.findSubstr(path);\n        // If we can't find the repo and we are a guest, check if we are a \"root\" workspace\n        if (repo === undefined && isVslsScheme !== false && Container.vsls.isMaybeGuest) {\n            if (!vslsUriPrefixRegex.test(path)) {\n                path = Strings.normalizePath(path);\n                const vslsPath = `/~0${path[0] === '/' ? path : `/${path}`}`;\n                repo = repositoryTree.findSubstr(vslsPath);\n            }\n        }\n        return repo;\n    }\n\n    async getRepositoryCount(): Promise<number> {\n        const repositoryTree = await this.getRepositoryTree();\n        return repositoryTree.count();\n    }\n\n    @log()\n    async getStashList(repoPath: string | undefined): Promise<GitStash | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const data = await Git.stash_list(repoPath);\n        const stash = GitStashParser.parse(data, repoPath);\n        return stash;\n    }\n\n    @log()\n    async getStatusForFile(repoPath: string, fileName: string): Promise<GitStatusFile | undefined> {\n        const porcelainVersion = Git.validateVersion(2, 11) ? 2 : 1;\n\n        const data = await Git.status_file(repoPath, fileName, porcelainVersion);\n        const status = GitStatusParser.parse(data, repoPath, porcelainVersion);\n        if (status === undefined || !status.files.length) return undefined;\n\n        return status.files[0];\n    }\n\n    @log()\n    async getStatusForRepo(repoPath: string | undefined): Promise<GitStatus | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const porcelainVersion = Git.validateVersion(2, 11) ? 2 : 1;\n\n        const data = await Git.status(repoPath, porcelainVersion);\n        const status = GitStatusParser.parse(data, repoPath, porcelainVersion);\n        return status;\n    }\n\n    @log()\n    async getTags(repoPath: string | undefined, options: { includeRefs?: boolean } = {}): Promise<GitTag[]> {\n        if (repoPath === undefined) return [];\n\n        let tags;\n        if (options.includeRefs) {\n            tags = this._tagsWithRefsCache.get(repoPath);\n            if (tags !== undefined) return tags;\n\n            const data = await Git.showref_tag(repoPath);\n            tags = GitTagParser.parseWithRef(data, repoPath) || [];\n\n            const repo = await this.getRepository(repoPath);\n            if (repo !== undefined && repo.supportsChangeEvents) {\n                this._tagsWithRefsCache.set(repoPath, tags);\n            }\n\n            return tags;\n        }\n\n        tags = this._tagsCache.get(repoPath);\n        if (tags !== undefined) return tags;\n\n        const data = await Git.tag(repoPath);\n        tags = GitTagParser.parse(data, repoPath) || [];\n\n        const repo = await this.getRepository(repoPath);\n        if (repo !== undefined && repo.supportsChangeEvents) {\n            this._tagsCache.set(repoPath, tags);\n        }\n\n        return tags;\n    }\n\n    @log()\n    async getTreeFileForRevision(repoPath: string, fileName: string, ref: string): Promise<GitTree | undefined> {\n        if (repoPath === undefined || fileName == null || fileName.length === 0) return undefined;\n\n        const data = await Git.ls_tree(repoPath, ref, { fileName: fileName });\n        const trees = GitTreeParser.parse(data);\n        return trees === undefined || trees.length === 0 ? undefined : trees[0];\n    }\n\n    @log()\n    async getTreeForRevision(repoPath: string, ref: string): Promise<GitTree[]> {\n        if (repoPath === undefined) return [];\n\n        const data = await Git.ls_tree(repoPath, ref);\n        return GitTreeParser.parse(data) || [];\n    }\n\n    @log()\n    getVersionedFileBuffer(repoPath: string, fileName: string, ref: string) {\n        return Git.show<Buffer>(repoPath, fileName, ref, { encoding: 'buffer' });\n    }\n\n    @log()\n    async getVersionedUri(\n        repoPath: string | undefined,\n        fileName: string,\n        ref: string | undefined\n    ): Promise<Uri | undefined> {\n        if (ref === GitService.deletedOrMissingSha) return undefined;\n\n        if (!ref || (Git.isUncommitted(ref) && !Git.isStagedUncommitted(ref))) {\n            if (await this.fileExists(repoPath!, fileName)) return GitUri.file(fileName);\n\n            return undefined;\n        }\n\n        if (Git.isStagedUncommitted(ref)) {\n            return GitUri.git(fileName, repoPath);\n        }\n\n        return GitUri.toRevisionUri(ref, fileName, repoPath!);\n    }\n\n    isTrackable(scheme: string): boolean;\n    isTrackable(uri: Uri): boolean;\n    isTrackable(schemeOruri: string | Uri): boolean {\n        const scheme = typeof schemeOruri === 'string' ? schemeOruri : schemeOruri.scheme;\n        return (\n            scheme === DocumentSchemes.File ||\n            scheme === DocumentSchemes.Vsls ||\n            scheme === DocumentSchemes.Git ||\n            scheme === DocumentSchemes.GitLens\n        );\n    }\n\n    async isTracked(\n        fileName: string,\n        repoPath?: string,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<boolean>;\n    async isTracked(uri: GitUri): Promise<boolean>;\n    @log({\n        exit: tracked => `returned ${tracked.toString()}`,\n        singleLine: true\n    })\n    async isTracked(\n        fileNameOrUri: string | GitUri,\n        repoPath?: string,\n        options: { ref?: string; skipCacheUpdate?: boolean } = {}\n    ): Promise<boolean> {\n        if (options.ref === GitService.deletedOrMissingSha) return false;\n\n        let ref = options.ref;\n        let cacheKey: string;\n        let fileName: string;\n        if (typeof fileNameOrUri === 'string') {\n            [fileName, repoPath] = Git.splitPath(fileNameOrUri, repoPath);\n            cacheKey = GitUri.toKey(fileNameOrUri);\n        }\n        else {\n            if (!this.isTrackable(fileNameOrUri)) return false;\n\n            fileName = fileNameOrUri.fsPath;\n            repoPath = fileNameOrUri.repoPath;\n            ref = fileNameOrUri.sha;\n            cacheKey = GitUri.toKey(fileName);\n        }\n\n        if (ref !== undefined) {\n            cacheKey += `:${ref}`;\n        }\n\n        let tracked = this._trackedCache.get(cacheKey);\n        if (tracked !== undefined) {\n            tracked = await tracked;\n\n            return tracked;\n        }\n\n        tracked = this.isTrackedCore(fileName, repoPath === undefined ? '' : repoPath, ref);\n        if (options.skipCacheUpdate) {\n            tracked = await tracked;\n\n            return tracked;\n        }\n\n        this._trackedCache.set(cacheKey, tracked);\n        tracked = await tracked;\n        this._trackedCache.set(cacheKey, tracked);\n\n        return tracked;\n    }\n\n    private async isTrackedCore(fileName: string, repoPath: string, ref?: string) {\n        if (ref === GitService.deletedOrMissingSha) return false;\n\n        try {\n            // Even if we have a ref, check first to see if the file exists (that way the cache will be better reused)\n            let tracked = Boolean(await Git.ls_files(repoPath === undefined ? '' : repoPath, fileName));\n            if (!tracked && ref !== undefined) {\n                tracked = Boolean(await Git.ls_files(repoPath === undefined ? '' : repoPath, fileName, { ref: ref }));\n                // If we still haven't found this file, make sure it wasn't deleted in that ref (i.e. check the previous)\n                if (!tracked) {\n                    tracked = Boolean(\n                        await Git.ls_files(repoPath === undefined ? '' : repoPath, fileName, {\n                            ref: `${ref}^`\n                        })\n                    );\n                }\n            }\n            return tracked;\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return false;\n        }\n    }\n\n    @log()\n    async getDiffTool(repoPath?: string) {\n        return (\n            (await Git.config_get('diff.guitool', repoPath, { local: true })) ||\n            (await Git.config_get('diff.tool', repoPath, { local: true }))\n        );\n    }\n\n    @log()\n    async openDiffTool(\n        repoPath: string,\n        uri: Uri,\n        options: { ref1?: string; ref2?: string; staged?: boolean; tool?: string } = {}\n    ) {\n        if (!options.tool) {\n            const cc = Logger.getCorrelationContext();\n\n            options.tool = await this.getDiffTool(repoPath);\n            if (options.tool === undefined) throw new Error('No diff tool found');\n\n            Logger.log(cc, `Using tool=${options.tool}`);\n        }\n\n        const { tool, ...opts } = options;\n        return Git.difftool_fileDiff(repoPath, uri.fsPath, tool, opts);\n    }\n\n    @log()\n    async openDirectoryDiff(repoPath: string, ref1: string, ref2?: string, tool?: string) {\n        if (!tool) {\n            const cc = Logger.getCorrelationContext();\n\n            tool = await this.getDiffTool(repoPath);\n            if (tool === undefined) throw new Error('No diff tool found');\n\n            Logger.log(cc, `Using tool=${tool}`);\n        }\n\n        return Git.difftool_dirDiff(repoPath, tool, ref1, ref2);\n    }\n\n    @log()\n    async resolveReference(repoPath: string, ref: string, uri?: Uri) {\n        const resolved = Git.isSha(ref) || !Git.isShaLike(ref) || ref.endsWith('^3');\n        if (uri == null) return resolved ? ref : (await Git.revparse(repoPath, ref)) || ref;\n\n        const ensuredRef = await Git.cat_file_validate(\n            repoPath,\n            Strings.normalizePath(paths.relative(repoPath, uri.fsPath)),\n            ref\n        );\n        if (ensuredRef === undefined) return ref;\n\n        return ensuredRef;\n    }\n\n    @log()\n    async validateReference(repoPath: string, ref: string) {\n        return await Git.cat_validate(repoPath, ref);\n    }\n\n    stageFile(repoPath: string, fileName: string): Promise<string>;\n    stageFile(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    stageFile(repoPath: string, fileNameOrUri: string | Uri): Promise<string> {\n        return Git.add(\n            repoPath,\n            typeof fileNameOrUri === 'string' ? fileNameOrUri : Git.splitPath(fileNameOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    stageDirectory(repoPath: string, directory: string): Promise<string>;\n    stageDirectory(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    stageDirectory(repoPath: string, directoryOrUri: string | Uri): Promise<string> {\n        return Git.add(\n            repoPath,\n            typeof directoryOrUri === 'string' ? directoryOrUri : Git.splitPath(directoryOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    unStageFile(repoPath: string, fileName: string): Promise<string>;\n    unStageFile(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    unStageFile(repoPath: string, fileNameOrUri: string | Uri): Promise<string> {\n        return Git.reset(\n            repoPath,\n            typeof fileNameOrUri === 'string' ? fileNameOrUri : Git.splitPath(fileNameOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    unStageDirectory(repoPath: string, directory: string): Promise<string>;\n    unStageDirectory(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    unStageDirectory(repoPath: string, directoryOrUri: string | Uri): Promise<string> {\n        return Git.reset(\n            repoPath,\n            typeof directoryOrUri === 'string' ? directoryOrUri : Git.splitPath(directoryOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    @log()\n    stashApply(repoPath: string, stashName: string, deleteAfter: boolean = false) {\n        return Git.stash_apply(repoPath, stashName, deleteAfter);\n    }\n\n    @log()\n    stashDelete(repoPath: string, stashName: string) {\n        return Git.stash_delete(repoPath, stashName);\n    }\n\n    @log()\n    stashSave(repoPath: string, message?: string, uris?: Uri[]) {\n        if (uris === undefined) return Git.stash_save(repoPath, message);\n\n        GitService.ensureGitVersion('2.13.2', 'Stashing individual files');\n\n        const pathspecs = uris.map(u => Git.splitPath(u.fsPath, repoPath)[0]);\n        return Git.stash_push(repoPath, pathspecs, message);\n    }\n\n    static getEncoding(repoPath: string, fileName: string): string;\n    static getEncoding(uri: Uri): string;\n    static getEncoding(repoPathOrUri: string | Uri, fileName?: string): string {\n        const uri = typeof repoPathOrUri === 'string' ? GitUri.resolveToUri(fileName!, repoPathOrUri) : repoPathOrUri;\n        return Git.getEncoding(workspace.getConfiguration('files', uri).get<string>('encoding'));\n    }\n\n    @log()\n    static async initialize(): Promise<void> {\n        // Try to use the same git as the built-in vscode git extension\n        let gitPath;\n        try {\n            const gitExtension = extensions.getExtension('vscode.git');\n            if (gitExtension !== undefined) {\n                const gitApi = ((gitExtension.isActive\n                    ? gitExtension.exports\n                    : await gitExtension.activate()) as GitExtension).getAPI(1);\n                gitPath = gitApi.git.path;\n            }\n        }\n        catch {}\n\n        await Git.setOrFindGitPath(gitPath || workspace.getConfiguration('git').get<string>('path'));\n    }\n\n    static getGitPath(): string {\n        return Git.getGitPath();\n    }\n\n    static getGitVersion(): string {\n        return Git.getGitVersion();\n    }\n\n    static isShaLike(ref: string): boolean {\n        return Git.isShaLike(ref);\n    }\n\n    static isStagedUncommitted(ref: string | undefined): boolean {\n        return Git.isStagedUncommitted(ref);\n    }\n\n    static isUncommitted(ref: string | undefined): boolean {\n        return Git.isUncommitted(ref);\n    }\n\n    static shortenSha(\n        ref: string | undefined,\n        strings: { deletedOrMissing?: string; stagedUncommitted?: string; uncommitted?: string; working?: string } = {}\n    ) {\n        if (ref === undefined) return undefined;\n\n        strings = { deletedOrMissing: '(deleted)', working: '', ...strings };\n\n        if (ref == null || ref.length === 0) return strings.working;\n        if (ref === GitService.deletedOrMissingSha) return strings.deletedOrMissing;\n\n        return Git.isShaLike(ref) || Git.isStagedUncommitted(ref) ? Git.shortenSha(ref, strings) : ref;\n    }\n\n    static compareGitVersion(version: string, throwIfLessThan?: Error) {\n        return Versions.compare(Versions.fromString(this.getGitVersion()), Versions.fromString(version));\n    }\n\n    static ensureGitVersion(version: string, feature: string): void {\n        const gitVersion = this.getGitVersion();\n        if (Versions.compare(Versions.fromString(gitVersion), Versions.fromString(version)) === -1) {\n            throw new Error(\n                `${feature} requires a newer version of Git (>= ${version}) than is currently installed (${gitVersion}). Please install a more recent version of Git to use this GitLens feature.`\n            );\n        }\n    }\n}\n","const cssColorRegex = /^(?:(#?)([0-9a-f]{3}|[0-9a-f]{6})|((?:rgb|hsl)a?)\\((-?\\d+%?)[,\\s]+(-?\\d+%?)[,\\s]+(-?\\d+%?)[,\\s]*(-?[\\d\\.]+%?)?\\))$/i;\n\nfunction adjustLight(color: number, amount: number) {\n    const cc = color + amount;\n    const c = amount < 0 ? (cc < 0 ? 0 : cc) : cc > 255 ? 255 : cc;\n\n    return Math.round(c);\n}\n\nexport function darken(color: string, percentage: number) {\n    return lighten(color, -percentage);\n}\n\nexport function lighten(color: string, percentage: number) {\n    const rgba = toRgba(color);\n    if (rgba == null) return color;\n\n    const [r, g, b, a] = rgba;\n    percentage = (255 * percentage) / 100;\n    return `rgba(${adjustLight(r, percentage)}, ${adjustLight(g, percentage)}, ${adjustLight(b, percentage)}, ${a})`;\n}\n\nexport function opacity(color: string, percentage: number) {\n    const rgba = toRgba(color);\n    if (rgba == null) return color;\n\n    const [r, g, b, a] = rgba;\n    return `rgba(${r}, ${g}, ${b}, ${a * (percentage / 100)})`;\n}\n\nexport function toRgba(color: string) {\n    color = color.trim();\n\n    const result = cssColorRegex.exec(color);\n    if (result == null) return null;\n\n    if (result[1] === '#') {\n        const hex = result[2];\n        switch (hex.length) {\n            case 3:\n                return [parseInt(hex[0] + hex[0], 16), parseInt(hex[1] + hex[1], 16), parseInt(hex[2] + hex[2], 16), 1];\n            case 6:\n                return [\n                    parseInt(hex.substring(0, 2), 16),\n                    parseInt(hex.substring(2, 4), 16),\n                    parseInt(hex.substring(4, 6), 16),\n                    1\n                ];\n        }\n\n        return null;\n    }\n\n    switch (result[3]) {\n        case 'rgb':\n            return [parseInt(result[4], 10), parseInt(result[5], 10), parseInt(result[6], 10), 1];\n        case 'rgba':\n            return [parseInt(result[4], 10), parseInt(result[5], 10), parseInt(result[6], 10), parseFloat(result[7])];\n        default:\n            return null;\n    }\n}\n","import {\n    DecorationInstanceRenderOptions,\n    DecorationOptions,\n    MarkdownString,\n    ThemableDecorationRenderOptions,\n    ThemeColor,\n    workspace\n} from 'vscode';\nimport {\n    DiffWithCommand,\n    OpenCommitInRemoteCommand,\n    OpenFileRevisionCommand,\n    ShowQuickCommitDetailsCommand,\n    ShowQuickCommitFileDetailsCommand\n} from '../commands';\nimport { FileAnnotationType } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    CommitFormatter,\n    GitCommit,\n    GitDiffChunkLine,\n    GitRemote,\n    GitService,\n    GitUri,\n    ICommitFormatOptions\n} from '../git/gitService';\nimport { Objects, Strings } from '../system';\nimport { toRgba } from '../ui/shared/colors';\n\nexport interface ComputedHeatmap {\n    cold: boolean;\n    colors: { hot: string; cold: string };\n    median: number;\n    newest: number;\n    oldest: number;\n    computeAge(date: Date): number;\n}\n\ninterface IHeatmapConfig {\n    enabled: boolean;\n    location?: 'left' | 'right';\n}\n\ninterface IRenderOptions extends DecorationInstanceRenderOptions, ThemableDecorationRenderOptions {\n    height?: string;\n    uncommittedColor?: string | ThemeColor;\n}\n\nconst defaultHeatmapHotColor = '#f66a0a';\nconst defaultHeatmapColdColor = '#0a60f6';\nconst escapeMarkdownRegex = /[`\\>\\#\\*\\_\\-\\+\\.]/g;\n// const sampleMarkdown = '## message `not code` *not important* _no underline_ \\n> don\\'t quote me \\n- don\\'t list me \\n+ don\\'t list me \\n1. don\\'t list me \\nnot h1 \\n=== \\nnot h2 \\n---\\n***\\n---\\n___';\nconst markdownHeaderReplacement = `${GlyphChars.ZeroWidthSpace}===`;\n\nlet computedHeatmapColor: {\n    color: string;\n    rgb: string;\n};\n\nexport class Annotations {\n    static applyHeatmap(decoration: DecorationOptions, date: Date, heatmap: ComputedHeatmap) {\n        const color = this.getHeatmapColor(date, heatmap);\n        (decoration.renderOptions!.before! as any).borderColor = color;\n    }\n\n    private static getHeatmapColor(date: Date, heatmap: ComputedHeatmap) {\n        const baseColor = heatmap.cold ? heatmap.colors.cold : heatmap.colors.hot;\n\n        const age = heatmap.computeAge(date);\n        if (age === 0) return baseColor;\n\n        if (computedHeatmapColor === undefined || computedHeatmapColor.color !== baseColor) {\n            let rgba = toRgba(baseColor);\n            if (rgba == null) {\n                rgba = toRgba(heatmap.cold ? defaultHeatmapColdColor : defaultHeatmapHotColor)!;\n            }\n\n            const [r, g, b] = rgba;\n            computedHeatmapColor = {\n                color: baseColor,\n                rgb: `${r}, ${g}, ${b}`\n            };\n        }\n\n        return `rgba(${computedHeatmapColor.rgb}, ${(1 - age / 10).toFixed(2)})`;\n    }\n\n    static getHoverMessage(\n        commit: GitCommit,\n        dateFormat: string | null,\n        remotes: GitRemote[],\n        annotationType?: FileAnnotationType,\n        line: number = 0\n    ): MarkdownString {\n        if (dateFormat === null) {\n            dateFormat = 'MMMM Do, YYYY h:mma';\n        }\n\n        const markdown = new MarkdownString(\n            CommitFormatter.fromTemplate(Container.config.hovers.detailsMarkdownFormat, commit, {\n                annotationType: annotationType,\n                dateFormat: dateFormat,\n                line: line,\n                markdown: true,\n                remotes: remotes\n            })\n        );\n        markdown.isTrusted = true;\n        return markdown;\n    }\n\n    static getHoverDiffMessage(\n        commit: GitCommit,\n        uri: GitUri,\n        chunkLine: GitDiffChunkLine | undefined\n    ): MarkdownString | undefined {\n        if (chunkLine === undefined || commit.previousSha === undefined) return undefined;\n\n        const codeDiff = this.getCodeDiff(chunkLine);\n\n        let message: string;\n        if (commit.isUncommitted) {\n            if (uri.sha !== undefined && GitService.isStagedUncommitted(uri.sha)) {\n                message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs(commit)} \"Open Changes\") &nbsp; ${\n                    GlyphChars.Dash\n                } &nbsp; [\\`${commit.previousShortSha}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                    commit.previousSha!\n                )} \"Show Commit Details\") ${GlyphChars.ArrowLeftRightLong} _${uri.shortSha}_\\n${codeDiff}`;\n            }\n            else {\n                message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs(commit)} \"Open Changes\") &nbsp; ${\n                    GlyphChars.Dash\n                } &nbsp; _uncommitted changes_\\n${codeDiff}`;\n            }\n        }\n        else {\n            message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs(commit)} \"Open Changes\") &nbsp; ${\n                GlyphChars.Dash\n            } &nbsp; [\\`${commit.previousShortSha}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                commit.previousSha!\n            )} \"Show Commit Details\") ${GlyphChars.ArrowLeftRightLong} [\\`${\n                commit.shortSha\n            }\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                commit.sha\n            )} \"Show Commit Details\")\\n${codeDiff}`;\n        }\n\n        const markdown = new MarkdownString(message);\n        markdown.isTrusted = true;\n        return markdown;\n    }\n\n    private static getCodeDiff(chunkLine: GitDiffChunkLine): string {\n        const previous = chunkLine.previous === undefined ? undefined : chunkLine.previous[0];\n        return `\\`\\`\\`\n-  ${previous === undefined || previous.line === undefined ? '' : previous.line.trim()}\n+  ${chunkLine.line === undefined ? '' : chunkLine.line.trim()}\n\\`\\`\\``;\n    }\n\n    static async changesHover(commit: GitCommit, line: number, uri: GitUri): Promise<DecorationOptions> {\n        const sha =\n            !commit.isUncommitted || (uri.sha !== undefined && GitService.isStagedUncommitted(uri.sha))\n                ? commit.previousSha\n                : undefined;\n        const chunkLine = await Container.git.getDiffForLine(uri, line, sha);\n        const message = this.getHoverDiffMessage(commit, uri, chunkLine);\n\n        return {\n            hoverMessage: message\n        } as DecorationOptions;\n    }\n\n    // static detailsHover(commit: GitCommit, dateFormat: string | null, hasRemote: boolean, annotationType?: FileAnnotationType, line: number = 0): DecorationOptions {\n    //     const message = this.getHoverMessage(commit, dateFormat, hasRemote, annotationType);\n    //     return {\n    //         hoverMessage: message\n    //     } as DecorationOptions;\n    // }\n\n    static gutter(\n        commit: GitCommit,\n        format: string,\n        dateFormatOrFormatOptions: string | null | ICommitFormatOptions,\n        renderOptions: IRenderOptions\n    ): DecorationOptions {\n        const decoration = {\n            renderOptions: {\n                before: { ...renderOptions }\n            } as DecorationInstanceRenderOptions\n        } as DecorationOptions;\n\n        if (commit.isUncommitted) {\n            decoration.renderOptions!.before!.color = renderOptions.uncommittedColor;\n        }\n\n        const message = CommitFormatter.fromTemplate(format, commit, dateFormatOrFormatOptions);\n        decoration.renderOptions!.before!.contentText = Strings.pad(message.replace(/ /g, GlyphChars.Space), 1, 1);\n\n        return decoration;\n    }\n\n    static gutterRenderOptions(\n        separateLines: boolean,\n        heatmap: IHeatmapConfig,\n        format: string,\n        options: ICommitFormatOptions\n    ): IRenderOptions {\n        // Get the character count of all the tokens, assuming there there is a cap (bail if not)\n        let chars = 0;\n        for (const token of Objects.values(options.tokenOptions!)) {\n            if (token === undefined) continue;\n\n            // If any token is uncapped, kick out and set no max\n            if (token.truncateTo == null) {\n                chars = -1;\n                break;\n            }\n\n            chars += token.truncateTo;\n        }\n\n        if (chars >= 0) {\n            // Add the chars of the template string (without tokens)\n            chars += Strings.getWidth(Strings.interpolate(format, undefined));\n            // If we have chars, add a bit of padding\n            if (chars > 0) {\n                chars += 3;\n            }\n        }\n\n        let borderStyle = undefined;\n        let borderWidth = undefined;\n        if (heatmap.enabled) {\n            borderStyle = 'solid';\n            borderWidth = heatmap.location === 'left' ? '0 0 0 2px' : '0 2px 0 0';\n        }\n\n        let width;\n        if (chars >= 0) {\n            const spacing = workspace.getConfiguration('editor').get<number>('letterSpacing');\n            if (spacing != null && spacing !== 0) {\n                width = `calc(${chars}ch + ${Math.round(chars * spacing)}px)`;\n            }\n            else {\n                width = `${chars}ch`;\n            }\n        }\n\n        return {\n            backgroundColor: new ThemeColor('gitlens.gutterBackgroundColor'),\n            borderStyle: borderStyle,\n            borderWidth: borderWidth,\n            color: new ThemeColor('gitlens.gutterForegroundColor'),\n            fontWeight: 'normal',\n            fontStyle: 'normal',\n            height: '100%',\n            margin: `0 26px -1px 0`,\n            textDecoration: separateLines ? 'overline solid rgba(0, 0, 0, .2)' : 'none',\n            width: width,\n            uncommittedColor: new ThemeColor('gitlens.gutterUncommittedForegroundColor')\n        } as IRenderOptions;\n    }\n\n    static heatmap(commit: GitCommit, heatmap: ComputedHeatmap, renderOptions: IRenderOptions): DecorationOptions {\n        const decoration = {\n            renderOptions: {\n                before: { ...renderOptions }\n            } as DecorationInstanceRenderOptions\n        } as DecorationOptions;\n\n        Annotations.applyHeatmap(decoration, commit.date, heatmap);\n\n        return decoration;\n    }\n\n    static heatmapRenderOptions(): IRenderOptions {\n        return {\n            borderStyle: 'solid',\n            borderWidth: '0 0 0 2px'\n        } as IRenderOptions;\n    }\n\n    // static hover(commit: GitCommit, renderOptions: IRenderOptions, now: number): DecorationOptions {\n    //     const decoration = {\n    //         renderOptions: { before: { ...renderOptions } }\n    //     } as DecorationOptions;\n\n    //     this.applyHeatmap(decoration, commit.date, now);\n\n    //     return decoration;\n    // }\n\n    // static hoverRenderOptions(heatmap: IHeatmapConfig): IRenderOptions {\n    //     if (!heatmap.enabled) return { before: undefined };\n\n    //     return {\n    //         borderStyle: 'solid',\n    //         borderWidth: '0 0 0 2px',\n    //         contentText: GlyphChars.ZeroWidthSpace,\n    //         height: '100%',\n    //         margin: '0 26px 0 0',\n    //         textDecoration: 'none'\n    //     } as IRenderOptions;\n    // }\n\n    static trailing(\n        commit: GitCommit,\n        format: string,\n        dateFormat: string | null,\n        scrollable: boolean = true\n    ): DecorationOptions {\n        const message = CommitFormatter.fromTemplate(format, commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: dateFormat\n        } as ICommitFormatOptions);\n\n        return {\n            renderOptions: {\n                after: {\n                    backgroundColor: new ThemeColor('gitlens.trailingLineBackgroundColor'),\n                    color: new ThemeColor('gitlens.trailingLineForegroundColor'),\n                    contentText: Strings.pad(message.replace(/ /g, GlyphChars.Space), 1, 1),\n                    fontWeight: 'normal',\n                    fontStyle: 'normal',\n                    // Pull the decoration out of the document flow if we want to be scrollable\n                    textDecoration: `none;${scrollable ? '' : ' position: absolute;'}`\n                }\n            } as DecorationInstanceRenderOptions\n        } as DecorationOptions;\n    }\n\n    // static withRange(decoration: DecorationOptions, start?: number, end?: number): DecorationOptions {\n    //     let range = decoration.range;\n    //     if (start !== undefined) {\n    //         range = range.with({\n    //             start: range.start.with({ character: start })\n    //         });\n    //     }\n\n    //     if (end !== undefined) {\n    //         range = range.with({\n    //             end: range.end.with({ character: end })\n    //         });\n    //     }\n\n    //     return { ...decoration, range: range };\n    // }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    Disposable,\n    Hover,\n    HoverProvider,\n    languages,\n    Position,\n    Range,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType\n} from 'vscode';\nimport { Container } from '../container';\nimport { GitBlame, GitCommit, GitUri } from '../git/gitService';\nimport { Arrays, Iterables } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase } from './annotationProvider';\nimport { Annotations, ComputedHeatmap } from './annotations';\n\nexport abstract class BlameAnnotationProviderBase extends AnnotationProviderBase {\n    protected _blame: Promise<GitBlame | undefined>;\n    protected _hoverProviderDisposable: Disposable | undefined;\n    protected readonly _uri: GitUri;\n\n    constructor(\n        editor: TextEditor,\n        trackedDocument: TrackedDocument<GitDocumentState>,\n        decoration: TextEditorDecorationType,\n        highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        super(editor, trackedDocument, decoration, highlightDecoration);\n\n        this._uri = trackedDocument.uri;\n        this._blame = editor.document.isDirty\n            ? Container.git.getBlameForFileContents(this._uri, editor.document.getText())\n            : Container.git.getBlameForFile(this._uri);\n\n        if (editor.document.isDirty) {\n            trackedDocument.setForceDirtyStateChangeOnNextDocumentChange();\n        }\n    }\n\n    clear() {\n        this._hoverProviderDisposable && this._hoverProviderDisposable.dispose();\n        super.clear();\n    }\n\n    async onReset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (this.editor !== undefined) {\n            this._blame = this.editor.document.isDirty\n                ? Container.git.getBlameForFileContents(this._uri, this.editor.document.getText())\n                : Container.git.getBlameForFile(this._uri);\n        }\n\n        return super.onReset(changes);\n    }\n\n    async selection(shaOrLine?: string | number, blame?: GitBlame) {\n        if (!this.highlightDecoration) return;\n\n        if (blame === undefined) {\n            blame = await this._blame;\n            if (!blame || !blame.lines.length) return;\n        }\n\n        let sha: string | undefined = undefined;\n        if (typeof shaOrLine === 'string') {\n            sha = shaOrLine;\n        }\n        else if (typeof shaOrLine === 'number') {\n            if (shaOrLine >= 0) {\n                const commitLine = blame.lines[shaOrLine];\n                sha = commitLine && commitLine.sha;\n            }\n        }\n        else {\n            sha = Iterables.first(blame.commits.values()).sha;\n        }\n\n        if (!sha) {\n            this.editor.setDecorations(this.highlightDecoration, []);\n            return;\n        }\n\n        const highlightDecorationRanges = Arrays.filterMap(blame.lines, l =>\n            l.sha === sha\n                ? this.editor.document.validateRange(new Range(l.line, 0, l.line, Number.MAX_SAFE_INTEGER))\n                : undefined\n        );\n\n        this.editor.setDecorations(this.highlightDecoration, highlightDecorationRanges);\n    }\n\n    async validate(): Promise<boolean> {\n        const blame = await this._blame;\n        return blame !== undefined && blame.lines.length !== 0;\n    }\n\n    protected async getBlame(): Promise<GitBlame | undefined> {\n        const blame = await this._blame;\n        if (blame === undefined || blame.lines.length === 0) return undefined;\n\n        return blame;\n    }\n\n    protected getComputedHeatmap(blame: GitBlame): ComputedHeatmap {\n        const dates = [];\n\n        let commit;\n        let previousSha;\n        for (const l of blame.lines) {\n            if (previousSha === l.sha) continue;\n            previousSha = l.sha;\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            dates.push(commit.date);\n        }\n\n        dates.sort((a, b) => a.getTime() - b.getTime());\n\n        const half = Math.floor(dates.length / 2);\n        const median =\n            dates.length % 2 ? dates[half].getTime() : (dates[half - 1].getTime() + dates[half].getTime()) / 2.0;\n\n        const lookup: number[] = [];\n\n        const newest = dates[dates.length - 1].getTime();\n        let step = (newest - median) / 5;\n        for (let i = 5; i > 0; i--) {\n            lookup.push(median + step * i);\n        }\n\n        lookup.push(median);\n\n        const oldest = dates[0].getTime();\n        step = (median - oldest) / 4;\n        for (let i = 1; i <= 4; i++) {\n            lookup.push(median - step * i);\n        }\n\n        const d = new Date();\n        d.setDate(d.getDate() - (Container.config.heatmap.ageThreshold || 90));\n\n        return {\n            cold: newest < d.getTime(),\n            colors: {\n                cold: Container.config.heatmap.coldColor,\n                hot: Container.config.heatmap.hotColor\n            },\n            median: median,\n            newest: newest,\n            oldest: oldest,\n            computeAge: (date: Date) => {\n                const time = date.getTime();\n                let index = 0;\n                for (let i = 0; i < lookup.length; i++) {\n                    index = i;\n                    if (time >= lookup[i]) break;\n                }\n\n                return index;\n            }\n        };\n    }\n\n    registerHoverProviders(providers: { details: boolean; changes: boolean }) {\n        if (\n            !Container.config.hovers.enabled ||\n            !Container.config.hovers.annotations.enabled ||\n            (!providers.details && !providers.changes)\n        ) {\n            return;\n        }\n\n        const subscriptions: Disposable[] = [];\n        if (providers.changes) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: this.document.uri.fsPath }, {\n                    provideHover: this.provideChangesHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n        if (providers.details) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: this.document.uri.fsPath }, {\n                    provideHover: this.provideDetailsHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n\n        this._hoverProviderDisposable = Disposable.from(...subscriptions);\n    }\n\n    async provideDetailsHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        const commit = await this.getCommitForHover(position);\n        if (commit === undefined) return undefined;\n\n        // Get the full commit message -- since blame only returns the summary\n        let logCommit: GitCommit | undefined = undefined;\n        if (!commit.isUncommitted) {\n            logCommit = await Container.git.getLogCommitForFile(commit.repoPath, commit.uri.fsPath, {\n                ref: commit.sha\n            });\n            if (logCommit !== undefined) {\n                // Preserve the previous commit from the blame commit\n                logCommit.previousFileName = commit.previousFileName;\n                logCommit.previousSha = commit.previousSha;\n            }\n        }\n\n        const message = Annotations.getHoverMessage(\n            logCommit || commit,\n            Container.config.defaultDateFormat,\n            await Container.git.getRemotes(commit.repoPath),\n            this.annotationType,\n            this.editor.selection.active.line\n        );\n        return new Hover(\n            message,\n            document.validateRange(new Range(position.line, 0, position.line, Number.MAX_SAFE_INTEGER))\n        );\n    }\n\n    async provideChangesHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        const commit = await this.getCommitForHover(position);\n        if (commit === undefined) return undefined;\n\n        const hover = await Annotations.changesHover(commit, position.line, await GitUri.fromUri(document.uri));\n        if (hover.hoverMessage === undefined) return undefined;\n\n        return new Hover(\n            hover.hoverMessage,\n            document.validateRange(new Range(position.line, 0, position.line, Number.MAX_SAFE_INTEGER))\n        );\n    }\n\n    private async getCommitForHover(position: Position): Promise<GitCommit | undefined> {\n        if (Container.config.hovers.annotations.over !== 'line' && position.character !== 0) return undefined;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return undefined;\n\n        const line = blame.lines[position.line];\n\n        return blame.commits.get(line.sha);\n    }\n}\n","'use strict';\nimport { DecorationOptions, DecorationRenderOptions, Range, TextEditorDecorationType, window } from 'vscode';\nimport { FileAnnotationType, GravatarDefaultStyle } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBlameCommit, ICommitFormatOptions } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Objects, Strings } from '../system';\nimport { Annotations } from './annotations';\nimport { BlameAnnotationProviderBase } from './blameAnnotationProvider';\n\nexport class GutterBlameAnnotationProvider extends BlameAnnotationProviderBase {\n    async onProvideAnnotation(shaOrLine?: string | number, type?: FileAnnotationType): Promise<boolean> {\n        this.annotationType = FileAnnotationType.Blame;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return false;\n\n        const start = process.hrtime();\n\n        const cfg = Container.config.blame;\n\n        // Precalculate the formatting options so we don't need to do it on each iteration\n        const tokenOptions = Strings.getTokensFromTemplate(cfg.format).reduce(\n            (map, token) => {\n                map[token.key] = token.options as ICommitFormatOptions;\n                return map;\n            },\n            {} as { [token: string]: ICommitFormatOptions }\n        );\n\n        const options: ICommitFormatOptions = {\n            dateFormat: cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat,\n            tokenOptions: tokenOptions\n        };\n\n        const avatars = cfg.avatars;\n        const gravatarDefault = Container.config.defaultGravatarsStyle;\n        const separateLines = cfg.separateLines;\n        const renderOptions = Annotations.gutterRenderOptions(separateLines, cfg.heatmap, cfg.format, options);\n\n        this.decorations = [];\n        const decorationsMap: { [sha: string]: DecorationOptions | undefined } = Object.create(null);\n        const avatarDecorationsMap:\n            | { [email: string]: { decoration: TextEditorDecorationType; ranges: Range[] } }\n            | undefined = avatars ? Object.create(null) : undefined;\n\n        let commit: GitBlameCommit | undefined;\n        let compacted = false;\n        let gutter: DecorationOptions | undefined;\n        let previousSha: string | undefined;\n\n        let computedHeatmap;\n        if (cfg.heatmap.enabled) {\n            computedHeatmap = this.getComputedHeatmap(blame);\n        }\n\n        for (const l of blame.lines) {\n            const line = l.line;\n\n            if (previousSha === l.sha) {\n                // Use a shallow copy of the previous decoration options\n                gutter = { ...gutter } as DecorationOptions;\n\n                if (cfg.compact && !compacted) {\n                    // Since we are wiping out the contextText make sure to copy the objects\n                    gutter.renderOptions = {\n                        before: {\n                            ...gutter.renderOptions!.before,\n                            contentText: GlyphChars.Space.repeat(\n                                Strings.getWidth(gutter.renderOptions!.before!.contentText!)\n                            )\n                        }\n                    };\n\n                    if (separateLines) {\n                        gutter.renderOptions!.before!.textDecoration = 'none';\n                    }\n\n                    compacted = true;\n                }\n\n                gutter.range = new Range(line, 0, line, 0);\n\n                this.decorations.push(gutter);\n\n                if (avatars && !cfg.compact && commit !== undefined && commit.email !== undefined) {\n                    this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n                }\n\n                continue;\n            }\n\n            compacted = false;\n            previousSha = l.sha;\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            gutter = decorationsMap[l.sha];\n            if (gutter !== undefined) {\n                gutter = {\n                    ...gutter,\n                    range: new Range(line, 0, line, 0)\n                } as DecorationOptions;\n\n                this.decorations.push(gutter);\n\n                if (avatars && commit.email !== undefined) {\n                    this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n                }\n\n                continue;\n            }\n\n            gutter = Annotations.gutter(commit, cfg.format, options, renderOptions);\n\n            if (computedHeatmap !== undefined) {\n                Annotations.applyHeatmap(gutter, commit.date, computedHeatmap);\n            }\n\n            gutter.range = new Range(line, 0, line, 0);\n\n            this.decorations.push(gutter);\n\n            if (avatars && commit.email !== undefined) {\n                this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n            }\n\n            decorationsMap[l.sha] = gutter;\n        }\n\n        if (this.decorations.length) {\n            this.editor.setDecorations(this.decoration!, this.decorations);\n\n            if (avatars) {\n                this.additionalDecorations = [];\n                for (const d of Objects.values(avatarDecorationsMap!)) {\n                    this.additionalDecorations.push(d);\n                    this.editor.setDecorations(d.decoration, d.ranges);\n                }\n            }\n        }\n\n        Logger.log(`${Strings.getDurationMilliseconds(start)} ms to compute gutter blame annotations`);\n\n        this.registerHoverProviders(Container.config.hovers.annotations);\n        void this.selection(shaOrLine, blame);\n        return true;\n    }\n\n    addOrUpdateGravatarDecoration(\n        commit: GitBlameCommit,\n        range: Range,\n        gravatarDefault: GravatarDefaultStyle,\n        map: { [email: string]: { decoration: TextEditorDecorationType; ranges: Range[] } }\n    ) {\n        const avatarDecoration = map[commit.email!];\n        if (avatarDecoration !== undefined) {\n            avatarDecoration.ranges.push(range);\n\n            return;\n        }\n\n        map[commit.email!] = {\n            decoration: window.createTextEditorDecorationType({\n                gutterIconPath: commit.getGravatarUri(gravatarDefault),\n                gutterIconSize: '16px 16px'\n            } as DecorationRenderOptions),\n            ranges: [range]\n        };\n    }\n}\n","'use strict';\nimport { DecorationOptions, Range } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitBlameCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Strings } from '../system';\nimport { Annotations } from './annotations';\nimport { BlameAnnotationProviderBase } from './blameAnnotationProvider';\n\nexport class HeatmapBlameAnnotationProvider extends BlameAnnotationProviderBase {\n    async onProvideAnnotation(shaOrLine?: string | number, type?: FileAnnotationType): Promise<boolean> {\n        this.annotationType = FileAnnotationType.Heatmap;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return false;\n\n        const start = process.hrtime();\n\n        const renderOptions = Annotations.heatmapRenderOptions();\n\n        this.decorations = [];\n        const decorationsMap: { [sha: string]: DecorationOptions | undefined } = Object.create(null);\n\n        let commit: GitBlameCommit | undefined;\n        let heatmap: DecorationOptions | undefined;\n\n        const computedHeatmap = this.getComputedHeatmap(blame);\n\n        for (const l of blame.lines) {\n            const line = l.line;\n\n            heatmap = decorationsMap[l.sha];\n            if (heatmap !== undefined) {\n                heatmap = {\n                    ...heatmap,\n                    range: new Range(line, 0, line, 0)\n                } as DecorationOptions;\n\n                this.decorations.push(heatmap);\n\n                continue;\n            }\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            heatmap = Annotations.heatmap(commit, computedHeatmap, renderOptions);\n            heatmap.range = new Range(line, 0, line, 0);\n\n            this.decorations.push(heatmap);\n            decorationsMap[l.sha] = heatmap;\n        }\n\n        if (this.decorations.length) {\n            this.editor.setDecorations(this.decoration!, this.decorations);\n        }\n\n        Logger.log(`${Strings.getDurationMilliseconds(start)} ms to compute heatmap annotations`);\n\n        this.registerHoverProviders(Container.config.hovers.annotations);\n        void this.selection(shaOrLine, blame);\n        return true;\n    }\n}\n","'use strict';\nimport { DecorationOptions, MarkdownString, Position, Range, TextEditor, TextEditorDecorationType } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Strings } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase } from './annotationProvider';\nimport { Annotations } from './annotations';\n\nexport class RecentChangesAnnotationProvider extends AnnotationProviderBase {\n    private readonly _uri: GitUri;\n\n    constructor(\n        editor: TextEditor,\n        trackedDocument: TrackedDocument<GitDocumentState>,\n        decoration: TextEditorDecorationType,\n        highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        super(editor, trackedDocument, decoration, highlightDecoration);\n\n        this._uri = trackedDocument.uri;\n    }\n\n    async onProvideAnnotation(shaOrLine?: string | number): Promise<boolean> {\n        this.annotationType = FileAnnotationType.RecentChanges;\n\n        const commit = await Container.git.getRecentLogCommitForFile(this._uri.repoPath, this._uri.fsPath);\n        if (commit === undefined) return false;\n\n        const diff = await Container.git.getDiffForFile(this._uri, commit.previousSha);\n        if (diff === undefined) return false;\n\n        const start = process.hrtime();\n\n        const cfg = Container.config;\n        const dateFormat = cfg.defaultDateFormat;\n\n        this.decorations = [];\n\n        for (const chunk of diff.chunks) {\n            let count = chunk.currentPosition.start - 2;\n            for (const line of chunk.lines) {\n                if (line.line === undefined) continue;\n\n                count++;\n\n                if (line.state === 'unchanged') continue;\n\n                const range = this.editor.document.validateRange(\n                    new Range(new Position(count, 0), new Position(count, Number.MAX_SAFE_INTEGER))\n                );\n\n                let message: MarkdownString | undefined = undefined;\n\n                if (cfg.hovers.enabled && cfg.hovers.annotations.enabled) {\n                    if (cfg.hovers.annotations.details) {\n                        this.decorations.push({\n                            hoverMessage: Annotations.getHoverMessage(\n                                commit,\n                                dateFormat,\n                                await Container.git.getRemotes(commit.repoPath),\n                                this.annotationType,\n                                this.editor.selection.active.line\n                            ),\n                            range: range\n                        } as DecorationOptions);\n                    }\n\n                    if (cfg.hovers.annotations.changes) {\n                        message = Annotations.getHoverDiffMessage(commit, this._uri, line);\n                        if (message === undefined) continue;\n                    }\n                }\n\n                this.decorations.push({\n                    hoverMessage: message,\n                    range: range\n                } as DecorationOptions);\n            }\n        }\n\n        this.editor.setDecorations(this.decoration, this.decorations);\n\n        Logger.log(`${Strings.getDurationMilliseconds(start)} ms to compute recent changes annotations`);\n\n        return true;\n    }\n\n    async selection(shaOrLine?: string | number): Promise<void> {}\n\n    async validate(): Promise<boolean> {\n        return true;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    ConfigurationChangeEvent,\n    DecorationRangeBehavior,\n    DecorationRenderOptions,\n    Disposable,\n    Event,\n    EventEmitter,\n    OverviewRulerLane,\n    Progress,\n    ProgressLocation,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType,\n    TextEditorViewColumnChangeEvent,\n    ThemeColor,\n    window,\n    workspace\n} from 'vscode';\nimport { AnnotationsToggleMode, configuration, FileAnnotationType, HighlightLocations } from '../configuration';\nimport { CommandContext, GlyphChars, isTextEditor, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { KeyboardScope, KeyCommand, Keys } from '../keyboard';\nimport { Logger } from '../logger';\nimport { Functions, Iterables } from '../system';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyStateChangeEvent,\n    GitDocumentState\n} from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase, AnnotationStatus, TextEditorCorrelationKey } from './annotationProvider';\nimport { GutterBlameAnnotationProvider } from './gutterBlameAnnotationProvider';\nimport { HeatmapBlameAnnotationProvider } from './heatmapBlameAnnotationProvider';\nimport { RecentChangesAnnotationProvider } from './recentChangesAnnotationProvider';\n\nexport enum AnnotationClearReason {\n    User = 'User',\n    BlameabilityChanged = 'BlameabilityChanged',\n    ColumnChanged = 'ColumnChanged',\n    Disposing = 'Disposing',\n    DocumentChanged = 'DocumentChanged',\n    DocumentClosed = 'DocumentClosed'\n}\n\nexport const Decorations = {\n    blameAnnotation: window.createTextEditorDecorationType({\n        rangeBehavior: DecorationRangeBehavior.ClosedOpen,\n        textDecoration: 'none'\n    } as DecorationRenderOptions),\n    blameHighlight: undefined as TextEditorDecorationType | undefined,\n    heatmapAnnotation: window.createTextEditorDecorationType({\n        before: {\n            contentText: GlyphChars.ZeroWidthSpace,\n            height: '100%',\n            margin: '0 26px -1px 0'\n        }\n    } as DecorationRenderOptions),\n    heatmapHighlight: undefined as TextEditorDecorationType | undefined,\n    recentChangesAnnotation: undefined as TextEditorDecorationType | undefined,\n    recentChangesHighlight: undefined as TextEditorDecorationType | undefined\n};\n\nexport class FileAnnotationController implements Disposable {\n    private _onDidToggleAnnotations = new EventEmitter<void>();\n    get onDidToggleAnnotations(): Event<void> {\n        return this._onDidToggleAnnotations.event;\n    }\n\n    private _annotationsDisposable: Disposable | undefined;\n    private _annotationProviders: Map<TextEditorCorrelationKey, AnnotationProviderBase> = new Map();\n    private _disposable: Disposable;\n    private _editor: TextEditor | undefined;\n    private _keyboardScope: KeyboardScope | undefined = undefined;\n    private readonly _toggleModes: Map<FileAnnotationType, AnnotationsToggleMode>;\n    private _annotationType: FileAnnotationType | undefined = undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n\n        this._toggleModes = new Map();\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        void this.clearAll();\n\n        Decorations.blameAnnotation && Decorations.blameAnnotation.dispose();\n        Decorations.blameHighlight && Decorations.blameHighlight.dispose();\n\n        this._annotationsDisposable && this._annotationsDisposable.dispose();\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const cfg = Container.config;\n\n        if (configuration.changed(e, configuration.name('blame')('highlight').value)) {\n            Decorations.blameHighlight && Decorations.blameHighlight.dispose();\n\n            const cfgHighlight = cfg.blame.highlight;\n\n            if (cfgHighlight.enabled) {\n                Decorations.blameHighlight = window.createTextEditorDecorationType({\n                    gutterIconSize: 'contain',\n                    isWholeLine: true,\n                    overviewRulerLane: OverviewRulerLane.Right,\n                    backgroundColor: cfgHighlight.locations.includes(HighlightLocations.Line)\n                        ? new ThemeColor('gitlens.lineHighlightBackgroundColor')\n                        : undefined,\n                    overviewRulerColor: cfgHighlight.locations.includes(HighlightLocations.Overview)\n                        ? new ThemeColor('gitlens.lineHighlightOverviewRulerColor')\n                        : undefined,\n                    dark: {\n                        gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                            ? Container.context.asAbsolutePath('images/dark/highlight-gutter.svg')\n                            : undefined\n                    },\n                    light: {\n                        gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                            ? Container.context.asAbsolutePath('images/light/highlight-gutter.svg')\n                            : undefined\n                    }\n                });\n            }\n            else {\n                Decorations.blameHighlight = undefined;\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('recentChanges')('highlight').value)) {\n            Decorations.recentChangesAnnotation && Decorations.recentChangesAnnotation.dispose();\n\n            const cfgHighlight = cfg.recentChanges.highlight;\n\n            Decorations.recentChangesAnnotation = window.createTextEditorDecorationType({\n                gutterIconSize: 'contain',\n                isWholeLine: true,\n                overviewRulerLane: OverviewRulerLane.Right,\n                backgroundColor: cfgHighlight.locations.includes(HighlightLocations.Line)\n                    ? new ThemeColor('gitlens.lineHighlightBackgroundColor')\n                    : undefined,\n                overviewRulerColor: cfgHighlight.locations.includes(HighlightLocations.Overview)\n                    ? new ThemeColor('gitlens.lineHighlightOverviewRulerColor')\n                    : undefined,\n                dark: {\n                    gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                        ? Container.context.asAbsolutePath('images/dark/highlight-gutter.svg')\n                        : undefined\n                },\n                light: {\n                    gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                        ? Container.context.asAbsolutePath('images/light/highlight-gutter.svg')\n                        : undefined\n                }\n            });\n        }\n\n        const initializing = configuration.initializing(e);\n\n        if (configuration.changed(e, configuration.name('blame')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.Blame, cfg.blame.toggleMode);\n            if (!initializing && cfg.blame.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('heatmap')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.Heatmap, cfg.heatmap.toggleMode);\n            if (!initializing && cfg.heatmap.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('recentChanges')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.RecentChanges, cfg.recentChanges.toggleMode);\n            if (!initializing && cfg.recentChanges.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (initializing) return;\n\n        if (\n            configuration.changed(e, configuration.name('blame').value) ||\n            configuration.changed(e, configuration.name('recentChanges').value) ||\n            configuration.changed(e, configuration.name('heatmap').value) ||\n            configuration.changed(e, configuration.name('hovers').value)\n        ) {\n            // Since the configuration has changed -- reset any visible annotations\n            for (const provider of this._annotationProviders.values()) {\n                if (provider === undefined) continue;\n\n                if (provider.annotationType === FileAnnotationType.RecentChanges) {\n                    provider.reset({\n                        decoration: Decorations.recentChangesAnnotation!,\n                        highlightDecoration: Decorations.recentChangesHighlight\n                    });\n                }\n                else if (provider.annotationType === FileAnnotationType.Blame) {\n                    provider.reset({\n                        decoration: Decorations.blameAnnotation,\n                        highlightDecoration: Decorations.blameHighlight\n                    });\n                }\n                else {\n                    void this.show(provider.editor, FileAnnotationType.Heatmap);\n                }\n            }\n        }\n    }\n\n    private async onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        this._editor = editor;\n        // Logger.log('AnnotationController.onActiveTextEditorChanged', editor && editor.document.uri.fsPath);\n\n        if (this.isInWindowToggle()) {\n            await this.show(editor, this._annotationType!);\n\n            return;\n        }\n\n        const provider = this.getProvider(editor);\n        if (provider === undefined) {\n            setCommandContext(CommandContext.AnnotationStatus, undefined);\n            void this.detachKeyboardHook();\n        }\n        else {\n            setCommandContext(CommandContext.AnnotationStatus, provider.status);\n            void this.attachKeyboardHook();\n        }\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        // Only care if we are becoming un-blameable\n        if (e.blameable) return;\n\n        const editor = window.activeTextEditor;\n        if (editor === undefined) return;\n\n        void this.clear(editor, AnnotationClearReason.BlameabilityChanged);\n    }\n\n    private onDirtyStateChanged(e: DocumentDirtyStateChangeEvent<GitDocumentState>) {\n        for (const [key, p] of this._annotationProviders) {\n            if (!e.document.is(p.document)) continue;\n\n            void this.clearCore(key, AnnotationClearReason.DocumentChanged);\n        }\n    }\n\n    private onTextDocumentClosed(document: TextDocument) {\n        if (!Container.git.isTrackable(document.uri)) return;\n\n        for (const [key, p] of this._annotationProviders) {\n            if (p.document !== document) continue;\n\n            void this.clearCore(key, AnnotationClearReason.DocumentClosed);\n        }\n    }\n\n    private onTextEditorViewColumnChanged(e: TextEditorViewColumnChangeEvent) {\n        // FYI https://github.com/Microsoft/vscode/issues/35602\n        const provider = this.getProvider(e.textEditor);\n        if (provider === undefined) {\n            // If we don't find an exact match, do a fuzzy match (since we can't properly track editors)\n            const fuzzyProvider = Iterables.find(\n                this._annotationProviders.values(),\n                p => p.editor.document === e.textEditor.document\n            );\n            if (fuzzyProvider == null) return;\n\n            void this.clearCore(fuzzyProvider.correlationKey, AnnotationClearReason.ColumnChanged);\n\n            return;\n        }\n\n        void provider.restore(e.textEditor);\n    }\n\n    private onVisibleTextEditorsChanged(editors: TextEditor[]) {\n        let provider: AnnotationProviderBase | undefined;\n        for (const e of editors) {\n            provider = this.getProvider(e);\n            if (provider === undefined) continue;\n\n            void provider.restore(e);\n        }\n    }\n\n    isInWindowToggle(): boolean {\n        return this.getToggleMode(this._annotationType) === AnnotationsToggleMode.Window;\n    }\n\n    private getToggleMode(annotationType: FileAnnotationType | undefined): AnnotationsToggleMode {\n        if (annotationType === undefined) return AnnotationsToggleMode.File;\n\n        return this._toggleModes.get(annotationType) || AnnotationsToggleMode.File;\n    }\n\n    clear(editor: TextEditor, reason: AnnotationClearReason = AnnotationClearReason.User) {\n        if (this.isInWindowToggle()) {\n            return this.clearAll();\n        }\n\n        return this.clearCore(AnnotationProviderBase.getCorrelationKey(editor), reason);\n    }\n\n    async clearAll() {\n        this._annotationType = undefined;\n        for (const [key] of this._annotationProviders) {\n            await this.clearCore(key, AnnotationClearReason.Disposing);\n        }\n    }\n\n    async getAnnotationType(editor: TextEditor | undefined): Promise<FileAnnotationType | undefined> {\n        const provider = this.getProvider(editor);\n        if (provider === undefined) return undefined;\n\n        const trackedDocument = await Container.tracker.get(editor!.document);\n        if (trackedDocument === undefined || !trackedDocument.isBlameable) return undefined;\n\n        return provider.annotationType;\n    }\n\n    getProvider(editor: TextEditor | undefined): AnnotationProviderBase | undefined {\n        if (editor === undefined || editor.document === undefined) return undefined;\n        return this._annotationProviders.get(AnnotationProviderBase.getCorrelationKey(editor));\n    }\n\n    async show(\n        editor: TextEditor | undefined,\n        type: FileAnnotationType,\n        shaOrLine?: string | number\n    ): Promise<boolean> {\n        if (this.getToggleMode(type) === AnnotationsToggleMode.Window) {\n            let first = this._annotationType === undefined;\n            const reset = !first && this._annotationType !== type;\n\n            this._annotationType = type;\n\n            if (reset) {\n                await this.clearAll();\n                first = true;\n            }\n\n            if (first) {\n                for (const e of window.visibleTextEditors) {\n                    if (e === editor) continue;\n\n                    void this.show(e, type);\n                }\n            }\n        }\n\n        if (editor === undefined) return false; // || editor.viewColumn === undefined) return false;\n        this._editor = editor;\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable) return false;\n\n        const currentProvider = this.getProvider(editor);\n        if (currentProvider !== undefined && currentProvider.annotationType === type) {\n            await currentProvider.selection(shaOrLine);\n            return true;\n        }\n\n        const provider = await window.withProgress(\n            { location: ProgressLocation.Window },\n            async (progress: Progress<{ message: string }>) => {\n                await setCommandContext(CommandContext.AnnotationStatus, AnnotationStatus.Computing);\n\n                const computingAnnotations = this.showAnnotationsCore(\n                    currentProvider,\n                    editor,\n                    type,\n                    shaOrLine,\n                    progress\n                );\n                const provider = await computingAnnotations;\n\n                if (editor === this._editor) {\n                    await setCommandContext(CommandContext.AnnotationStatus, provider && provider.status);\n                }\n\n                return computingAnnotations;\n            }\n        );\n\n        return provider !== undefined;\n    }\n\n    async toggle(\n        editor: TextEditor | undefined,\n        type: FileAnnotationType,\n        shaOrLine?: string | number,\n        on?: boolean\n    ): Promise<boolean> {\n        if (editor !== undefined) {\n            const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n            if (\n                (type === FileAnnotationType.RecentChanges && !trackedDocument.isTracked) ||\n                !trackedDocument.isBlameable\n            ) {\n                return false;\n            }\n        }\n\n        const provider = this.getProvider(editor);\n        if (provider === undefined) return this.show(editor!, type, shaOrLine);\n\n        const reopen = provider.annotationType !== type;\n        if (on === true && !reopen) return true;\n\n        if (this.isInWindowToggle()) {\n            await this.clearAll();\n        }\n        else {\n            await this.clearCore(provider.correlationKey, AnnotationClearReason.User);\n        }\n\n        if (!reopen) return false;\n\n        return this.show(editor, type, shaOrLine);\n    }\n\n    private async attachKeyboardHook() {\n        // Allows pressing escape to exit the annotations\n        if (this._keyboardScope === undefined) {\n            this._keyboardScope = await Container.keyboard.beginScope({\n                escape: {\n                    onDidPressKey: async (key: Keys) => {\n                        const e = this._editor;\n                        if (e === undefined) return undefined;\n\n                        await this.clear(e, AnnotationClearReason.User);\n                        return undefined;\n                    }\n                } as KeyCommand\n            });\n        }\n    }\n\n    private async clearCore(key: TextEditorCorrelationKey, reason: AnnotationClearReason) {\n        const provider = this._annotationProviders.get(key);\n        if (provider === undefined) return;\n\n        Logger.log(`${reason}:`, `Clear annotations for ${key}`);\n\n        this._annotationProviders.delete(key);\n        provider.dispose();\n\n        if (this._annotationProviders.size === 0 || key === AnnotationProviderBase.getCorrelationKey(this._editor)) {\n            await setCommandContext(CommandContext.AnnotationStatus, undefined);\n            await this.detachKeyboardHook();\n        }\n\n        if (this._annotationProviders.size === 0) {\n            Logger.log(`Remove all listener registrations for annotations`);\n\n            this._annotationsDisposable && this._annotationsDisposable.dispose();\n            this._annotationsDisposable = undefined;\n        }\n\n        this._onDidToggleAnnotations.fire();\n    }\n\n    private async detachKeyboardHook() {\n        if (this._keyboardScope === undefined) return;\n\n        await this._keyboardScope.dispose();\n        this._keyboardScope = undefined;\n    }\n\n    private async showAnnotationsCore(\n        currentProvider: AnnotationProviderBase | undefined,\n        editor: TextEditor,\n        type: FileAnnotationType,\n        shaOrLine?: string | number,\n        progress?: Progress<{ message: string }>\n    ): Promise<AnnotationProviderBase | undefined> {\n        if (progress !== undefined) {\n            let annotationsLabel = 'annotations';\n            switch (type) {\n                case FileAnnotationType.Blame:\n                    annotationsLabel = 'blame annotations';\n                    break;\n\n                case FileAnnotationType.Heatmap:\n                    annotationsLabel = 'heatmap annotations';\n                    break;\n\n                case FileAnnotationType.RecentChanges:\n                    annotationsLabel = 'recent changes annotations';\n                    break;\n            }\n\n            progress!.report({\n                message: `Computing ${annotationsLabel} for ${paths.basename(editor.document.fileName)}`\n            });\n        }\n\n        // Allows pressing escape to exit the annotations\n        await this.attachKeyboardHook();\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n\n        let provider: AnnotationProviderBase | undefined = undefined;\n        switch (type) {\n            case FileAnnotationType.Blame:\n                provider = new GutterBlameAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.blameAnnotation,\n                    Decorations.blameHighlight\n                );\n                break;\n\n            case FileAnnotationType.Heatmap:\n                provider = new HeatmapBlameAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.heatmapAnnotation,\n                    Decorations.heatmapHighlight\n                );\n                break;\n\n            case FileAnnotationType.RecentChanges:\n                provider = new RecentChangesAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.recentChangesAnnotation!,\n                    Decorations.recentChangesHighlight\n                );\n                break;\n        }\n        if (provider === undefined || !(await provider.validate())) return undefined;\n\n        if (currentProvider !== undefined) {\n            await this.clearCore(currentProvider.correlationKey, AnnotationClearReason.User);\n        }\n\n        if (!this._annotationsDisposable && this._annotationProviders.size === 0) {\n            Logger.log(`Add listener registrations for annotations`);\n\n            this._annotationsDisposable = Disposable.from(\n                window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveTextEditorChanged, 50), this),\n                window.onDidChangeTextEditorViewColumn(this.onTextEditorViewColumnChanged, this),\n                window.onDidChangeVisibleTextEditors(Functions.debounce(this.onVisibleTextEditorsChanged, 50), this),\n                workspace.onDidCloseTextDocument(this.onTextDocumentClosed, this),\n                Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n                Container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged, this)\n            );\n        }\n\n        this._annotationProviders.set(provider.correlationKey, provider);\n        if (await provider.provideAnnotation(shaOrLine)) {\n            this._onDidToggleAnnotations.fire();\n            return provider;\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport {\n    ConfigurationChangeEvent,\n    debug,\n    DecorationRangeBehavior,\n    DecorationRenderOptions,\n    Disposable,\n    Range,\n    TextEditor,\n    TextEditorDecorationType,\n    window\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\nimport { Annotations } from './annotations';\n\nconst annotationDecoration: TextEditorDecorationType = window.createTextEditorDecorationType({\n    after: {\n        margin: '0 0 0 3em',\n        textDecoration: 'none'\n    },\n    rangeBehavior: DecorationRangeBehavior.ClosedOpen\n} as DecorationRenderOptions);\n\nexport class LineAnnotationController implements Disposable {\n    private _disposable: Disposable;\n    private _debugSessionEndDisposable: Disposable | undefined;\n    private _editor: TextEditor | undefined;\n    private _enabled: boolean = false;\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            Container.fileAnnotations.onDidToggleAnnotations(this.onFileAnnotationsToggled, this),\n            debug.onDidStartDebugSession(this.onDebugSessionStarted, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.clearAnnotations(this._editor);\n\n        this._debugSessionEndDisposable && this._debugSessionEndDisposable.dispose();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (!configuration.changed(e, configuration.name('currentLine').value)) return;\n\n        if (configuration.changed(e, configuration.name('currentLine')('enabled').value)) {\n            if (Container.config.currentLine.enabled) {\n                this._enabled = true;\n                this.resume();\n            }\n            else {\n                this._enabled = false;\n                this.setLineTracker(false);\n            }\n        }\n\n        void this.refresh(window.activeTextEditor);\n    }\n\n    private _suspended?: 'debugging' | 'user';\n    get suspended() {\n        return !this._enabled || this._suspended !== undefined;\n    }\n\n    resume(reason: 'debugging' | 'user' = 'user') {\n        this.setLineTracker(true);\n\n        switch (reason) {\n            case 'debugging':\n                if (this._suspended !== 'user') {\n                    this._suspended = undefined;\n                    return true;\n                }\n                break;\n\n            case 'user':\n                if (this._suspended !== undefined) {\n                    this._suspended = undefined;\n                    return true;\n                }\n                break;\n        }\n\n        return false;\n    }\n\n    suspend(reason: 'debugging' | 'user' = 'user') {\n        this.setLineTracker(false);\n\n        if (this._suspended !== 'user') {\n            this._suspended = reason;\n            return true;\n        }\n\n        return false;\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        if (!e.pending && e.lines !== undefined) {\n            void this.refresh(e.editor);\n\n            return;\n        }\n\n        this.clear(e.editor);\n    }\n\n    private onDebugSessionStarted() {\n        if (this._debugSessionEndDisposable === undefined) {\n            this._debugSessionEndDisposable = debug.onDidTerminateDebugSession(this.onDebugSessionEnded, this);\n        }\n\n        if (this.suspend('debugging')) {\n            void this.refresh(window.activeTextEditor);\n        }\n    }\n\n    private onDebugSessionEnded() {\n        if (this._debugSessionEndDisposable !== undefined) {\n            this._debugSessionEndDisposable.dispose();\n            this._debugSessionEndDisposable = undefined;\n        }\n\n        if (this.resume('debugging')) {\n            void this.refresh(window.activeTextEditor);\n        }\n    }\n\n    private onFileAnnotationsToggled() {\n        void this.refresh(window.activeTextEditor);\n    }\n\n    clear(editor: TextEditor | undefined) {\n        if (this._editor !== editor && this._editor !== undefined) {\n            this.clearAnnotations(this._editor);\n        }\n        this.clearAnnotations(editor);\n    }\n\n    async toggle(editor: TextEditor | undefined) {\n        this._enabled = !(this._enabled && !this.suspended);\n\n        if (this._enabled) {\n            if (this.resume('user')) {\n                await this.refresh(editor);\n            }\n        }\n        else {\n            if (this.suspend('user')) {\n                await this.refresh(editor);\n            }\n        }\n    }\n\n    private clearAnnotations(editor: TextEditor | undefined) {\n        if (editor === undefined || (editor as any)._disposed === true) return;\n\n        editor.setDecorations(annotationDecoration, []);\n    }\n\n    private async refresh(editor: TextEditor | undefined) {\n        if (editor === undefined && this._editor === undefined) return;\n\n        const lines = Container.lineTracker.lines;\n        if (editor === undefined || lines === undefined || !isTextEditor(editor)) return this.clear(this._editor);\n\n        if (this._editor !== editor) {\n            // Clear any annotations on the previously active editor\n            this.clear(this._editor);\n\n            this._editor = editor;\n        }\n\n        const cfg = Container.config.currentLine;\n        if (this.suspended) return this.clear(editor);\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable && this.suspended) return this.clear(editor);\n\n        // Make sure the editor hasn't died since the await above and that we are still on the same line(s)\n        if (editor.document === undefined || !Container.lineTracker.includesAll(lines)) return;\n\n        const scrollable = Container.config.currentLine.scrollable;\n\n        const decorations = [];\n        for (const l of lines) {\n            const state = Container.lineTracker.getState(l);\n            if (state === undefined || state.commit === undefined) continue;\n\n            const decoration = Annotations.trailing(\n                state.commit,\n                cfg.format,\n                cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat,\n                scrollable\n            );\n            decoration.range = editor.document.validateRange(\n                new Range(l, Number.MAX_SAFE_INTEGER, l, Number.MAX_SAFE_INTEGER)\n            );\n            decorations.push(decoration);\n        }\n\n        editor.setDecorations(annotationDecoration, decorations);\n    }\n\n    private setLineTracker(enabled: boolean) {\n        if (enabled) {\n            if (!Container.lineTracker.isSubscribed(this)) {\n                Container.lineTracker.start(\n                    this,\n                    Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n                );\n            }\n\n            return;\n        }\n\n        Container.lineTracker.stop(this);\n    }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    CodeLens,\n    CodeLensProvider,\n    Command,\n    commands,\n    DocumentSelector,\n    DocumentSymbol,\n    Event,\n    EventEmitter,\n    ExtensionContext,\n    Location,\n    Position,\n    Range,\n    SymbolInformation,\n    SymbolKind,\n    TextDocument,\n    Uri\n} from 'vscode';\nimport {\n    Commands,\n    DiffWithPreviousCommandArgs,\n    ShowQuickCommitDetailsCommandArgs,\n    ShowQuickCommitFileDetailsCommandArgs,\n    ShowQuickFileHistoryCommandArgs\n} from '../commands';\nimport {\n    CodeLensCommand,\n    CodeLensConfig,\n    CodeLensLanguageScope,\n    CodeLensScopes,\n    configuration\n} from '../configuration';\nimport { BuiltInCommands, DocumentSchemes } from '../constants';\nimport { Container } from '../container';\nimport { GitBlame, GitBlameCommit, GitBlameLines, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Functions, Iterables } from '../system';\nimport { DocumentTracker, GitDocumentState } from '../trackers/gitDocumentTracker';\n\nexport class GitRecentChangeCodeLens extends CodeLens {\n    constructor(\n        public readonly languageId: string,\n        public readonly symbol: DocumentSymbol | SymbolInformation,\n        public readonly uri: GitUri | undefined,\n        private readonly blame: (() => GitBlameLines | undefined) | undefined,\n        public readonly blameRange: Range,\n        public readonly isFullRange: boolean,\n        range: Range,\n        public readonly desiredCommand: CodeLensCommand,\n        command?: Command | undefined\n    ) {\n        super(range, command);\n    }\n\n    getBlame(): GitBlameLines | undefined {\n        return this.blame && this.blame();\n    }\n}\n\nexport class GitAuthorsCodeLens extends CodeLens {\n    constructor(\n        public readonly languageId: string,\n        public readonly symbol: DocumentSymbol | SymbolInformation,\n        public readonly uri: GitUri | undefined,\n        private readonly blame: () => GitBlameLines | undefined,\n        public readonly blameRange: Range,\n        public readonly isFullRange: boolean,\n        range: Range,\n        public readonly desiredCommand: CodeLensCommand\n    ) {\n        super(range);\n    }\n\n    getBlame(): GitBlameLines | undefined {\n        return this.blame();\n    }\n}\n\nexport class GitCodeLensProvider implements CodeLensProvider {\n    private _onDidChangeCodeLenses = new EventEmitter<void>();\n    get onDidChangeCodeLenses(): Event<void> {\n        return this._onDidChangeCodeLenses.event;\n    }\n\n    static selector: DocumentSelector = [\n        { scheme: DocumentSchemes.File },\n        { scheme: DocumentSchemes.Vsls },\n        { scheme: DocumentSchemes.Git },\n        { scheme: DocumentSchemes.GitLens }\n    ];\n\n    constructor(\n        context: ExtensionContext,\n        private readonly _git: GitService,\n        private readonly _tracker: DocumentTracker<GitDocumentState>\n    ) {}\n\n    reset(reason?: 'idle' | 'saved') {\n        this._onDidChangeCodeLenses.fire();\n    }\n\n    async provideCodeLenses(document: TextDocument, token: CancellationToken): Promise<CodeLens[]> {\n        const trackedDocument = await this._tracker.getOrAdd(document);\n        if (!trackedDocument.isBlameable) return [];\n\n        let dirty = false;\n        if (document.isDirty) {\n            // Only allow dirty blames if we are idle\n            if (trackedDocument.isDirtyIdle) {\n                const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n                if (maxLines > 0 && document.lineCount > maxLines) {\n                    dirty = true;\n                }\n            }\n            else {\n                dirty = true;\n            }\n        }\n\n        const cfg = configuration.get<CodeLensConfig>(configuration.name('codeLens').value, document.uri);\n\n        let languageScope =\n            cfg.scopesByLanguage &&\n            cfg.scopesByLanguage.find(\n                ll => ll.language !== undefined && ll.language.toLowerCase() === document.languageId\n            );\n        if (languageScope == null) {\n            languageScope = {\n                language: undefined\n            } as CodeLensLanguageScope;\n        }\n        if (languageScope.scopes == null) {\n            languageScope.scopes = cfg.scopes;\n        }\n        if (languageScope.symbolScopes == null) {\n            languageScope.symbolScopes = cfg.symbolScopes;\n        }\n\n        languageScope.symbolScopes =\n            languageScope.symbolScopes != null\n                ? (languageScope.symbolScopes = languageScope.symbolScopes.map(s => s.toLowerCase()))\n                : [];\n\n        const lenses: CodeLens[] = [];\n\n        const gitUri = trackedDocument.uri;\n        let blame: GitBlame | undefined;\n        let symbols;\n\n        if (!dirty) {\n            if (token.isCancellationRequested) return lenses;\n\n            if (languageScope.scopes.length === 1 && languageScope.scopes.includes(CodeLensScopes.Document)) {\n                blame = document.isDirty\n                    ? await this._git.getBlameForFileContents(gitUri, document.getText())\n                    : await this._git.getBlameForFile(gitUri);\n            }\n            else {\n                [blame, symbols] = await Promise.all([\n                    document.isDirty\n                        ? this._git.getBlameForFileContents(gitUri, document.getText())\n                        : this._git.getBlameForFile(gitUri),\n                    commands.executeCommand(BuiltInCommands.ExecuteDocumentSymbolProvider, document.uri) as Promise<\n                        SymbolInformation[]\n                    >\n                ]);\n            }\n\n            if (blame === undefined || blame.lines.length === 0) return lenses;\n        }\n        else {\n            if (languageScope.scopes.length !== 1 || !languageScope.scopes.includes(CodeLensScopes.Document)) {\n                symbols = (await commands.executeCommand(\n                    BuiltInCommands.ExecuteDocumentSymbolProvider,\n                    document.uri\n                )) as SymbolInformation[];\n            }\n        }\n\n        if (token.isCancellationRequested) return lenses;\n\n        const documentRangeFn = Functions.once(() => document.validateRange(new Range(0, 1000000, 1000000, 1000000)));\n\n        // Since blame information isn't valid when there are unsaved changes -- update the lenses appropriately\n        const dirtyCommand = dirty ? ({ title: this.getDirtyTitle(cfg) } as Command) : undefined;\n\n        if (symbols !== undefined) {\n            Logger.log('GitCodeLensProvider.provideCodeLenses:', `${symbols.length} symbol(s) found`);\n            for (const sym of symbols) {\n                this.provideCodeLens(\n                    lenses,\n                    document,\n                    sym,\n                    languageScope as Required<CodeLensLanguageScope>,\n                    documentRangeFn,\n                    blame,\n                    gitUri,\n                    cfg,\n                    dirty,\n                    dirtyCommand\n                );\n            }\n        }\n\n        if (\n            (languageScope.scopes.includes(CodeLensScopes.Document) || languageScope.symbolScopes.includes('file')) &&\n            !languageScope.symbolScopes.includes('!file')\n        ) {\n            // Check if we have a lens for the whole document -- if not add one\n            if (!lenses.find(l => l.range.start.line === 0 && l.range.end.line === 0)) {\n                const blameRange = documentRangeFn();\n\n                let blameForRangeFn: (() => GitBlameLines | undefined) | undefined = undefined;\n                if (dirty || cfg.recentChange.enabled) {\n                    if (!dirty) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri!, blameRange)\n                        );\n                    }\n\n                    const fileSymbol = new SymbolInformation(\n                        gitUri.getFilename(),\n                        SymbolKind.File,\n                        '',\n                        new Location(gitUri.documentUri(), new Range(0, 0, 0, blameRange.start.character))\n                    );\n                    lenses.push(\n                        new GitRecentChangeCodeLens(\n                            document.languageId,\n                            fileSymbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            true,\n                            getRangeFromSymbol(fileSymbol),\n                            cfg.recentChange.command,\n                            dirtyCommand\n                        )\n                    );\n                }\n                if (!dirty && cfg.authors.enabled) {\n                    if (blameForRangeFn === undefined) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri!, blameRange)\n                        );\n                    }\n\n                    const fileSymbol = new SymbolInformation(\n                        gitUri.getFilename(),\n                        SymbolKind.File,\n                        '',\n                        new Location(gitUri.documentUri(), new Range(0, 1, 0, blameRange.start.character))\n                    );\n                    lenses.push(\n                        new GitAuthorsCodeLens(\n                            document.languageId,\n                            fileSymbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            true,\n                            getRangeFromSymbol(fileSymbol),\n                            cfg.authors.command\n                        )\n                    );\n                }\n            }\n        }\n\n        return lenses;\n    }\n\n    private getValidateSymbolRange(\n        symbol: SymbolInformation | DocumentSymbol,\n        languageScope: Required<CodeLensLanguageScope>,\n        documentRangeFn: () => Range,\n        includeSingleLineSymbols: boolean\n    ): Range | undefined {\n        let valid = false;\n        let range: Range | undefined;\n\n        const symbolName = SymbolKind[symbol.kind].toLowerCase();\n        switch (symbol.kind) {\n            case SymbolKind.File:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    valid = !languageScope.symbolScopes!.includes(`!${symbolName}`);\n                }\n\n                if (valid) {\n                    // Adjust the range to be for the whole file\n                    range = documentRangeFn();\n                }\n                break;\n\n            case SymbolKind.Package:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    valid = !languageScope.symbolScopes!.includes(`!${symbolName}`);\n                }\n\n                if (valid) {\n                    // Adjust the range to be for the whole file\n                    range = getRangeFromSymbol(symbol);\n                    if (range.start.line === 0 && range.end.line === 0) {\n                        range = documentRangeFn();\n                    }\n                }\n                break;\n\n            case SymbolKind.Class:\n            case SymbolKind.Interface:\n            case SymbolKind.Module:\n            case SymbolKind.Namespace:\n            case SymbolKind.Struct:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes!.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n\n            case SymbolKind.Constructor:\n            case SymbolKind.Enum:\n            case SymbolKind.Function:\n            case SymbolKind.Method:\n            case SymbolKind.Property:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Blocks) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes!.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n\n            default:\n                if (languageScope.symbolScopes!.includes(symbolName)) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes!.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n        }\n\n        return valid ? range || getRangeFromSymbol(symbol) : undefined;\n    }\n\n    private provideCodeLens(\n        lenses: CodeLens[],\n        document: TextDocument,\n        symbol: SymbolInformation | DocumentSymbol,\n        languageScope: Required<CodeLensLanguageScope>,\n        documentRangeFn: () => Range,\n        blame: GitBlame | undefined,\n        gitUri: GitUri | undefined,\n        cfg: CodeLensConfig,\n        dirty: boolean,\n        dirtyCommand: Command | undefined\n    ): void {\n        try {\n            const blameRange = this.getValidateSymbolRange(\n                symbol,\n                languageScope,\n                documentRangeFn,\n                cfg.includeSingleLineSymbols\n            );\n            if (blameRange === undefined) return;\n\n            const line = document.lineAt(getRangeFromSymbol(symbol).start);\n            // Make sure there is only 1 lens per line\n            if (lenses.length && lenses[lenses.length - 1].range.start.line === line.lineNumber) return;\n\n            // Anchor the code lens to the start of the line -- so that the range won't change with edits (otherwise the code lens will be removed and re-added)\n            let startChar = 0;\n\n            let blameForRangeFn: (() => GitBlameLines | undefined) | undefined;\n            if (dirty || cfg.recentChange.enabled) {\n                if (!dirty) {\n                    blameForRangeFn = Functions.once(() => this._git.getBlameForRangeSync(blame!, gitUri!, blameRange));\n                }\n                lenses.push(\n                    new GitRecentChangeCodeLens(\n                        document.languageId,\n                        symbol,\n                        gitUri,\n                        blameForRangeFn,\n                        blameRange,\n                        false,\n                        line.range.with(new Position(line.range.start.line, startChar)),\n                        cfg.recentChange.command,\n                        dirtyCommand\n                    )\n                );\n                startChar++;\n            }\n\n            if (cfg.authors.enabled) {\n                let multiline = !blameRange.isSingleLine;\n                // HACK for Omnisharp, since it doesn't return full ranges\n                if (!multiline && document.languageId === 'csharp') {\n                    switch (symbol.kind) {\n                        case SymbolKind.File:\n                            break;\n                        case SymbolKind.Package:\n                        case SymbolKind.Module:\n                        case SymbolKind.Namespace:\n                        case SymbolKind.Class:\n                        case SymbolKind.Interface:\n                        case SymbolKind.Constructor:\n                        case SymbolKind.Method:\n                        case SymbolKind.Function:\n                        case SymbolKind.Enum:\n                            multiline = true;\n                            break;\n                    }\n                }\n\n                if (multiline && !dirty) {\n                    if (blameForRangeFn === undefined) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri!, blameRange)\n                        );\n                    }\n                    lenses.push(\n                        new GitAuthorsCodeLens(\n                            document.languageId,\n                            symbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            false,\n                            line.range.with(new Position(line.range.start.line, startChar)),\n                            cfg.authors.command\n                        )\n                    );\n                }\n            }\n        }\n        finally {\n            if (isDocumentSymbol(symbol)) {\n                for (const child of symbol.children) {\n                    this.provideCodeLens(\n                        lenses,\n                        document,\n                        child,\n                        languageScope,\n                        documentRangeFn,\n                        blame,\n                        gitUri,\n                        cfg,\n                        dirty,\n                        dirtyCommand\n                    );\n                }\n            }\n        }\n    }\n\n    resolveCodeLens(lens: CodeLens, token: CancellationToken): CodeLens | Thenable<CodeLens> {\n        if (lens instanceof GitRecentChangeCodeLens) return this.resolveGitRecentChangeCodeLens(lens, token);\n        if (lens instanceof GitAuthorsCodeLens) return this.resolveGitAuthorsCodeLens(lens, token);\n        return Promise.reject<CodeLens>(undefined);\n    }\n\n    private resolveGitRecentChangeCodeLens(lens: GitRecentChangeCodeLens, token: CancellationToken): CodeLens {\n        const blame = lens.getBlame();\n        if (blame === undefined) return lens;\n\n        const recentCommit = Iterables.first(blame.commits.values());\n        let title = `${recentCommit.author}, ${recentCommit.formattedDate}`;\n        if (Container.config.debug) {\n            title += ` [${lens.languageId}: ${SymbolKind[lens.symbol.kind]}(${lens.range.start.character}-${\n                lens.range.end.character\n            }${\n                (lens.symbol as SymbolInformation).containerName\n                    ? `|${(lens.symbol as SymbolInformation).containerName}`\n                    : ''\n            }), Lines (${lens.blameRange.start.line + 1}-${lens.blameRange.end.line + 1}), Commit (${\n                recentCommit.shortSha\n            })]`;\n        }\n\n        switch (lens.desiredCommand) {\n            case CodeLensCommand.DiffWithPrevious:\n                return this.applyDiffWithPreviousCommand<GitRecentChangeCodeLens>(title, lens, blame, recentCommit);\n            case CodeLensCommand.ShowQuickCommitDetails:\n                return this.applyShowQuickCommitDetailsCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickCommitFileDetails:\n                return this.applyShowQuickCommitFileDetailsCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickCurrentBranchHistory:\n                return this.applyShowQuickCurrentBranchHistoryCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickFileHistory:\n                return this.applyShowQuickFileHistoryCommand<GitRecentChangeCodeLens>(title, lens, blame, recentCommit);\n            case CodeLensCommand.ToggleFileBlame:\n                return this.applyToggleFileBlameCommand<GitRecentChangeCodeLens>(title, lens, blame);\n            default:\n                return lens;\n        }\n    }\n\n    private resolveGitAuthorsCodeLens(lens: GitAuthorsCodeLens, token: CancellationToken): CodeLens {\n        const blame = lens.getBlame();\n        if (blame === undefined) return lens;\n\n        const count = blame.authors.size;\n        let title = `${count} ${count > 1 ? 'authors' : 'author'} (${Iterables.first(blame.authors.values()).name}${\n            count > 1 ? ' and others' : ''\n        })`;\n        if (Container.config.debug) {\n            title += ` [${lens.languageId}: ${SymbolKind[lens.symbol.kind]}(${lens.range.start.character}-${\n                lens.range.end.character\n            }${\n                (lens.symbol as SymbolInformation).containerName\n                    ? `|${(lens.symbol as SymbolInformation).containerName}`\n                    : ''\n            }), Lines (${lens.blameRange.start.line + 1}-${lens.blameRange.end.line + 1}), Authors (${Iterables.join(\n                Iterables.map(blame.authors.values(), a => a.name),\n                ', '\n            )})]`;\n        }\n\n        switch (lens.desiredCommand) {\n            case CodeLensCommand.DiffWithPrevious:\n                return this.applyDiffWithPreviousCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCommitDetails:\n                return this.applyShowQuickCommitDetailsCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCommitFileDetails:\n                return this.applyShowQuickCommitFileDetailsCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCurrentBranchHistory:\n                return this.applyShowQuickCurrentBranchHistoryCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickFileHistory:\n                return this.applyShowQuickFileHistoryCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ToggleFileBlame:\n                return this.applyToggleFileBlameCommand<GitAuthorsCodeLens>(title, lens, blame);\n            default:\n                return lens;\n        }\n    }\n\n    private applyDiffWithPreviousCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        if (commit === undefined) {\n            const blameLine = blame.allLines[lens.range.start.line];\n            commit = blame.commits.get(blameLine.sha);\n        }\n\n        lens.command = {\n            title: title,\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    commit: commit\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCommitDetailsCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: commit !== undefined && commit.isUncommitted ? '' : CodeLensCommand.ShowQuickCommitDetails,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    commit,\n                    sha: commit === undefined ? undefined : commit.sha\n                } as ShowQuickCommitDetailsCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCommitFileDetailsCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: commit !== undefined && commit.isUncommitted ? '' : CodeLensCommand.ShowQuickCommitFileDetails,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    commit,\n                    sha: commit === undefined ? undefined : commit.sha\n                } as ShowQuickCommitFileDetailsCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCurrentBranchHistoryCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: CodeLensCommand.ShowQuickCurrentBranchHistory,\n            arguments: [lens.uri!.toFileUri()]\n        };\n        return lens;\n    }\n\n    private applyShowQuickFileHistoryCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: CodeLensCommand.ShowQuickFileHistory,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    range: lens.isFullRange ? undefined : lens.blameRange\n                } as ShowQuickFileHistoryCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyToggleFileBlameCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines\n    ): T {\n        lens.command = {\n            title: title,\n            command: Commands.ToggleFileBlame,\n            arguments: [lens.uri!.toFileUri()]\n        };\n        return lens;\n    }\n\n    private getDirtyTitle(cfg: CodeLensConfig) {\n        if (cfg.recentChange.enabled && cfg.authors.enabled) {\n            return Container.config.strings.codeLens.unsavedChanges.recentChangeAndAuthors;\n        }\n        if (cfg.recentChange.enabled) return Container.config.strings.codeLens.unsavedChanges.recentChangeOnly;\n        return Container.config.strings.codeLens.unsavedChanges.authorsOnly;\n    }\n}\n\nfunction getRangeFromSymbol(symbol: DocumentSymbol | SymbolInformation) {\n    return isDocumentSymbol(symbol) ? symbol.range : symbol.location.range;\n}\n\nfunction isDocumentSymbol(symbol: DocumentSymbol | SymbolInformation): symbol is DocumentSymbol {\n    return (symbol as DocumentSymbol).children !== undefined;\n}\n","'use strict';\nimport { ConfigurationChangeEvent, Disposable, languages } from 'vscode';\nimport { configuration } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyIdleTriggerEvent,\n    GitDocumentState\n} from '../trackers/gitDocumentTracker';\nimport { GitCodeLensProvider } from './codeLensProvider';\n\nexport class GitCodeLensController implements Disposable {\n    private _canToggle: boolean = false;\n    private _disposable: Disposable | undefined;\n    private _provider: GitCodeLensProvider | undefined;\n    private _providerDisposable: Disposable | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this._providerDisposable && this._providerDisposable.dispose();\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('codeLens').value;\n        if (\n            configuration.changed(e, section, null) ||\n            configuration.changed(e, configuration.name('defaultDateStyle').value) ||\n            configuration.changed(e, configuration.name('defaultDateFormat').value)\n        ) {\n            if (!configuration.initializing(e)) {\n                Logger.log('CodeLens config changed; resetting CodeLens provider');\n            }\n\n            const cfg = Container.config.codeLens;\n            if (cfg.enabled && (cfg.recentChange.enabled || cfg.authors.enabled)) {\n                if (this._provider !== undefined) {\n                    this._provider.reset();\n                }\n                else {\n                    this.createProvider();\n                }\n            }\n            else {\n                if (this._providerDisposable !== undefined) {\n                    this._providerDisposable.dispose();\n                    this._providerDisposable = undefined;\n                }\n                this._provider = undefined;\n            }\n\n            this._canToggle = cfg.recentChange.enabled || cfg.authors.enabled;\n            setCommandContext(CommandContext.CanToggleCodeLens, this._canToggle);\n        }\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        // Only reset if we have saved, since the code lens won't naturally be re-rendered\n        if (this._provider === undefined || !e.blameable) return;\n\n        Logger.log('Blame state changed; resetting CodeLens provider');\n        this._provider.reset('saved');\n    }\n\n    private onDirtyIdleTriggered(e: DocumentDirtyIdleTriggerEvent<GitDocumentState>) {\n        if (this._provider === undefined || !e.document.isBlameable) return;\n\n        const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n        if (maxLines > 0 && e.document.lineCount > maxLines) return;\n\n        Logger.log('Dirty idle triggered; resetting CodeLens provider');\n        this._provider.reset('idle');\n    }\n\n    toggleCodeLens() {\n        if (!this._canToggle) return;\n\n        Logger.log(`toggleCodeLens()`);\n        if (this._provider !== undefined) {\n            if (this._providerDisposable !== undefined) {\n                this._providerDisposable.dispose();\n                this._providerDisposable = undefined;\n            }\n\n            this._provider = undefined;\n\n            return;\n        }\n\n        this.createProvider();\n    }\n\n    private createProvider() {\n        this._provider = new GitCodeLensProvider(Container.context, Container.git, Container.tracker);\n        this._providerDisposable = Disposable.from(\n            languages.registerCodeLensProvider(GitCodeLensProvider.selector, this._provider),\n            Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n            Container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered, this)\n        );\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    Disposable,\n    Event,\n    EventEmitter,\n    FileChangeEvent,\n    FileStat,\n    FileSystemError,\n    FileSystemProvider,\n    FileType,\n    Uri,\n    workspace\n} from 'vscode';\nimport { DocumentSchemes } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitTree, GitUri } from '../git/gitService';\nimport { Iterables, Strings, TernarySearchTree } from '../system';\n\nexport function fromGitLensFSUri(uri: Uri): { path: string; ref: string; repoPath: string } {\n    const gitUri = uri instanceof GitUri ? uri : GitUri.fromRevisionUri(uri);\n    return { path: gitUri.getRelativePath(), ref: gitUri.sha!, repoPath: gitUri.repoPath! };\n}\n\nexport function toGitLensFSUri(ref: string, repoPath: string): Uri {\n    return GitUri.toRevisionUri(ref, repoPath, repoPath);\n}\n\nconst emptyArray = new Uint8Array(0);\n\nexport class GitFileSystemProvider implements FileSystemProvider, Disposable {\n    private readonly _disposable: Disposable;\n    private readonly _searchTreeMap = new Map<string, Promise<TernarySearchTree<GitTree>>>();\n\n    constructor() {\n        this._disposable = Disposable.from(\n            workspace.registerFileSystemProvider(DocumentSchemes.GitLens, this, {\n                isCaseSensitive: true,\n                isReadonly: true\n            })\n        );\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private _onDidChangeFile = new EventEmitter<FileChangeEvent[]>();\n    get onDidChangeFile(): Event<FileChangeEvent[]> {\n        return this._onDidChangeFile.event;\n    }\n\n    copy?(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n    createDirectory(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n    delete(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    async readDirectory(uri: Uri): Promise<[string, FileType][]> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        const tree = await this.getTree(path, ref, repoPath);\n        if (tree === undefined) {\n            debugger;\n            throw FileSystemError.FileNotFound(uri);\n        }\n\n        const items = [\n            ...Iterables.map<GitTree, [string, FileType]>(tree, t => [\n                path != null && path.length !== 0 ? Strings.normalizePath(paths.relative(path, t.path)) : t.path,\n                typeToFileType(t.type)\n            ])\n        ];\n        return items;\n    }\n\n    async readFile(uri: Uri): Promise<Uint8Array> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        if (ref === GitService.deletedOrMissingSha) return emptyArray;\n\n        const buffer = await Container.git.getVersionedFileBuffer(repoPath, path, ref);\n        if (buffer === undefined) return emptyArray;\n\n        return buffer;\n    }\n\n    rename(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    async stat(uri: Uri): Promise<FileStat> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        if (ref === GitService.deletedOrMissingSha) {\n            return {\n                type: FileType.File,\n                size: 0,\n                ctime: 0,\n                mtime: 0\n            };\n        }\n\n        let treeItem;\n\n        const searchTree = this._searchTreeMap.get(ref);\n        if (searchTree !== undefined) {\n            // Add the fake root folder to the path\n            treeItem = (await searchTree).get(`/~/${path}`);\n        }\n        else {\n            if (path == null || path.length === 0) {\n                const tree = await this.getTree(path, ref, repoPath);\n                if (tree === undefined) throw FileSystemError.FileNotFound(uri);\n\n                return {\n                    type: FileType.Directory,\n                    size: 0,\n                    ctime: 0,\n                    mtime: 0\n                };\n            }\n\n            treeItem = await Container.git.getTreeFileForRevision(repoPath, path, ref);\n        }\n\n        if (treeItem === undefined) {\n            throw FileSystemError.FileNotFound(uri);\n        }\n\n        return {\n            type: typeToFileType(treeItem.type),\n            size: treeItem.size,\n            ctime: 0,\n            mtime: 0\n        };\n    }\n\n    watch(): Disposable {\n        return { dispose: () => {} };\n    }\n\n    writeFile(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    private async createSearchTree(ref: string, repoPath: string) {\n        const searchTree = TernarySearchTree.forPaths() as TernarySearchTree<GitTree>;\n        const trees = await Container.git.getTreeForRevision(repoPath, ref);\n\n        // Add a fake root folder so that searches will work\n        searchTree.set(`~`, { commitSha: '', path: '~', size: 0, type: 'tree' });\n        for (const item of trees) {\n            searchTree.set(`~/${item.path}`, item);\n        }\n\n        return searchTree;\n    }\n\n    private async getOrCreateSearchTree(ref: string, repoPath: string) {\n        let searchTree = this._searchTreeMap.get(ref);\n        if (searchTree === undefined) {\n            searchTree = this.createSearchTree(ref, repoPath);\n            this._searchTreeMap.set(ref, searchTree);\n        }\n\n        return searchTree;\n    }\n\n    private async getTree(path: string, ref: string, repoPath: string) {\n        const searchTree = await this.getOrCreateSearchTree(ref, repoPath);\n        // Add the fake root folder to the path\n        return searchTree!.findSuperstr(`/~/${path}`, true);\n    }\n}\n\nfunction typeToFileType(type: 'blob' | 'tree' | undefined | null) {\n    switch (type) {\n        case 'blob':\n            return FileType.File;\n        case 'tree':\n            return FileType.Directory;\n        default:\n            return FileType.Unknown;\n    }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    ConfigurationChangeEvent,\n    debug,\n    Disposable,\n    Hover,\n    HoverProvider,\n    languages,\n    Position,\n    Range,\n    TextDocument,\n    TextEditor,\n    window\n} from 'vscode';\nimport { Annotations } from '../annotations/annotations';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\n\nexport class LineHoverController implements Disposable {\n    private _debugSessionEndDisposable: Disposable | undefined;\n    private _disposable: Disposable;\n    private _hoverProviderDisposable: Disposable | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            debug.onDidStartDebugSession(this.onDebugSessionStarted, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.unregister();\n\n        this._debugSessionEndDisposable && this._debugSessionEndDisposable.dispose();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('hovers')('enabled').value) &&\n            !configuration.changed(e, configuration.name('hovers')('currentLine')('enabled').value)\n        ) {\n            return;\n        }\n\n        if (Container.config.hovers.enabled && Container.config.hovers.currentLine.enabled) {\n            Container.lineTracker.start(\n                this,\n                Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n            );\n\n            this.register(window.activeTextEditor);\n        }\n        else {\n            Container.lineTracker.stop(this);\n            this.unregister();\n        }\n    }\n\n    private get debugging() {\n        return this._debugSessionEndDisposable !== undefined;\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        if (e.pending || e.reason !== 'editor') return;\n\n        if (e.editor === undefined || e.lines === undefined) {\n            this.unregister();\n\n            return;\n        }\n\n        this.register(e.editor);\n    }\n\n    private onDebugSessionStarted() {\n        if (this._debugSessionEndDisposable === undefined) {\n            this._debugSessionEndDisposable = debug.onDidTerminateDebugSession(this.onDebugSessionEnded, this);\n        }\n    }\n\n    private onDebugSessionEnded() {\n        if (this._debugSessionEndDisposable !== undefined) {\n            this._debugSessionEndDisposable.dispose();\n            this._debugSessionEndDisposable = undefined;\n        }\n    }\n\n    async provideDetailsHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        if (!Container.lineTracker.includes(position.line)) return undefined;\n\n        const lineState = Container.lineTracker.getState(position.line);\n        const commit = lineState !== undefined ? lineState.commit : undefined;\n        if (commit === undefined) return undefined;\n\n        // Avoid double annotations if we are showing the whole-file hover blame annotations\n        const fileAnnotations = await Container.fileAnnotations.getAnnotationType(window.activeTextEditor);\n        if (fileAnnotations !== undefined && Container.config.hovers.annotations.details) return undefined;\n\n        const wholeLine = this.debugging ? false : Container.config.hovers.currentLine.over === 'line';\n        // If we aren't showing the hover over the whole line, make sure the annotation is on\n        if (!wholeLine && Container.lineAnnotations.suspended) return undefined;\n\n        const range = document.validateRange(\n            new Range(position.line, wholeLine ? 0 : Number.MAX_SAFE_INTEGER, position.line, Number.MAX_SAFE_INTEGER)\n        );\n        if (!wholeLine && range.start.character !== position.character) return undefined;\n\n        // Get the full commit message -- since blame only returns the summary\n        let logCommit = lineState !== undefined ? lineState.logCommit : undefined;\n        if (logCommit === undefined && !commit.isUncommitted) {\n            logCommit = await Container.git.getLogCommitForFile(commit.repoPath, commit.uri.fsPath, {\n                ref: commit.sha\n            });\n            if (logCommit !== undefined) {\n                // Preserve the previous commit from the blame commit\n                logCommit.previousSha = commit.previousSha;\n                logCommit.previousFileName = commit.previousFileName;\n\n                if (lineState !== undefined) {\n                    lineState.logCommit = logCommit;\n                }\n            }\n        }\n\n        const trackedDocument = await Container.tracker.get(document);\n        if (trackedDocument === undefined) return undefined;\n\n        const message = Annotations.getHoverMessage(\n            logCommit || commit,\n            Container.config.defaultDateFormat,\n            await Container.git.getRemotes(commit.repoPath),\n            fileAnnotations,\n            position.line\n        );\n        return new Hover(message, range);\n    }\n\n    async provideChangesHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        if (!Container.lineTracker.includes(position.line)) return undefined;\n\n        const lineState = Container.lineTracker.getState(position.line);\n        const commit = lineState !== undefined ? lineState.commit : undefined;\n        if (commit === undefined) return undefined;\n\n        // Avoid double annotations if we are showing the whole-file hover blame annotations\n        if (Container.config.hovers.annotations.changes) {\n            const fileAnnotations = await Container.fileAnnotations.getAnnotationType(window.activeTextEditor);\n            if (fileAnnotations !== undefined) return undefined;\n        }\n\n        const wholeLine = this.debugging ? false : Container.config.hovers.currentLine.over === 'line';\n        // If we aren't showing the hover over the whole line, make sure the annotation is on\n        if (!wholeLine && Container.lineAnnotations.suspended) return undefined;\n\n        const range = document.validateRange(\n            new Range(position.line, wholeLine ? 0 : Number.MAX_SAFE_INTEGER, position.line, Number.MAX_SAFE_INTEGER)\n        );\n        if (!wholeLine && range.start.character !== position.character) return undefined;\n\n        const trackedDocument = await Container.tracker.get(document);\n        if (trackedDocument === undefined) return undefined;\n\n        const hover = await Annotations.changesHover(commit, position.line, trackedDocument.uri);\n        if (hover.hoverMessage === undefined) return undefined;\n\n        return new Hover(hover.hoverMessage, range);\n    }\n\n    private register(editor: TextEditor | undefined) {\n        this.unregister();\n\n        if (editor === undefined /* || this.suspended */) return;\n\n        const cfg = Container.config.hovers;\n        if (!cfg.enabled || !cfg.currentLine.enabled || (!cfg.currentLine.details && !cfg.currentLine.changes)) return;\n\n        const subscriptions = [];\n        if (cfg.currentLine.changes) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: editor.document.uri.fsPath }, {\n                    provideHover: this.provideChangesHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n        if (cfg.currentLine.details) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: editor.document.uri.fsPath }, {\n                    provideHover: this.provideDetailsHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n\n        this._hoverProviderDisposable = Disposable.from(...subscriptions);\n    }\n\n    private unregister() {\n        if (this._hoverProviderDisposable !== undefined) {\n            this._hoverProviderDisposable.dispose();\n            this._hoverProviderDisposable = undefined;\n        }\n    }\n}\n","'use strict';\nimport { commands, Disposable } from 'vscode';\nimport { CommandContext, extensionId, setCommandContext } from './constants';\nimport { Logger } from './logger';\n\nexport declare interface KeyCommand {\n    onDidPressKey?(key: Keys): Promise<{} | undefined>;\n}\n\nconst keyNoopCommand = Object.create(null) as KeyCommand;\nexport { keyNoopCommand as KeyNoopCommand };\n\nexport declare type Keys = 'left' | 'right' | ',' | '.' | 'escape';\nexport const keys: Keys[] = ['left', 'right', ',', '.', 'escape'];\n\nexport declare interface KeyMapping {\n    [id: string]: KeyCommand | (() => Promise<KeyCommand>) | undefined;\n}\n\nconst mappings: KeyMapping[] = [];\n\nexport class KeyboardScope implements Disposable {\n    constructor(\n        private readonly mapping: KeyMapping\n    ) {\n        for (const key in mapping) {\n            mapping[key] = mapping[key] || keyNoopCommand;\n        }\n    }\n\n    async dispose() {\n        const index = mappings.indexOf(this.mapping);\n        Logger.log('KeyboardScope.dispose', mappings.length, index);\n        if (index === mappings.length - 1) {\n            mappings.pop();\n            await this.updateKeyCommandsContext(mappings[mappings.length - 1]);\n        }\n        else {\n            mappings.splice(index, 1);\n        }\n    }\n\n    async begin() {\n        mappings.push(this.mapping);\n        await this.updateKeyCommandsContext(this.mapping);\n        return this;\n    }\n\n    async clearKeyCommand(key: Keys) {\n        const mapping = mappings[mappings.length - 1];\n        if (mapping !== this.mapping || !mapping[key]) return;\n\n        Logger.log('KeyboardScope.clearKeyCommand', mappings.length, key);\n        mapping[key] = undefined;\n        await setCommandContext(`${CommandContext.Key}:${key}`, false);\n    }\n\n    async setKeyCommand(key: Keys, command: KeyCommand | (() => Promise<KeyCommand>)) {\n        const mapping = mappings[mappings.length - 1];\n        if (mapping !== this.mapping) return;\n\n        Logger.log('KeyboardScope.setKeyCommand', mappings.length, key, Boolean(mapping[key]));\n\n        if (!mapping[key]) {\n            mapping[key] = command;\n            await setCommandContext(`${CommandContext.Key}:${key}`, true);\n        }\n        else {\n            mapping[key] = command;\n        }\n    }\n\n    private async updateKeyCommandsContext(mapping: KeyMapping) {\n        const promises = [];\n        for (const key of keys) {\n            promises.push(setCommandContext(`${CommandContext.Key}:${key}`, Boolean(mapping && mapping[key])));\n        }\n        await Promise.all(promises);\n    }\n}\n\nexport class Keyboard implements Disposable {\n    private _disposable: Disposable;\n\n    constructor() {\n        const subscriptions = keys.map(key =>\n            commands.registerCommand(`${extensionId}.key.${key}`, () => this.execute(key), this)\n        );\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    async beginScope(mapping?: KeyMapping): Promise<KeyboardScope> {\n        Logger.log('Keyboard.beginScope', mappings.length);\n        return await new KeyboardScope(\n            mapping ? Object.assign(Object.create(null), mapping) : Object.create(null)\n        ).begin();\n    }\n\n    async execute(key: Keys): Promise<{} | undefined> {\n        if (!mappings.length) return undefined;\n\n        try {\n            const mapping = mappings[mappings.length - 1];\n\n            let command = mapping[key] as KeyCommand | (() => Promise<KeyCommand>);\n            if (typeof command === 'function') {\n                command = await command();\n            }\n            if (!command || typeof command.onDidPressKey !== 'function') return undefined;\n\n            Logger.log('Keyboard.execute', key);\n\n            return await command.onDidPressKey(key);\n        }\n        catch (ex) {\n            Logger.error(ex, 'Keyboard.execute');\n            return undefined;\n        }\n    }\n}\n","'use strict';\nimport { ConfigurationChangeEvent, Disposable, StatusBarAlignment, StatusBarItem, TextEditor, window } from 'vscode';\nimport { Commands } from '../commands';\nimport { configuration, StatusBarCommand } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { CommitFormatter, GitCommit, ICommitFormatOptions } from '../git/gitService';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\n\nexport class StatusBarController implements Disposable {\n    private _blameStatusBarItem: StatusBarItem | undefined;\n    private _disposable: Disposable;\n    private _modeStatusBarItem: StatusBarItem | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.clearBlame();\n\n        this._blameStatusBarItem && this._blameStatusBarItem.dispose();\n        this._modeStatusBarItem && this._modeStatusBarItem.dispose();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (configuration.changed(e, configuration.name('mode').value)) {\n            const mode =\n                Container.config.mode.active && Container.config.mode.statusBar.enabled\n                    ? Container.config.modes[Container.config.mode.active]\n                    : undefined;\n            if (mode && mode.statusBarItemName) {\n                const alignment =\n                    Container.config.mode.statusBar.alignment !== 'left'\n                        ? StatusBarAlignment.Right\n                        : StatusBarAlignment.Left;\n\n                if (configuration.changed(e, configuration.name('mode')('statusBar')('alignment').value)) {\n                    if (this._modeStatusBarItem !== undefined && this._modeStatusBarItem.alignment !== alignment) {\n                        this._modeStatusBarItem.dispose();\n                        this._modeStatusBarItem = undefined;\n                    }\n                }\n\n                this._modeStatusBarItem =\n                    this._modeStatusBarItem ||\n                    window.createStatusBarItem(alignment, alignment === StatusBarAlignment.Right ? 999 : 1);\n                this._modeStatusBarItem.command = Commands.SwitchMode;\n                this._modeStatusBarItem.text = mode.statusBarItemName;\n                this._modeStatusBarItem.tooltip = `Switch GitLens Mode`;\n                this._modeStatusBarItem.show();\n            }\n            else {\n                if (this._modeStatusBarItem !== undefined) {\n                    this._modeStatusBarItem.dispose();\n                    this._modeStatusBarItem = undefined;\n                }\n            }\n        }\n\n        if (!configuration.changed(e, configuration.name('statusBar').value)) return;\n\n        if (Container.config.statusBar.enabled) {\n            const alignment =\n                Container.config.statusBar.alignment !== 'left' ? StatusBarAlignment.Right : StatusBarAlignment.Left;\n\n            if (configuration.changed(e, configuration.name('statusBar')('alignment').value)) {\n                if (this._blameStatusBarItem !== undefined && this._blameStatusBarItem.alignment !== alignment) {\n                    this._blameStatusBarItem.dispose();\n                    this._blameStatusBarItem = undefined;\n                }\n            }\n\n            this._blameStatusBarItem =\n                this._blameStatusBarItem ||\n                window.createStatusBarItem(alignment, alignment === StatusBarAlignment.Right ? 1000 : 0);\n            this._blameStatusBarItem.command = Container.config.statusBar.command;\n\n            if (configuration.changed(e, configuration.name('statusBar')('enabled').value)) {\n                Container.lineTracker.start(\n                    this,\n                    Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n                );\n            }\n        }\n        else {\n            if (configuration.changed(e, configuration.name('statusBar')('enabled').value)) {\n                Container.lineTracker.stop(this);\n\n                if (this._blameStatusBarItem !== undefined) {\n                    this._blameStatusBarItem.dispose();\n                    this._blameStatusBarItem = undefined;\n                }\n            }\n        }\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        // If we need to reduceFlicker, don't clear if only the selected lines changed\n        let clear = !(\n            Container.config.statusBar.reduceFlicker &&\n            e.reason === 'selection' &&\n            (e.pending || e.lines !== undefined)\n        );\n        if (!e.pending && e.lines !== undefined) {\n            const state = Container.lineTracker.getState(e.lines[0]);\n            if (state !== undefined && state.commit !== undefined) {\n                this.updateBlame(state.commit, e.editor!);\n\n                return;\n            }\n\n            clear = true;\n        }\n\n        if (clear) {\n            this.clearBlame();\n        }\n    }\n\n    clearBlame() {\n        if (this._blameStatusBarItem !== undefined) {\n            this._blameStatusBarItem.hide();\n        }\n    }\n\n    private updateBlame(commit: GitCommit, editor: TextEditor) {\n        const cfg = Container.config.statusBar;\n        if (!cfg.enabled || this._blameStatusBarItem === undefined || !isTextEditor(editor)) return;\n\n        this._blameStatusBarItem.text = `$(git-commit) ${CommitFormatter.fromTemplate(cfg.format, commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat\n        } as ICommitFormatOptions)}`;\n\n        switch (cfg.command) {\n            case StatusBarCommand.ToggleFileBlame:\n                this._blameStatusBarItem.tooltip = 'Toggle Blame Annotations';\n                break;\n            case StatusBarCommand.DiffWithPrevious:\n                this._blameStatusBarItem.command = Commands.DiffLineWithPrevious;\n                this._blameStatusBarItem.tooltip = 'Compare Line Revision with Previous';\n                break;\n            case StatusBarCommand.DiffWithWorking:\n                this._blameStatusBarItem.command = Commands.DiffLineWithWorking;\n                this._blameStatusBarItem.tooltip = 'Compare Line Revision with Working';\n                break;\n            case StatusBarCommand.ToggleCodeLens:\n                this._blameStatusBarItem.tooltip = 'Toggle Git CodeLens';\n                break;\n            case StatusBarCommand.ShowQuickCommitDetails:\n                this._blameStatusBarItem.tooltip = 'Show Commit Details';\n                break;\n            case StatusBarCommand.ShowQuickCommitFileDetails:\n                this._blameStatusBarItem.tooltip = 'Show Line Commit Details';\n                break;\n            case StatusBarCommand.ShowQuickFileHistory:\n                this._blameStatusBarItem.tooltip = 'Show File History';\n                break;\n            case StatusBarCommand.ShowQuickCurrentBranchHistory:\n                this._blameStatusBarItem.tooltip = 'Show Branch History';\n                break;\n        }\n\n        this._blameStatusBarItem.show();\n    }\n}\n","'use strict';\nimport { Disposable, Event, EventEmitter, TextEditor, TextEditorSelectionChangeEvent, window } from 'vscode';\nimport { isTextEditor } from '../constants';\nimport { Functions, IDeferrable } from '../system';\n\nexport interface LinesChangeEvent {\n    readonly editor: TextEditor | undefined;\n    readonly lines: number[] | undefined;\n\n    readonly reason: 'editor' | 'selection';\n    readonly pending?: boolean;\n}\n\nexport class LineTracker<T> implements Disposable {\n    private _onDidChangeActiveLines = new EventEmitter<LinesChangeEvent>();\n    get onDidChangeActiveLines(): Event<LinesChangeEvent> {\n        return this._onDidChangeActiveLines.event;\n    }\n\n    protected _disposable: Disposable | undefined;\n    private _editor: TextEditor | undefined;\n\n    private readonly _state: Map<number, T | undefined> = new Map();\n\n    dispose() {\n        this.stop();\n    }\n\n    private onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (this._editor === editor) return;\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        this.reset();\n        this._editor = editor;\n        this._lines = editor !== undefined ? editor.selections.map(s => s.active.line) : undefined;\n\n        this.trigger('editor');\n    }\n\n    private onTextEditorSelectionChanged(e: TextEditorSelectionChangeEvent) {\n        // If this isn't for our cached editor and its not a real editor -- kick out\n        if (this._editor !== e.textEditor && !isTextEditor(e.textEditor)) return;\n\n        const reason = this._editor === e.textEditor ? 'selection' : 'editor';\n\n        const lines = e.selections.map(s => s.active.line);\n        if (this._editor === e.textEditor && this.includesAll(lines)) return;\n\n        this.reset();\n        this._editor = e.textEditor;\n        this._lines = lines;\n        this.trigger(reason);\n    }\n\n    getState(line: number): T | undefined {\n        return this._state.get(line);\n    }\n\n    setState(line: number, state: T | undefined) {\n        this._state.set(line, state);\n    }\n\n    private _lines: number[] | undefined;\n    get lines(): number[] | undefined {\n        return this._lines;\n    }\n\n    includes(line: number): boolean {\n        return this._lines !== undefined && this._lines.includes(line);\n    }\n\n    includesAll(lines: number[] | undefined): boolean {\n        return LineTracker.includesAll(lines, this._lines);\n    }\n\n    refresh() {\n        this.trigger('editor');\n    }\n\n    reset() {\n        this._state.clear();\n    }\n\n    start(subscriber?: any, subscription?: Disposable): void {\n        if (this._disposable !== undefined) return;\n\n        this._disposable = Disposable.from(\n            window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveTextEditorChanged, 0), this),\n            window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged, this)\n        );\n\n        setImmediate(() => this.onActiveTextEditorChanged(window.activeTextEditor));\n    }\n\n    stop(subscriber?: any) {\n        if (this._disposable === undefined) return;\n\n        if (this._linesChangedDebounced !== undefined) {\n            this._linesChangedDebounced.cancel();\n        }\n\n        this._disposable.dispose();\n        this._disposable = undefined;\n    }\n\n    protected async fireLinesChanged(e: LinesChangeEvent) {\n        this._onDidChangeActiveLines.fire(e);\n    }\n\n    protected trigger(reason: 'editor' | 'selection') {\n        this.onLinesChanged({ editor: this._editor, lines: this._lines, reason: reason });\n    }\n\n    private _linesChangedDebounced: (((e: LinesChangeEvent) => void) & IDeferrable) | undefined;\n\n    private onLinesChanged(e: LinesChangeEvent) {\n        if (e.lines === undefined) {\n            setImmediate(() => {\n                if (window.activeTextEditor !== e.editor) return;\n\n                if (this._linesChangedDebounced !== undefined) {\n                    this._linesChangedDebounced.cancel();\n                }\n\n                void this.fireLinesChanged(e);\n            });\n\n            return;\n        }\n\n        if (this._linesChangedDebounced === undefined) {\n            this._linesChangedDebounced = Functions.debounce(\n                (e: LinesChangeEvent) => {\n                    if (window.activeTextEditor !== e.editor) return;\n                    // Make sure we are still on the same lines\n                    if (!LineTracker.includesAll(e.lines, e.editor && e.editor.selections.map(s => s.active.line))) {\n                        return;\n                    }\n\n                    void this.fireLinesChanged(e);\n                },\n                250,\n                { track: true }\n            );\n        }\n\n        // If we have no pending moves, then fire an immediate pending event, and defer the real event\n        if (!this._linesChangedDebounced.pending!()) {\n            void this.fireLinesChanged({ ...e, pending: true });\n        }\n\n        this._linesChangedDebounced(e);\n    }\n\n    static includesAll(lines1: number[] | undefined, lines2: number[] | undefined): boolean {\n        if (lines1 === undefined && lines2 === undefined) return true;\n        if (lines1 === undefined || lines2 === undefined) return false;\n\n        return lines2.length === lines1.length && lines2.every((v, i) => v === lines1[i]);\n    }\n}\n","'use strict';\nimport { Disposable, TextEditor } from 'vscode';\nimport { Container } from '../container';\nimport { GitBlameCommit, GitLogCommit } from '../git/gitService';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyIdleTriggerEvent,\n    DocumentDirtyStateChangeEvent,\n    GitDocumentState\n} from './gitDocumentTracker';\nimport { LinesChangeEvent, LineTracker } from './lineTracker';\n\nexport * from './lineTracker';\n\nexport class GitLineState {\n    constructor(\n        public readonly commit: GitBlameCommit | undefined,\n        public logCommit?: GitLogCommit\n    ) {}\n}\n\nexport class GitLineTracker extends LineTracker<GitLineState> {\n    private _count = 0;\n    private _subscriptions: Map<any, Disposable> = new Map();\n\n    protected async fireLinesChanged(e: LinesChangeEvent) {\n        this.reset();\n\n        let updated = false;\n        if (!this._suspended && !e.pending && e.lines !== undefined && e.editor !== undefined) {\n            updated = await this.updateState(e.lines, e.editor);\n        }\n\n        return super.fireLinesChanged(updated ? e : { ...e, lines: undefined });\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        this.trigger('editor');\n    }\n\n    private onDirtyIdleTriggered(e: DocumentDirtyIdleTriggerEvent<GitDocumentState>) {\n        const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n        if (maxLines > 0 && e.document.lineCount > maxLines) return;\n\n        this.resume();\n    }\n\n    private async onDirtyStateChanged(e: DocumentDirtyStateChangeEvent<GitDocumentState>) {\n        if (e.dirty) {\n            this.suspend();\n        }\n        else {\n            this.resume({ force: true });\n        }\n    }\n\n    private _suspended = false;\n\n    private resume(options: { force?: boolean } = {}) {\n        if (!options.force && !this._suspended) return;\n\n        this._suspended = false;\n        this.trigger('editor');\n    }\n\n    private suspend(options: { force?: boolean } = {}) {\n        if (!options.force && this._suspended) return;\n\n        this._suspended = true;\n        this.trigger('editor');\n    }\n\n    isSubscribed(subscriber: any) {\n        return this._subscriptions.has(subscriber);\n    }\n\n    start(subscriber: any, subscription: Disposable): Disposable {\n        const disposable = {\n            dispose: () => this.stop(subscriber)\n        };\n\n        if (this.isSubscribed(subscriber)) return disposable;\n\n        this._subscriptions.set(subscriber, subscription);\n\n        this._count++;\n        if (this._count === 1) {\n            super.start();\n\n            this._disposable = Disposable.from(\n                this._disposable!,\n                Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n                Container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged, this),\n                Container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered, this)\n            );\n        }\n\n        return disposable;\n    }\n\n    stop(subscriber: any) {\n        const subscription = this._subscriptions.get(subscriber);\n        if (subscription === undefined) return;\n\n        this._subscriptions.delete(subscriber);\n        subscription.dispose();\n\n        if (this._disposable === undefined) {\n            this._count = 0;\n            return;\n        }\n\n        this._count--;\n        if (this._count === 0) {\n            super.stop();\n        }\n    }\n\n    private async updateState(lines: number[], editor: TextEditor): Promise<boolean> {\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable || !this.includesAll(lines)) return false;\n\n        if (lines.length === 1) {\n            const blameLine = editor.document.isDirty\n                ? await Container.git.getBlameForLineContents(trackedDocument.uri, lines[0], editor.document.getText())\n                : await Container.git.getBlameForLine(trackedDocument.uri, lines[0]);\n            if (blameLine === undefined) return false;\n\n            this.setState(blameLine.line.line, new GitLineState(blameLine.commit));\n        }\n        else {\n            const blame = editor.document.isDirty\n                ? await Container.git.getBlameForFileContents(trackedDocument.uri, editor.document.getText())\n                : await Container.git.getBlameForFile(trackedDocument.uri);\n            if (blame === undefined) return false;\n\n            for (const line of lines) {\n                const commitLine = blame.lines[line];\n                this.setState(line, new GitLineState(blame.commits.get(commitLine.sha)!));\n            }\n        }\n\n        if (!trackedDocument.isBlameable || !this.includesAll(lines)) return false;\n\n        if (editor.document.isDirty) {\n            trackedDocument.setForceDirtyStateChangeOnNextDocumentChange();\n        }\n\n        return true;\n    }\n}\n","'use strict';\nimport { Command, Disposable, Event, TreeItem, TreeItemCollapsibleState, TreeViewVisibilityChangeEvent } from 'vscode';\nimport { GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, gate, logName } from '../../system';\nimport { TreeViewNodeStateChangeEvent, View } from '../viewBase';\n\nexport enum ResourceType {\n    ActiveFileHistory = 'gitlens:history:active:file',\n    ActiveLineHistory = 'gitlens:history:active:line',\n    Branch = 'gitlens:branch',\n    Branches = 'gitlens:branches',\n    BranchStatusAheadOfUpstream = 'gitlens:branch-status:upstream:ahead',\n    BranchStatusBehindUpstream = 'gitlens:branch-status:upstream:behind',\n    Commit = 'gitlens:commit',\n    CommitFile = 'gitlens:file:commit',\n    Commits = 'gitlens:commits',\n    Compare = 'gitlens:compare',\n    ComparePicker = 'gitlens:compare:picker',\n    ComparePickerWithRef = 'gitlens:compare:picker:ref',\n    CompareResults = 'gitlens:compare:results',\n    File = 'gitlens:file',\n    FileHistory = 'gitlens:history:file',\n    Folder = 'gitlens:folder',\n    LineHistory = 'gitlens:history:line',\n    Message = 'gitlens:message',\n    Pager = 'gitlens:pager',\n    Remote = 'gitlens:remote',\n    Remotes = 'gitlens:remotes',\n    Repositories = 'gitlens:repositories',\n    Repository = 'gitlens:repository',\n    ResultsCommits = 'gitlens:results:commits',\n    ResultsFile = 'gitlens:file:results',\n    ResultsFiles = 'gitlens:results:files',\n    Search = 'gitlens:search',\n    SearchResults = 'gitlens:search:results',\n    Stash = 'gitlens:stash',\n    StashFile = 'gitlens:file:stash',\n    Stashes = 'gitlens:stashes',\n    StatusFileCommits = 'gitlens:status:file:commits',\n    StatusFiles = 'gitlens:status:files',\n    StatusAheadOfUpstream = 'gitlens:status:upstream:ahead',\n    StatusBehindUpstream = 'gitlens:status:upstream:behind',\n    Tag = 'gitlens:tag',\n    Tags = 'gitlens:tags'\n}\n\nexport const unknownGitUri = new GitUri();\n\nexport interface ViewNode {\n    readonly id?: string;\n}\n\nconst counter = 0;\nfunction getViewNodeInstanceId() {\n    // if (counter === Number.MAX_SAFE_INTEGER) {\n    //     counter = 0;\n    // }\n    // counter++;\n    return counter;\n}\n\n@logName<ViewNode>((c, name) => `${name}(${c.id || c._instanceId})`)\nexport abstract class ViewNode<TView extends View = View> {\n    protected readonly _instanceId: number;\n\n    constructor(\n        uri: GitUri,\n        public readonly view: TView,\n        protected readonly parent?: ViewNode\n    ) {\n        this._instanceId = getViewNodeInstanceId();\n        this._uri = uri;\n    }\n\n    toString() {\n        return `${Logger.toLoggableName(this)}${this.id != null ? `(${this.id})` : ''}`;\n    }\n\n    protected _uri: GitUri;\n    get uri() {\n        return this._uri;\n    }\n\n    abstract getChildren(): ViewNode[] | Promise<ViewNode[]>;\n\n    getParent(): ViewNode | undefined {\n        return this.parent;\n    }\n\n    abstract getTreeItem(): TreeItem | Promise<TreeItem>;\n\n    getCommand(): Command | undefined {\n        return undefined;\n    }\n\n    @gate()\n    @debug()\n    refresh(reset: boolean = false): void | boolean | Promise<void> | Promise<boolean> {}\n\n    @gate()\n    @debug()\n    triggerChange(): Promise<void> {\n        return this.view.refreshNode(this);\n    }\n}\n\nexport abstract class ViewRefNode<TView extends View = View> extends ViewNode<TView> {\n    abstract get ref(): string;\n\n    get repoPath(): string {\n        return this.uri.repoPath!;\n    }\n}\n\nexport interface PageableViewNode {\n    readonly supportsPaging: boolean;\n    maxCount: number | undefined;\n}\n\nexport function isPageable(\n    node: ViewNode\n): node is ViewNode & { supportsPaging: boolean; maxCount: number | undefined } {\n    return Boolean((node as any).supportsPaging);\n}\n\nexport function supportsAutoRefresh(\n    view: View\n): view is View & { autoRefresh: boolean; onDidChangeAutoRefresh: Event<void> } {\n    return (view as any).onDidChangeAutoRefresh !== undefined;\n}\n\nexport abstract class SubscribeableViewNode<TView extends View = View> extends ViewNode<TView> {\n    protected _disposable: Disposable;\n    protected _subscription: Promise<Disposable | undefined> | undefined;\n\n    constructor(uri: GitUri, view: TView, parent?: ViewNode) {\n        super(uri, view, parent);\n\n        const disposables = [\n            this.view.onDidChangeVisibility(this.onVisibilityChanged, this),\n            this.view.onDidChangeNodeState(this.onNodeStateChanged, this)\n        ];\n\n        if (supportsAutoRefresh(this.view)) {\n            disposables.push(this.view.onDidChangeAutoRefresh(this.onAutoRefreshChanged, this));\n        }\n\n        this._disposable = Disposable.from(...disposables);\n    }\n\n    @debug()\n    dispose() {\n        void this.unsubscribe();\n\n        if (this._disposable !== undefined) {\n            this._disposable.dispose();\n        }\n    }\n\n    private _canSubscribe: boolean = true;\n    protected get canSubscribe(): boolean {\n        return this._canSubscribe;\n    }\n    protected set canSubscribe(value: boolean) {\n        if (this._canSubscribe === value) return;\n\n        this._canSubscribe = value;\n\n        void this.ensureSubscription();\n        if (value) {\n            void this.triggerChange();\n        }\n    }\n\n    protected abstract async subscribe(): Promise<Disposable | undefined>;\n\n    @debug()\n    protected async unsubscribe(): Promise<void> {\n        if (this._subscription !== undefined) {\n            const subscriptionPromise = this._subscription;\n            this._subscription = undefined;\n\n            const subscription = await subscriptionPromise;\n            if (subscription !== undefined) {\n                subscription.dispose();\n            }\n        }\n    }\n\n    @debug()\n    protected onAutoRefreshChanged() {\n        this.onVisibilityChanged({ visible: this.view.visible });\n    }\n\n    protected onParentStateChanged(state: TreeItemCollapsibleState) {}\n    protected onStateChanged(state: TreeItemCollapsibleState) {}\n\n    protected _state: TreeItemCollapsibleState | undefined;\n    protected onNodeStateChanged(e: TreeViewNodeStateChangeEvent<ViewNode>) {\n        if (e.element === this) {\n            this._state = e.state;\n            this.onStateChanged(e.state);\n        }\n        else if (e.element === this.parent) {\n            this.onParentStateChanged(e.state);\n        }\n    }\n\n    @debug()\n    protected onVisibilityChanged(e: TreeViewVisibilityChangeEvent) {\n        void this.ensureSubscription();\n\n        if (e.visible) {\n            void this.triggerChange();\n        }\n    }\n\n    @debug()\n    async ensureSubscription() {\n        // We only need to subscribe if we are visible and if auto-refresh enabled (when supported)\n        if (!this.canSubscribe || !this.view.visible || (supportsAutoRefresh(this.view) && !this.view.autoRefresh)) {\n            await this.unsubscribe();\n\n            return;\n        }\n\n        // If we already have a subscription, just kick out\n        if (this._subscription !== undefined) return;\n\n        this._subscription = this.subscribe();\n        await this._subscription;\n    }\n}\n\nexport function nodeSupportsConditionalDismissal(node: ViewNode): node is ViewNode & { canDismiss(): boolean } {\n    return typeof (node as any).canDismiss === 'function';\n}\n\nexport function viewSupportsNodeDismissal(view: View): view is View & { dismissNode(node: ViewNode): void } {\n    return typeof (view as any).dismissNode === 'function';\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, Selection, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport {\n    CommitFormatter,\n    GitFile,\n    GitLogCommit,\n    GitUri,\n    ICommitFormatOptions,\n    IStatusFormatOptions,\n    StatusFileFormatter\n} from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport enum CommitFileNodeDisplayAs {\n    CommitLabel = 1 << 0,\n    FileLabel = 1 << 1,\n\n    CommitIcon = 1 << 2,\n    StatusIcon = 1 << 3,\n    Gravatar = 1 << 4,\n\n    File = FileLabel | StatusIcon\n}\n\nexport class CommitFileNode extends ViewRefNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly file: GitFile,\n        public commit: GitLogCommit,\n        private readonly _displayAs: CommitFileNodeDisplayAs,\n        private readonly _selection?: Selection\n    ) {\n        super(GitUri.fromFile(file, commit.repoPath, commit.sha), view, parent);\n    }\n\n    get priority(): number {\n        return 0;\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        return [];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        if (!this.commit.isFile) {\n            // See if we can get the commit directly from the multi-file commit\n            const commit = this.commit.toFileCommit(this.file);\n            if (commit === undefined) {\n                const log = await Container.git.getLogForFile(this.repoPath, this.file.fileName, {\n                    maxCount: 2,\n                    ref: this.commit.sha\n                });\n                if (log !== undefined) {\n                    this.commit = log.commits.get(this.commit.sha) || this.commit;\n                }\n            }\n            else {\n                this.commit = commit;\n            }\n        }\n\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.contextValue = this.resourceType;\n        item.description = this.description;\n        item.tooltip = this.tooltip;\n\n        if ((this._displayAs & CommitFileNodeDisplayAs.CommitIcon) === CommitFileNodeDisplayAs.CommitIcon) {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(paths.join('images', 'dark', 'icon-commit.svg')),\n                light: Container.context.asAbsolutePath(paths.join('images', 'light', 'icon-commit.svg'))\n            };\n        }\n        else if ((this._displayAs & CommitFileNodeDisplayAs.StatusIcon) === CommitFileNodeDisplayAs.StatusIcon) {\n            const icon = GitFile.getStatusIcon(this.file.status);\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(paths.join('images', 'dark', icon)),\n                light: Container.context.asAbsolutePath(paths.join('images', 'light', icon))\n            };\n        }\n        else if ((this._displayAs & CommitFileNodeDisplayAs.Gravatar) === CommitFileNodeDisplayAs.Gravatar) {\n            item.iconPath = this.commit.getGravatarUri(Container.config.defaultGravatarsStyle);\n        }\n\n        item.command = this.getCommand();\n\n        // Only cache the label/description/tooltip for a single refresh\n        this._label = undefined;\n        this._description = undefined;\n        this._tooltip = undefined;\n\n        return item;\n    }\n\n    private _description: string | undefined;\n    get description() {\n        if (this._description === undefined) {\n            this._description =\n                this._displayAs & CommitFileNodeDisplayAs.CommitLabel\n                    ? CommitFormatter.fromTemplate(this.getCommitDescriptionTemplate(), this.commit, {\n                          truncateMessageAtNewLine: true,\n                          dateFormat: Container.config.defaultDateFormat\n                      } as ICommitFormatOptions)\n                    : StatusFileFormatter.fromTemplate(this.getCommitFileDescriptionTemplate(), this.file, {\n                          relativePath: this.relativePath\n                      } as IStatusFormatOptions);\n        }\n        return this._description;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.getRelativePath());\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label =\n                this._displayAs & CommitFileNodeDisplayAs.CommitLabel\n                    ? CommitFormatter.fromTemplate(this.getCommitTemplate(), this.commit, {\n                          truncateMessageAtNewLine: true,\n                          dateFormat: Container.config.defaultDateFormat\n                      } as ICommitFormatOptions)\n                    : StatusFileFormatter.fromTemplate(this.getCommitFileTemplate(), this.file, {\n                          relativePath: this.relativePath\n                      } as IStatusFormatOptions);\n        }\n        return this._label;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n        this._tooltip = undefined;\n    }\n\n    protected get resourceType(): string {\n        if (!this.commit.isUncommitted) return ResourceType.CommitFile;\n\n        return this.commit.isStagedUncommitted ? `${ResourceType.File}+staged` : `${ResourceType.File}+unstaged`;\n    }\n\n    private _tooltip: string | undefined;\n    get tooltip() {\n        if (this._tooltip === undefined) {\n            if (this._displayAs & CommitFileNodeDisplayAs.CommitLabel) {\n                const status = StatusFileFormatter.fromTemplate('${status}', this.file);\n                this._tooltip = CommitFormatter.fromTemplate(\n                    this.commit.isUncommitted\n                        ? `\\${author} ${GlyphChars.Dash} \\${id}\\n${status}\\n\\${ago} (\\${date})`\n                        : `\\${author} ${GlyphChars.Dash} \\${id}\\n${status}\\n\\${ago} (\\${date})\\n\\n\\${message}`,\n                    this.commit,\n                    {\n                        dateFormat: Container.config.defaultDateFormat\n                    } as ICommitFormatOptions\n                );\n            }\n            else {\n                this._tooltip = StatusFileFormatter.fromTemplate('${file}\\n${directory}/\\n\\n${status}', this.file);\n            }\n        }\n        return this._tooltip;\n    }\n\n    protected getCommitTemplate() {\n        return this.view.config.commitFormat;\n    }\n\n    protected getCommitDescriptionTemplate() {\n        return this.view.config.commitDescriptionFormat;\n    }\n\n    protected getCommitFileTemplate() {\n        return this.view.config.commitFileFormat;\n    }\n\n    protected getCommitFileDescriptionTemplate() {\n        return this.view.config.commitFileDescriptionFormat;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                GitUri.fromFile(this.file, this.commit.repoPath),\n                {\n                    commit: this.commit,\n                    line: this._selection !== undefined ? this._selection.active.line : 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n    }\n}\n","'use strict';\nimport { ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout, ViewsFilesConfig } from '../../configuration';\nimport { GitUri } from '../../git/gitService';\nimport { Arrays, Objects } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport interface FileNode extends ViewNode {\n    folderName: string;\n    label?: string;\n    priority: number;\n    relativePath?: string;\n    root?: Arrays.IHierarchicalItem<FileNode>;\n}\n\nexport class FolderNode extends ViewNode<ViewWithFiles> {\n    readonly priority: number = 1;\n\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        public readonly folderName: string,\n        public readonly root: Arrays.IHierarchicalItem<FileNode>,\n        private readonly containsWorkingFiles?: boolean,\n        public readonly relativePath?: string\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    async getChildren(): Promise<(FolderNode | FileNode)[]> {\n        if (this.root.descendants === undefined || this.root.children === undefined) return [];\n\n        let children: (FolderNode | FileNode)[];\n\n        const nesting = FolderNode.getFileNesting(\n            this.view.config.files,\n            this.root.descendants,\n            this.relativePath === undefined\n        );\n        if (nesting !== ViewFilesLayout.List) {\n            children = [];\n            for (const folder of this.root.children.values()) {\n                if (folder.value === undefined) {\n                    children.push(\n                        new FolderNode(\n                            this.view,\n                            this,\n                            this.repoPath,\n                            folder.name,\n                            folder,\n                            this.containsWorkingFiles,\n                            folder.relativePath\n                        )\n                    );\n                    continue;\n                }\n\n                folder.value.relativePath = this.root.relativePath;\n                children.push(folder.value);\n            }\n        }\n        else {\n            this.root.descendants.forEach(n => (n.relativePath = this.root.relativePath));\n            children = this.root.descendants;\n        }\n\n        children.sort((a, b) => {\n            return (\n                (a instanceof FolderNode ? -1 : 1) - (b instanceof FolderNode ? -1 : 1) ||\n                a.priority - b.priority ||\n                a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        });\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        // TODO: Change this to expanded once https://github.com/Microsoft/vscode/issues/30918 is fixed\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.Folder;\n        if (this.containsWorkingFiles) {\n            item.contextValue += `+working`;\n        }\n        item.iconPath = ThemeIcon.Folder;\n        item.tooltip = this.label;\n        return item;\n    }\n\n    get label(): string {\n        return this.folderName;\n    }\n\n    static getFileNesting<T extends FileNode>(\n        config: ViewsFilesConfig,\n        children: T[],\n        isRoot: boolean\n    ): ViewFilesLayout {\n        const nesting = config.layout || ViewFilesLayout.Auto;\n        if (nesting === ViewFilesLayout.Auto) {\n            if (isRoot || config.compact) {\n                const nestingThreshold = config.threshold || 5;\n                if (children.length <= nestingThreshold) return ViewFilesLayout.List;\n            }\n            return ViewFilesLayout.Tree;\n        }\n        return nesting;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { ViewFilesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { CommitFormatter, GitBranch, GitLogCommit, ICommitFormatOptions } from '../../git/gitService';\nimport { Arrays, Iterables, Strings } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { FileNode, FolderNode } from './folderNode';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class CommitNode extends ViewRefNode<ViewWithFiles> {\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly commit: GitLogCommit,\n        public readonly branch?: GitBranch,\n        private readonly getBranchAndTagTips?: (sha: string) => string | undefined\n    ) {\n        super(commit.toGitUri(), view, parent);\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const commit = this.commit;\n        let children: FileNode[] = [\n            ...Iterables.map(\n                commit.files,\n                s => new CommitFileNode(this.view, this, s, commit.toFileCommit(s), CommitFileNodeDisplayAs.File)\n            )\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.getRelativePath().split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, this.repoPath, '', hierarchy);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort((a, b) =>\n                a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        let label = CommitFormatter.fromTemplate(this.view.config.commitFormat, this.commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n\n        const branchAndTagTips = this.getBranchAndTagTips && this.getBranchAndTagTips(this.commit.sha);\n        if (branchAndTagTips !== undefined) {\n            label = `${GlyphChars.AngleBracketLeftHeavy}${GlyphChars.SpaceThin}${branchAndTagTips}${\n                GlyphChars.SpaceThin\n            }${GlyphChars.AngleBracketRightHeavy}${GlyphChars.ArrowHeadRight}${GlyphChars.Space} ${label}`;\n        }\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.Commit;\n        if (this.branch === undefined || this.branch.current) {\n            item.contextValue += '+current';\n        }\n        item.description = CommitFormatter.fromTemplate(this.view.config.commitDescriptionFormat, this.commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n\n        if (this.view.config.avatars) {\n            item.iconPath = this.commit.getGravatarUri(Container.config.defaultGravatarsStyle);\n        }\n        else {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath('images/dark/icon-commit.svg'),\n                light: Container.context.asAbsolutePath('images/light/icon-commit.svg')\n            };\n        }\n\n        item.tooltip = CommitFormatter.fromTemplate(\n            this.commit.isUncommitted\n                ? `\\${author} ${GlyphChars.Dash} \\${id}\\n\\${ago} (\\${date})`\n                : `\\${author} \\${(email) }${GlyphChars.Dash} \\${id}${\n                      branchAndTagTips !== undefined ? ` (${branchAndTagTips})` : ''\n                  }\\n\\${ago} (\\${date})\\n\\n\\${message}`,\n            this.commit,\n            {\n                dateFormat: Container.config.defaultDateFormat\n            } as ICommitFormatOptions\n        );\n\n        if (!this.commit.isUncommitted) {\n            item.tooltip += this.commit.getFormattedDiffStatus({\n                expand: true,\n                prefix: '\\n\\n',\n                separator: '\\n'\n            });\n        }\n\n        return item;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                this.uri,\n                {\n                    commit: this.commit,\n                    line: 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n    }\n}\n","import { Command, ThemeIcon, TreeItem, TreeItemCollapsibleState, Uri } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { View } from '../viewBase';\nimport { RefreshNodeCommandArgs } from '../viewCommands';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class MessageNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        private readonly _message: string,\n        private readonly _description?: string,\n        private readonly _tooltip?: string,\n        private readonly _iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this._message, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.Message;\n        item.description = this._description;\n        item.tooltip = this._tooltip;\n        item.iconPath = this._iconPath;\n        return item;\n    }\n}\n\nexport class CommandMessageNode extends MessageNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        private readonly _command: Command,\n        message: string,\n        description?: string,\n        tooltip?: string,\n        iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(view, parent, message, description, tooltip, iconPath);\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = super.getTreeItem();\n        if (item instanceof TreeItem) {\n            item.command = this._command;\n            return item;\n        }\n\n        return item.then(i => {\n            i.command = this._command;\n            return i;\n        });\n    }\n}\n\nexport class UpdateableMessageNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly id: string,\n        private _message: string,\n        private _tooltip?: string,\n        private _iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this._message, TreeItemCollapsibleState.None);\n        item.id = this.id;\n        item.contextValue = ResourceType.Message;\n        item.tooltip = this._tooltip;\n        item.iconPath = this._iconPath;\n        return item;\n    }\n\n    update(\n        changes: {\n            message?: string;\n            tooltip?: string | null;\n            iconPath?:\n                | string\n                | null\n                | Uri\n                | {\n                      light: string | Uri;\n                      dark: string | Uri;\n                  }\n                | ThemeIcon;\n        },\n        view: View\n    ) {\n        if (changes.message !== undefined) {\n            this._message = changes.message;\n        }\n\n        if (changes.tooltip !== undefined) {\n            this._tooltip = changes.tooltip === null ? undefined : changes.tooltip;\n        }\n\n        if (changes.iconPath !== undefined) {\n            this._iconPath = changes.iconPath === null ? undefined : changes.iconPath;\n        }\n\n        view.triggerNodeChange(this);\n    }\n}\n\nexport abstract class PagerNode extends ViewNode {\n    protected _args: RefreshNodeCommandArgs = {};\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        protected readonly message: string\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this.message, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.Pager;\n        item.command = this.getCommand();\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-unfold.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-unfold.svg')\n        };\n        return item;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Refresh',\n            command: 'gitlens.views.refreshNode',\n            arguments: [this.parent, false, this._args]\n        } as Command;\n    }\n}\n\nexport class ShowMoreNode extends PagerNode {\n    constructor(view: View, parent: ViewNode, type: string, maxCount: number = Container.config.advanced.maxListItems) {\n        super(\n            view,\n            parent,\n            maxCount === 0\n                ? `Show All ${type} ${GlyphChars.Space}${GlyphChars.Dash}${GlyphChars.Space} this may take a while`\n                : `Show More ${type}`\n        );\n        this._args.maxCount = maxCount;\n    }\n}\n","'use strict';\nimport { Container } from '../../container';\nimport { GitLogCommit } from '../../git/gitService';\nimport { Arrays } from '../../system';\nimport { MessageNode } from './common';\nimport { ViewNode } from './viewNode';\n\nexport async function getBranchesAndTagTipsFn(repoPath: string | undefined, currentName?: string) {\n    const [branches, tags] = await Promise.all([\n        Container.git.getBranches(repoPath),\n        Container.git.getTags(repoPath, { includeRefs: true })\n    ]);\n\n    const branchesAndTagsBySha = Arrays.groupByFilterMap(\n        (branches as { name: string; sha: string }[]).concat(tags as { name: string; sha: string }[]),\n        bt => bt.sha!,\n        bt => (bt.name === currentName ? undefined : bt.name)\n    );\n\n    return (sha: string) => {\n        const branchesAndTags = branchesAndTagsBySha.get(sha);\n        if (branchesAndTags === undefined || branchesAndTags.length === 0) return undefined;\n        return branchesAndTags.join(', ');\n    };\n}\n\nconst markers: [number, string][] = [\n    [0, 'Less than a week ago'],\n    [7, 'Over a week ago'],\n    [30, 'Over a month ago'],\n    [90, 'Over 3 months ago']\n];\n\nexport function* insertDateMarkers<T extends ViewNode & { commit: GitLogCommit }>(\n    iterable: Iterable<T>,\n    parent: ViewNode,\n    skip?: number\n): Iterable<ViewNode> {\n    if (!parent.view.config.showRelativeDateMarkers) {\n        return yield* iterable;\n    }\n\n    let index = skip || 0;\n    let time = undefined;\n    const now = Date.now();\n\n    let first = true;\n\n    for (const node of iterable) {\n        if (index < markers.length) {\n            let [daysAgo, marker] = markers[index];\n            if (time === undefined) {\n                const date = new Date(now);\n                time = date.setDate(date.getDate() - daysAgo);\n            }\n\n            const date = new Date(node.commit.committedDate.setUTCHours(0, 0, 0, 0)).getTime();\n            if (date <= time) {\n                while (index < markers.length - 1) {\n                    [daysAgo] = markers[index + 1];\n                    const nextDate = new Date(now);\n                    const nextTime = nextDate.setDate(nextDate.getDate() - daysAgo);\n\n                    if (date > nextTime) break;\n\n                    index++;\n                    time = undefined;\n                    [, marker] = markers[index];\n                }\n\n                // Don't show the last marker as the first entry -- since it could be wildly far off\n                if (!first || index < markers.length - 1) {\n                    yield new MessageNode(parent.view, parent, marker);\n                }\n\n                index++;\n                time = undefined;\n            }\n        }\n\n        first = false;\n        yield node;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitTrackingState, GitUri } from '../../git/gitService';\nimport { Iterables, Strings } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { CommitNode } from './commitNode';\nimport { ShowMoreNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode } from './viewNode';\n\nexport interface BranchTrackingStatus {\n    ref: string;\n    repoPath: string;\n    state: GitTrackingState;\n    upstream?: string;\n}\n\nexport class BranchTrackingStatusNode extends ViewNode<ViewWithFiles> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly status: BranchTrackingStatus,\n        public readonly direction: 'ahead' | 'behind',\n        // Specifies that the node is shown as a root under the repository node\n        private readonly _root: boolean = false\n    ) {\n        super(GitUri.fromRepoPath(status.repoPath), view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.status.repoPath}):${this._root ? 'root:' : ''}branch(${\n            this.status.ref\n        }):status:upstream:(${this.status.upstream}):${this.direction}`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const ahead = this.direction === 'ahead';\n        const range = ahead\n            ? `${this.status.upstream}..${this.status.ref}`\n            : `${this.status.ref}..${this.status.upstream}`;\n\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: this.maxCount || this.view.config.defaultItemLimit,\n            ref: range\n        });\n        if (log === undefined) return [];\n\n        let children;\n        if (ahead) {\n            // Since the last commit when we are looking 'ahead' can have no previous (because of the range given) -- look it up\n            const commits = [...log.commits.values()];\n            const commit = commits[commits.length - 1];\n            if (commit.previousSha === undefined) {\n                const previousLog = await Container.git.getLog(this.uri.repoPath!, { maxCount: 2, ref: commit.sha });\n                if (previousLog !== undefined) {\n                    commits[commits.length - 1] = Iterables.first(previousLog.commits.values());\n                }\n            }\n\n            children = [...insertDateMarkers(Iterables.map(commits, c => new CommitNode(this.view, this, c)), this, 1)];\n        }\n        else {\n            children = [\n                ...insertDateMarkers(\n                    Iterables.map(log.commits.values(), c => new CommitNode(this.view, this, c)),\n                    this,\n                    1\n                )\n            ];\n        }\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Commits'));\n        }\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const ahead = this.direction === 'ahead';\n        const label = ahead\n            ? `${Strings.pluralize('commit', this.status.state.ahead)} ahead`\n            : `${Strings.pluralize('commit', this.status.state.behind)} behind`;\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        if (this._root) {\n            item.contextValue = ahead ? ResourceType.StatusAheadOfUpstream : ResourceType.StatusBehindUpstream;\n        }\n        else {\n            item.contextValue = ahead\n                ? ResourceType.BranchStatusAheadOfUpstream\n                : ResourceType.BranchStatusBehindUpstream;\n        }\n        item.tooltip = `${label}${ahead ? ' of ' : ''}${this.status.upstream}`;\n\n        const iconSuffix = ahead ? 'upload' : 'download';\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-${iconSuffix}.svg`)\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitBranch, GitUri } from '../../git/gitService';\nimport { debug, gate, Iterables, log } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchTrackingStatusNode } from './branchTrackingStatusNode';\nimport { CommitNode } from './commitNode';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class BranchNode extends ViewRefNode<RepositoriesView> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    private _children: ViewNode[] | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly branch: GitBranch,\n        // Specifies that the node is shown as a root under the repository node\n        private readonly _root: boolean = false\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.branch.repoPath})${this._root ? ':root:' : ''}:branch(${\n            this.branch.name\n        })${this.branch.current ? '+current:' : ''}${this.branch.remote ? '+remote' : ''}${\n            this.branch.starred ? '+starred:' : ''\n        }`;\n    }\n\n    get current(): boolean {\n        return this.branch.current;\n    }\n\n    get label(): string {\n        const branchName = this.branch.getName();\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchName;\n\n        return (this._root && this.current) || this.branch.detached || this.branch.starred\n            ? branchName\n            : this.branch.getBasename();\n    }\n\n    get ref(): string {\n        return this.branch.ref;\n    }\n\n    get treeHierarchy(): string[] {\n        return this.branch.detached || this.branch.starred ? [this.branch.name] : this.branch.getName().split('/');\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const children = [];\n            if (!this._root && this.branch.tracking) {\n                const status = {\n                    ref: this.branch.ref,\n                    repoPath: this.branch.repoPath,\n                    state: this.branch.state,\n                    upstream: this.branch.tracking\n                };\n\n                if (this.branch.state.behind) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'behind'));\n                }\n\n                if (this.branch.state.ahead) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'ahead'));\n                }\n            }\n\n            const log = await Container.git.getLog(this.uri.repoPath!, {\n                maxCount: this.maxCount || this.view.config.defaultItemLimit,\n                ref: this.ref\n            });\n            if (log === undefined) return [new MessageNode(this.view, this, 'No commits could be found.')];\n\n            const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath, this.branch.name);\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.map(\n                        log.commits.values(),\n                        c => new CommitNode(this.view, this, c, this.branch, getBranchAndTagTips)\n                    ),\n                    this\n                )\n            );\n\n            if (log.truncated) {\n                children.push(new ShowMoreNode(this.view, this, 'Commits'));\n            }\n\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const name = this.label;\n        let tooltip = `${this.branch.getName()}${this.current ? ' (current)' : ''}`;\n        let iconSuffix = '';\n\n        let description;\n        if (!this.branch.remote && this.branch.tracking !== undefined) {\n            if (this.view.config.showTrackingBranch) {\n                description = `${this.branch.getTrackingStatus({ suffix: `${GlyphChars.Space} ` })}${\n                    GlyphChars.ArrowLeftRightLong\n                }${GlyphChars.Space} ${this.branch.tracking}`;\n            }\n            tooltip += ` is tracking ${this.branch.tracking}\\n${this.branch.getTrackingStatus({\n                empty: 'up-to-date',\n                expand: true,\n                separator: '\\n'\n            })}`;\n\n            if (this.branch.state.ahead || this.branch.state.behind) {\n                if (this.branch.state.behind) {\n                    iconSuffix = '-red';\n                }\n                if (this.branch.state.ahead) {\n                    iconSuffix = this.branch.state.behind ? '-yellow' : '-green';\n                }\n            }\n        }\n\n        const item = new TreeItem(\n            // Hide the current branch checkmark when the node is displayed as a root under the repository node\n            `${!this._root && this.current ? `${GlyphChars.Check} ${GlyphChars.Space}` : ''}${name}`,\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.contextValue = ResourceType.Branch;\n        if (this.current) {\n            item.contextValue += '+current';\n        }\n        if (this.branch.remote) {\n            item.contextValue += '+remote';\n        }\n        if (this.branch.starred) {\n            item.contextValue += '+starred';\n        }\n        if (this.branch.tracking) {\n            item.contextValue += '+tracking';\n        }\n\n        item.description = description;\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-branch${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-branch${iconSuffix}.svg`)\n        };\n        item.id = this.id;\n        item.tooltip = tooltip;\n\n        return item;\n    }\n\n    @log()\n    async star() {\n        await this.branch.star();\n        void this.parent!.triggerChange();\n    }\n\n    @log()\n    async unstar() {\n        await this.branch.unstar();\n        void this.parent!.triggerChange();\n    }\n\n    @gate()\n    @debug()\n    refresh() {\n        this._children = undefined;\n    }\n}\n","'use strict';\nimport { ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GitUri } from '../../git/gitService';\nimport { Arrays, Objects } from '../../system';\nimport { View } from '../viewBase';\nimport { BranchNode } from './branchNode';\nimport { TagNode } from './tagNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nconst set = new Set();\n\nexport class BranchOrTagFolderNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly type: 'branch' | 'remote-branch' | 'tag',\n        public readonly repoPath: string,\n        public readonly folderName: string,\n        public readonly relativePath: string | undefined,\n        public readonly root: Arrays.IHierarchicalItem<BranchNode | TagNode>,\n        private readonly _expanded: boolean = false\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repoPath}):${this.type}-folder(${this.relativePath})`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this.root.descendants === undefined || this.root.children === undefined) return [];\n\n        const children: (BranchOrTagFolderNode | BranchNode | TagNode)[] = [];\n\n        for (const folder of this.root.children.values()) {\n            if (folder.value === undefined) {\n                // If the folder contains the current branch, expand it by default\n                const expanded =\n                    folder.descendants !== undefined &&\n                    folder.descendants.some(n => n instanceof BranchNode && n.current);\n                children.push(\n                    new BranchOrTagFolderNode(\n                        this.view,\n                        this,\n                        this.type,\n                        this.repoPath,\n                        folder.name,\n                        folder.relativePath,\n                        folder,\n                        expanded\n                    )\n                );\n                continue;\n            }\n\n            children.push(folder.value);\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(\n            this.label,\n            this._expanded ? TreeItemCollapsibleState.Expanded : TreeItemCollapsibleState.Collapsed\n        );\n        item.id = this.id;\n        item.contextValue = ResourceType.Folder;\n        item.iconPath = ThemeIcon.Folder;\n        item.tooltip = this.label;\n        return item;\n    }\n\n    get label(): string {\n        return this.folderName;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Arrays, Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchNode } from './branchNode';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class BranchesNode extends ViewNode<RepositoriesView> {\n    private _children: ViewNode[] | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):branches`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const branches = await this.repo.getBranches();\n            if (branches === undefined) return [];\n\n            branches.sort(\n                (a, b) =>\n                    (a.starred ? -1 : 1) - (b.starred ? -1 : 1) ||\n                    a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n            );\n\n            // filter local branches\n            const branchNodes = [\n                ...Iterables.filterMap(branches, b =>\n                    b.remote ? undefined : new BranchNode(this.uri, this.view, this, b)\n                )\n            ];\n            if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchNodes;\n\n            const hierarchy = Arrays.makeHierarchical(\n                branchNodes,\n                n => n.treeHierarchy,\n                (...paths: string[]) => paths.join('/'),\n                this.view.config.files.compact\n            );\n\n            const root = new BranchOrTagFolderNode(this.view, this, 'branch', this.repo.path, '', undefined, hierarchy);\n            this._children = await root.getChildren();\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const remotes = await this.repo.getRemotes();\n\n        const item = new TreeItem(`Branches`, TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.Branches;\n        if (remotes !== undefined && remotes.length > 0) {\n            item.contextValue += '+remotes';\n        }\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-branch.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-branch.svg')\n        };\n        item.id = this.id;\n\n        return item;\n    }\n\n    refresh() {\n        this._children = undefined;\n    }\n}\n","'use strict';\nimport { Disposable, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport {\n    GitCommitType,\n    GitLogCommit,\n    GitService,\n    GitUri,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { MessageNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class FileHistoryNode extends SubscribeableViewNode {\n    constructor(uri: GitUri, view: View, parent: ViewNode) {\n        super(uri, view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const children: ViewNode[] = [];\n\n        const displayAs =\n            CommitFileNodeDisplayAs.CommitLabel |\n            (this.view.config.avatars ? CommitFileNodeDisplayAs.Gravatar : CommitFileNodeDisplayAs.StatusIcon);\n\n        if (this.uri.sha === undefined) {\n            const status = await Container.git.getStatusForFile(this.uri.repoPath!, this.uri.fsPath);\n            if (status !== undefined && (status.indexStatus !== undefined || status.workingTreeStatus !== undefined)) {\n                let sha;\n                let previousSha;\n                if (status.workingTreeStatus !== undefined) {\n                    sha = GitService.uncommittedSha;\n                    if (status.indexStatus !== undefined) {\n                        previousSha = GitService.stagedUncommittedSha;\n                    }\n                    else if (status.workingTreeStatus !== '?') {\n                        previousSha = 'HEAD';\n                    }\n                }\n                else {\n                    sha = GitService.stagedUncommittedSha;\n                    previousSha = 'HEAD';\n                }\n\n                const user = await Container.git.getCurrentUser(this.uri.repoPath!);\n                const commit = new GitLogCommit(\n                    GitCommitType.File,\n                    this.uri.repoPath!,\n                    sha,\n                    'You',\n                    user !== undefined ? user.email : undefined,\n                    new Date(),\n                    new Date(),\n                    '',\n                    status.fileName,\n                    [status],\n                    status.status,\n                    status.originalFileName,\n                    previousSha,\n                    status.originalFileName || status.fileName\n                );\n                children.push(new CommitFileNode(this.view, this, status, commit, displayAs));\n            }\n        }\n\n        const log = await Container.git.getLogForFile(this.uri.repoPath, this.uri.fsPath, {\n            ref: this.uri.sha\n        });\n        if (log !== undefined) {\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.map(\n                        log.commits.values(),\n                        c => new CommitFileNode(this.view, this, c.files[0], c, displayAs)\n                    ),\n                    this\n                )\n            );\n        }\n\n        if (children.length === 0) return [new MessageNode(this.view, this, 'No file history could be found.')];\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(\n            `${this.uri.getFilename()}${\n                this.uri.sha\n                    ? ` ${\n                          this.uri.sha === GitService.deletedOrMissingSha ? this.uri.shortSha : `(${this.uri.shortSha})`\n                      }`\n                    : ''\n            }`,\n            TreeItemCollapsibleState.Expanded\n        );\n        item.contextValue = ResourceType.FileHistory;\n        item.description = this.uri.getDirectory();\n        item.tooltip = `History of ${this.uri.getFilename()}\\n${this.uri.getDirectory()}/${\n            this.uri.sha === undefined ? '' : `\\n\\n${this.uri.sha}`\n        }`;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-history.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-history.svg')\n        };\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @debug()\n    protected async subscribe() {\n        const repo = await Container.git.getRepository(this.uri);\n        if (repo === undefined) return undefined;\n\n        const subscription = Disposable.from(\n            repo.onDidChange(this.onRepoChanged, this),\n            repo.onDidChangeFileSystem(this.onRepoFileSystemChanged, this),\n            { dispose: () => repo.stopWatchingFileSystem() }\n        );\n\n        repo.startWatchingFileSystem();\n\n        return subscription;\n    }\n\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        Logger.log(`FileHistoryNode.onRepoChanged(${e.changes.join()}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n\n    private onRepoFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        if (!e.uris.some(uri => uri.toString(true) === this.uri.toString(true))) return;\n\n        Logger.debug(\n            `FileHistoryNode${this.id}.onRepoFileSystemChanged(${this.uri.toString(true)}); triggering node refresh`\n        );\n\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport {\n    CancellationTokenSource,\n    commands,\n    QuickPickItem,\n    QuickPickOptions,\n    TextDocumentShowOptions,\n    TextEditor,\n    Uri,\n    window\n} from 'vscode';\nimport { Commands, openEditor } from '../commands';\nimport { configuration } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitLogCommit, GitRepoSearchBy, GitStashCommit, GitUri } from '../git/gitService';\nimport { KeyMapping, Keys } from '../keyboard';\nimport { Strings } from '../system';\nimport {\n    BranchesAndTagsQuickPick,\n    BranchQuickPickItem,\n    RefQuickPickItem,\n    TagQuickPickItem\n} from './branchesAndTagsQuickPick';\n\nexport function getQuickPickIgnoreFocusOut() {\n    return !configuration.get<boolean>(configuration.name('advanced')('quickPick')('closeOnFocusOut').value);\n}\n\nexport function showQuickPickProgress(message: string, mapping?: KeyMapping): CancellationTokenSource {\n    const cancellation = new CancellationTokenSource();\n    void _showQuickPickProgress(message, cancellation, mapping);\n    return cancellation;\n}\n\nasync function _showQuickPickProgress(message: string, cancellation: CancellationTokenSource, mapping?: KeyMapping) {\n    const scope = mapping && (await Container.keyboard.beginScope(mapping));\n\n    try {\n        await window.showQuickPick(\n            _getInfiniteCancellablePromise(cancellation),\n            {\n                placeHolder: message,\n                ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            } as QuickPickOptions,\n            cancellation.token\n        );\n    }\n    catch (ex) {\n        // Not sure why this throws\n    }\n    finally {\n        cancellation.cancel();\n        scope && scope.dispose();\n    }\n}\n\nfunction _getInfiniteCancellablePromise(cancellation: CancellationTokenSource) {\n    return new Promise<QuickPickItem[]>((resolve, reject) => {\n        const disposable = cancellation.token.onCancellationRequested(() => {\n            disposable.dispose();\n            resolve([]);\n        });\n    });\n}\n\nexport interface QuickPickItem extends QuickPickItem {\n    onDidSelect?(): void;\n    onDidPressKey?(key: Keys): Promise<{} | undefined>;\n}\n\nexport class CommandQuickPickItem implements QuickPickItem {\n    label!: string;\n    description!: string;\n    detail?: string | undefined;\n    protected command: Commands | undefined;\n    protected args: any[] | undefined;\n\n    constructor(item: QuickPickItem, args?: [Commands, any[]]);\n    constructor(item: QuickPickItem, command?: Commands, args?: any[]);\n    constructor(item: QuickPickItem, commandOrArgs?: Commands | [Commands, any[]], args?: any[]) {\n        if (commandOrArgs === undefined) {\n            this.command = undefined;\n            this.args = args;\n        }\n        else if (typeof commandOrArgs === 'string') {\n            this.command = commandOrArgs;\n            this.args = args;\n        }\n        else {\n            this.command = commandOrArgs[0];\n            this.args = commandOrArgs.slice(1);\n        }\n        Object.assign(this, item);\n    }\n\n    execute(): Promise<{} | undefined> {\n        if (this.command === undefined) return Promise.resolve(undefined);\n\n        return commands.executeCommand(this.command, ...(this.args || [])) as Promise<{} | undefined>;\n    }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return this.execute();\n    }\n}\n\nexport class CommitQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string;\n\n    constructor(\n        public readonly commit: GitLogCommit\n    ) {\n        const message = commit.getShortMessage();\n        if (commit.isStash) {\n            this.label = message;\n            this.description = '';\n            this.detail = `${GlyphChars.Space} ${(commit as GitStashCommit).stashName || commit.shortSha} ${Strings.pad(\n                GlyphChars.Dot,\n                1,\n                1\n            )} ${commit.formattedDate} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getFormattedDiffStatus({\n                compact: true\n            })}`;\n        }\n        else {\n            this.label = message;\n            this.description = `${Strings.pad('$(git-commit)', 1, 1)} ${commit.shortSha}`;\n            this.detail = `${GlyphChars.Space} ${commit.author}, ${commit.formattedDate}${\n                commit.isFile\n                    ? ''\n                    : ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getFormattedDiffStatus({ compact: true })}`\n            }`;\n        }\n    }\n}\n\nexport class ChooseFromBranchesAndTagsQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        private readonly repoPath: string,\n        private readonly placeHolder: string,\n        private readonly _goBack?: CommandQuickPickItem,\n        item: QuickPickItem = {\n            label: 'Choose from Branch or Tag History...',\n            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} shows list of branches and tags`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    execute(): Promise<CommandQuickPickItem | BranchQuickPickItem | TagQuickPickItem | RefQuickPickItem | undefined> {\n        return new BranchesAndTagsQuickPick(this.repoPath).show(this.placeHolder, {\n            allowCommitId: true,\n            goBack: this._goBack\n        });\n    }\n}\n\nexport class KeyCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(command: Commands, args?: any[]) {\n        super({ label: '', description: '' } as QuickPickItem, command, args);\n    }\n}\n\nexport class MessageQuickPickItem extends CommandQuickPickItem {\n    constructor(message: string) {\n        super({ label: message, description: '' } as QuickPickItem);\n    }\n}\n\nexport class OpenFileCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly uri: Uri,\n        item: QuickPickItem\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(options?: TextDocumentShowOptions): Promise<TextEditor | undefined> {\n        return openEditor(this.uri, options);\n    }\n\n    // onDidSelect(): Promise<{} | undefined> {\n    //     return this.execute({\n    //         preserveFocus: true,\n    //         preview: true\n    //     });\n    // }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return this.execute({\n            preserveFocus: true,\n            preview: false\n        });\n    }\n}\n\nexport class OpenFilesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly uris: Uri[],\n        item: QuickPickItem\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ): Promise<{} | undefined> {\n        for (const uri of this.uris) {\n            await openEditor(uri, options);\n        }\n        return undefined;\n    }\n\n    async onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return this.execute({\n            preserveFocus: true,\n            preview: false\n        });\n    }\n}\n\nexport class ShowCommitInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly commit: GitLogCommit,\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} displays the commit in the GitLens Search Commits view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        await Container.searchView.search(this.commit.repoPath, this.commit.sha, GitRepoSearchBy.Sha, {\n            label: { label: `commits with an id matching '${this.commit.shortSha}'` }\n        });\n        return undefined;\n    }\n}\n\nexport class ShowCommitSearchResultsInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly search: string,\n        public readonly searchBy: GitRepoSearchBy,\n        public readonly results: GitLog,\n        public readonly resultsLabel: string | { label: string; resultsType?: { singular: string; plural: string } },\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(\n                GlyphChars.Dash,\n                2,\n                2\n            )} displays the search results in the GitLens Search Commits view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        await Container.searchView.showSearchResults(this.results.repoPath, this.search, this.searchBy, this.results, {\n            label: this.resultsLabel\n        });\n        return undefined;\n    }\n}\n\nexport class ShowFileHistoryInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly uri: GitUri,\n        public readonly baseRef: string | undefined,\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(\n                GlyphChars.Dash,\n                2,\n                2\n            )} displays the file history in the GitLens File History view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        await Container.fileHistoryView.showHistoryForUri(this.uri, this.baseRef);\n        return undefined;\n    }\n}\n","'use strict';\nimport { CancellationToken, CancellationTokenSource, QuickPickItem, QuickPickOptions, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitService, GitTag } from '../git/gitService';\nimport { Functions } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class RefQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly ref: string,\n        checked?: boolean\n    ) {\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${GitService.shortenSha(\n            ref\n        )}`;\n        this.description = '';\n    }\n\n    get current() {\n        return false;\n    }\n\n    get item() {\n        return undefined;\n    }\n\n    get remote() {\n        return false;\n    }\n}\n\nexport class BranchQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly branch: GitBranch,\n        checked?: boolean\n    ) {\n        checked = checked || (checked === undefined && branch.current);\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${branch.name}`;\n        this.description = branch.remote\n            ? `${GlyphChars.Space.repeat(2)} remote branch`\n            : branch.current\n            ? 'current branch'\n            : '';\n    }\n\n    get current() {\n        return this.branch.current;\n    }\n\n    get item() {\n        return this.branch;\n    }\n\n    get ref() {\n        return this.branch.name;\n    }\n\n    get remote() {\n        return this.branch.remote;\n    }\n}\n\nexport class TagQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly tag: GitBranch | GitTag,\n        checked?: boolean\n    ) {\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${tag.name}`;\n        this.description = `${GlyphChars.Space.repeat(2)} tag`;\n    }\n\n    get current() {\n        return false;\n    }\n\n    get item() {\n        return this.tag;\n    }\n\n    get ref() {\n        return this.tag.name;\n    }\n\n    get remote() {\n        return false;\n    }\n}\n\nexport type BranchAndTagQuickPickResult = BranchQuickPickItem | TagQuickPickItem | RefQuickPickItem;\n\nexport interface BranchesAndTagsQuickPickOptions {\n    allowCommitId?: boolean;\n    autoPick?: boolean;\n    checked?: string;\n    filters?: {\n        branches?(branch: GitBranch): boolean;\n        tags?(tag: GitTag): boolean;\n    };\n    goBack?: CommandQuickPickItem;\n    include?: 'branches' | 'tags' | 'all';\n}\n\nexport class BranchesAndTagsQuickPick {\n    constructor(\n        public readonly repoPath: string\n    ) {}\n\n    async show(\n        placeHolder: string,\n        options: BranchesAndTagsQuickPickOptions = {}\n    ): Promise<BranchAndTagQuickPickResult | CommandQuickPickItem | undefined> {\n        const cancellation = new CancellationTokenSource();\n\n        let scope;\n        if (options.goBack) {\n            scope = await Container.keyboard.beginScope({ left: options.goBack });\n        }\n\n        let autoPick;\n        try {\n            let items = this.getItems(options, cancellation.token);\n            if (options.autoPick) {\n                items = items.then(itms => {\n                    if (itms.length <= 1) {\n                        autoPick = itms[0];\n                        cancellation.cancel();\n                    }\n                    return itms;\n                });\n            }\n\n            let pick;\n            if (options.allowCommitId) {\n                placeHolder += `${GlyphChars.Space.repeat(3)}(use # to enter a commit id)`;\n\n                const quickpick = window.createQuickPick<BranchAndTagQuickPickResult | CommandQuickPickItem>();\n                quickpick.busy = true;\n                quickpick.enabled = false;\n                quickpick.placeholder = placeHolder;\n                quickpick.ignoreFocusOut = getQuickPickIgnoreFocusOut();\n                quickpick.show();\n\n                quickpick.items = await items;\n                quickpick.busy = false;\n                quickpick.enabled = true;\n\n                pick = await new Promise<BranchAndTagQuickPickResult | CommandQuickPickItem | undefined>(resolve => {\n                    cancellation.token.onCancellationRequested(() => quickpick.hide());\n\n                    quickpick.onDidHide(() => resolve(undefined));\n                    quickpick.onDidChangeValue(value => {\n                        quickpick.title =\n                            value && value.startsWith('#')\n                                ? `Please enter a commit id (Press 'Enter' to confirm or 'Escape' to cancel)`\n                                : undefined;\n                    });\n                    quickpick.onDidAccept(async () => {\n                        if (quickpick.selectedItems.length === 0) {\n                            let ref = quickpick.value;\n                            if (!ref || !ref.startsWith('#')) return;\n\n                            ref = ref.substr(1);\n\n                            quickpick.busy = true;\n                            quickpick.enabled = false;\n\n                            if (await Container.git.validateReference(this.repoPath, ref)) {\n                                resolve(new RefQuickPickItem(ref));\n                            }\n                            else {\n                                quickpick.title = 'You must enter a valid commit id';\n                                quickpick.busy = false;\n                                quickpick.enabled = true;\n                                return;\n                            }\n                        }\n                        else {\n                            resolve(quickpick.selectedItems[0]);\n                        }\n\n                        quickpick.hide();\n                    });\n                });\n\n                quickpick.dispose();\n            }\n            else {\n                pick = await window.showQuickPick(\n                    items,\n                    {\n                        placeHolder: placeHolder,\n                        ignoreFocusOut: getQuickPickIgnoreFocusOut()\n                    } as QuickPickOptions,\n                    cancellation.token\n                );\n            }\n\n            if (pick === undefined && autoPick !== undefined) {\n                pick = autoPick;\n            }\n\n            if (pick === undefined) {\n                cancellation.cancel();\n            }\n\n            return pick;\n        }\n        finally {\n            if (scope !== undefined) {\n                await scope.dispose();\n            }\n\n            cancellation.dispose();\n        }\n    }\n\n    private async getItems(options: BranchesAndTagsQuickPickOptions, token: CancellationToken) {\n        const { checked, filters, goBack, include } = { include: 'all', ...options };\n\n        let branches;\n        let tags;\n        switch (include) {\n            case 'branches': {\n                const result = await Functions.cancellable(Container.git.getBranches(this.repoPath), token);\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                branches = result;\n                break;\n            }\n            case 'tags': {\n                const result = await Functions.cancellable(Container.git.getTags(this.repoPath), token);\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                tags = result;\n                break;\n            }\n            default: {\n                const result = await Functions.cancellable(\n                    Promise.all([Container.git.getBranches(this.repoPath), Container.git.getTags(this.repoPath)]),\n                    token\n                );\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                [branches, tags] = result;\n                break;\n            }\n        }\n\n        const items: (BranchQuickPickItem | TagQuickPickItem | CommandQuickPickItem)[] = [];\n\n        if (branches !== undefined) {\n            const filter =\n                filters !== undefined && typeof filters.branches === 'function' ? filters.branches : undefined;\n\n            branches.sort(\n                (a, b) =>\n                    (a.starred ? -1 : 1) - (b.starred ? -1 : 1) ||\n                    (b.remote ? -1 : 1) - (a.remote ? -1 : 1) ||\n                    a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n            );\n            for (const b of branches) {\n                if (filter !== undefined && !filter(b)) continue;\n\n                items.push(new BranchQuickPickItem(b, checked !== undefined ? b.name === checked : undefined));\n            }\n        }\n\n        if (tags !== undefined) {\n            const filter = filters !== undefined && typeof filters.tags === 'function' ? filters.tags : undefined;\n\n            tags.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n            for (const t of tags) {\n                if (filter !== undefined && !filter(t)) continue;\n\n                items.push(new TagQuickPickItem(t, checked !== undefined ? t.name === checked : undefined));\n            }\n        }\n\n        if (goBack !== undefined) {\n            items.splice(0, 0, goBack);\n        }\n\n        return items;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { QuickPickOptions, window } from 'vscode';\nimport { Commands, OpenInRemoteCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport {\n    getNameFromRemoteResource,\n    GitLogCommit,\n    GitRemote,\n    GitService,\n    RemoteResource,\n    RemoteResourceType\n} from '../git/gitService';\nimport { Strings } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class OpenRemoteCommandQuickPickItem extends CommandQuickPickItem {\n    private remote: GitRemote;\n    private resource: RemoteResource;\n\n    constructor(\n        remote: GitRemote,\n        resource: RemoteResource,\n        public readonly clipboard?: boolean\n    ) {\n        super(\n            {\n                label: clipboard\n                    ? `$(link-external) Copy ${getNameFromRemoteResource(resource)} Url to Clipboard from ${\n                          remote.provider!.name\n                      }`\n                    : `$(link-external) Open ${getNameFromRemoteResource(resource)} on ${remote.provider!.name}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(repo) ${remote.provider!.path}`\n            },\n            undefined,\n            undefined\n        );\n\n        this.remote = remote;\n        this.resource = resource;\n    }\n\n    async execute(): Promise<{} | undefined> {\n        if (this.clipboard) return this.remote.provider!.copy(this.resource);\n\n        return this.remote.provider!.open(this.resource);\n    }\n}\n\nexport class OpenRemotesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(remotes: GitRemote[], resource: RemoteResource, goBackCommand?: CommandQuickPickItem) {\n        const name = getNameFromRemoteResource(resource);\n\n        let description = '';\n        switch (resource.type) {\n            case RemoteResourceType.Branch:\n                description = `$(git-branch) ${resource.branch}`;\n                break;\n\n            case RemoteResourceType.Branches:\n                description = `$(git-branch) Branches`;\n                break;\n\n            case RemoteResourceType.Commit:\n                const shortSha = GitService.shortenSha(resource.sha);\n                description = `$(git-commit) ${shortSha}`;\n                break;\n\n            case RemoteResourceType.File:\n                description = `$(file-text) ${paths.basename(resource.fileName)}`;\n                break;\n\n            case RemoteResourceType.Repo:\n                description = `$(repo) Repository`;\n                break;\n\n            case RemoteResourceType.Revision:\n                if (resource.commit !== undefined && resource.commit instanceof GitLogCommit) {\n                    if (resource.commit.status === 'D') {\n                        resource.sha = resource.commit.previousSha;\n                        description = `$(file-text) ${paths.basename(resource.fileName)} in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.previousShortSha} (deleted in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.shortSha})`;\n                    }\n                    else {\n                        resource.sha = resource.commit.sha;\n                        description = `$(file-text) ${paths.basename(resource.fileName)} in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.shortSha}`;\n                    }\n                }\n                else {\n                    const shortFileSha = resource.sha === undefined ? '' : GitService.shortenSha(resource.sha);\n                    description = `$(file-text) ${paths.basename(resource.fileName)}${\n                        shortFileSha ? ` in ${GlyphChars.Space}$(git-commit) ${shortFileSha}` : ''\n                    }`;\n                }\n                break;\n        }\n\n        let remote: GitRemote | undefined;\n        if (remotes.length > 1) {\n            remote = remotes.find(r => r.default);\n        }\n        else if (remotes.length === 1) {\n            remote = remotes[0];\n        }\n\n        if (remote != null) {\n            super(\n                {\n                    label: `$(link-external) Open ${name} on ${remote.provider!.name}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(repo) ${remote.provider!.path} ${Strings.pad(\n                        GlyphChars.Dot,\n                        1,\n                        1\n                    )} ${description}`\n                },\n                Commands.OpenInRemote,\n                [\n                    undefined,\n                    {\n                        remotes,\n                        resource,\n                        goBackCommand\n                    } as OpenInRemoteCommandArgs\n                ]\n            );\n\n            return;\n        }\n\n        remote = remotes[0];\n        // Use the real provider name if there is only 1 provider\n        const provider = remotes.every(r => r.provider !== undefined && r.provider.name === remote!.provider!.name)\n            ? remote.provider!.name\n            : 'Remote';\n\n        super(\n            {\n                label: `$(link-external) Open ${name} on ${provider}${GlyphChars.Ellipsis}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${description}`\n            },\n            Commands.OpenInRemote,\n            [\n                undefined,\n                {\n                    remotes,\n                    resource,\n                    goBackCommand\n                } as OpenInRemoteCommandArgs\n            ]\n        );\n    }\n}\n\nexport class RemotesQuickPick {\n    static async show(\n        remotes: GitRemote[],\n        placeHolder: string,\n        resource: RemoteResource,\n        clipboard?: boolean,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<OpenRemoteCommandQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = remotes.map(r => new OpenRemoteCommandQuickPickItem(r, resource, clipboard)) as (\n            | OpenRemoteCommandQuickPickItem\n            | CommandQuickPickItem)[];\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        // const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n        } as QuickPickOptions);\n        if (pick === undefined) return undefined;\n\n        // await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, QuickPickOptions, window } from 'vscode';\nimport { Commands, ShowQuickBranchHistoryCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri, RemoteResourceType } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class BranchHistoryQuickPick {\n    static showProgress(branch: string) {\n        return showQuickPickProgress(\n            `${branch} history ${GlyphChars.Dash} search by commit message, filename, or commit id`,\n            {\n                left: KeyNoopCommand,\n                ',': KeyNoopCommand,\n                '.': KeyNoopCommand\n            }\n        );\n    }\n\n    static async show(\n        log: GitLog,\n        uri: GitUri | undefined,\n        branch: string,\n        progressCancellation: CancellationTokenSource,\n        goBackCommand?: CommandQuickPickItem,\n        nextPageCommand?: CommandQuickPickItem\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = Array.from(Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))) as (\n            | CommitQuickPickItem\n            | CommandQuickPickItem)[];\n\n        const currentCommand = new CommandQuickPickItem(\n            {\n                label: `go back ${GlyphChars.ArrowBack}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${\n                    GlyphChars.Space\n                }$(git-branch) ${branch} history`\n            },\n            Commands.ShowQuickBranchHistory,\n            [\n                uri,\n                {\n                    branch,\n                    log,\n                    maxCount: log.maxCount,\n                    goBackCommand\n                } as ShowQuickBranchHistoryCommandArgs\n            ]\n        );\n\n        const remotes = await Container.git.getRemotes((uri && uri.repoPath) || log.repoPath);\n        if (remotes.length) {\n            items.splice(\n                0,\n                0,\n                new OpenRemotesCommandQuickPickItem(\n                    remotes,\n                    {\n                        type: RemoteResourceType.Branch,\n                        branch: branch\n                    },\n                    currentCommand\n                )\n            );\n        }\n\n        let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n        if (log.truncated || log.sha) {\n            if (log.truncated) {\n                items.splice(\n                    0,\n                    0,\n                    new CommandQuickPickItem(\n                        {\n                            label: `$(sync) Show All Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [\n                            GitUri.fromRepoPath(log.repoPath),\n                            {\n                                branch,\n                                maxCount: 0,\n                                goBackCommand\n                            } as ShowQuickBranchHistoryCommandArgs\n                        ]\n                    )\n                );\n            }\n\n            if (nextPageCommand) {\n                items.splice(0, 0, nextPageCommand);\n            }\n\n            if (log.truncated) {\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: `$(arrow-right) Show Next Commits`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        uri,\n                        {\n                            branch,\n                            maxCount: log.maxCount,\n                            nextPageCommand\n                        } as ShowQuickBranchHistoryCommandArgs\n                    ]\n                );\n\n                const last = Iterables.last(log.commits.values());\n                if (last != null) {\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-left) Show Previous Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [\n                            new GitUri(uri ? uri : last.uri, last),\n                            {\n                                branch,\n                                maxCount: log.maxCount,\n                                goBackCommand,\n                                nextPageCommand: npc\n                            } as ShowQuickBranchHistoryCommandArgs\n                        ]\n                    );\n\n                    items.splice(0, 0, previousPageCommand);\n                }\n            }\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousPageCommand,\n            '.': nextPageCommand\n        });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: `${branch} history ${GlyphChars.Dash} search by commit message, filename, or commit id`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { QuickPickItem, QuickPickOptions, Uri, window } from 'vscode';\nimport {\n    Commands,\n    CopyMessageToClipboardCommandArgs,\n    CopyShaToClipboardCommandArgs,\n    DiffWithPreviousCommandArgs,\n    DiffWithWorkingCommandArgs,\n    openEditor,\n    ShowQuickCommitDetailsCommandArgs,\n    ShowQuickCommitFileDetailsCommandArgs,\n    ShowQuickFileHistoryCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitLogCommit, GitUri, RemoteResourceType } from '../git/gitService';\nimport { KeyCommand, KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    KeyCommandQuickPickItem,\n    OpenFileCommandQuickPickItem\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class ApplyCommitFileChangesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        private readonly commit: GitLogCommit,\n        item?: QuickPickItem\n    ) {\n        super(\n            item || {\n                label: `$(git-pull-request) Apply Changes`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(file-text) ${paths.basename(\n                    commit.fileName\n                )} in ${GlyphChars.Space}$(git-commit) ${commit.shortSha}`\n            },\n            undefined,\n            undefined\n        );\n    }\n\n    async execute(): Promise<{} | undefined> {\n        const uri = this.commit.toGitUri();\n        void (await openEditor(uri, { preserveFocus: true, preview: false }));\n\n        void (await Container.git.applyChangesToWorkingFile(uri));\n\n        return undefined;\n    }\n}\n\nexport class OpenCommitFileCommandQuickPickItem extends OpenFileCommandQuickPickItem {\n    constructor(commit: GitLogCommit, item?: QuickPickItem) {\n        const uri = GitUri.resolveToUri(commit.fileName, commit.repoPath);\n        super(\n            uri,\n            item || {\n                label: `$(file-symlink-file) Open File`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)}`\n            }\n        );\n    }\n}\n\nexport class OpenCommitFileRevisionCommandQuickPickItem extends OpenFileCommandQuickPickItem {\n    constructor(commit: GitLogCommit, item?: QuickPickItem) {\n        let description: string;\n        let uri: Uri;\n        if (commit.status === 'D') {\n            uri = GitUri.toRevisionUri(commit.previousFileSha, commit.previousUri.fsPath, commit.repoPath);\n            description = `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)} in ${\n                GlyphChars.Space\n            }$(git-commit) ${commit.previousShortSha} (deleted in ${GlyphChars.Space}$(git-commit) ${commit.shortSha})`;\n        }\n        else {\n            uri = GitUri.toRevisionUri(commit.sha, commit.uri.fsPath, commit.repoPath);\n            description = `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)} in ${\n                GlyphChars.Space\n            }$(git-commit) ${commit.shortSha}`;\n        }\n        super(\n            uri,\n            item || {\n                label: `$(file-symlink-file) Open Revision`,\n                description: description\n            }\n        );\n    }\n}\n\nexport class CommitFileQuickPick {\n    static async show(\n        commit: GitLogCommit,\n        uri: Uri,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem,\n        fileLog?: GitLog\n    ): Promise<CommandQuickPickItem | undefined> {\n        const items: CommandQuickPickItem[] = [];\n\n        const stash = commit.isStash;\n\n        const workingName =\n            (commit.workingFileName && paths.basename(commit.workingFileName)) || paths.basename(commit.fileName);\n\n        const isUncommitted = commit.isUncommitted;\n        if (isUncommitted) {\n            // Since we can't trust the previous sha on an uncommitted commit, find the last commit for this file\n            const c = await Container.git.getRecentLogCommitForFile(undefined, commit.uri.fsPath);\n            if (c === undefined) return undefined;\n\n            commit = c;\n        }\n\n        await commit.resolvePreviousFileSha();\n\n        if (stash) {\n            items.push(new ApplyCommitFileChangesCommandQuickPickItem(commit));\n        }\n\n        if (commit.previousFileShortSha) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-compare) Open Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${\n                            commit.previousFileShortSha\n                        } ${GlyphChars.Space} $(git-compare) ${GlyphChars.Space} $(git-commit) ${commit.shortSha}`\n                    },\n                    Commands.DiffWithPrevious,\n                    [\n                        commit.uri,\n                        {\n                            commit\n                        } as DiffWithPreviousCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (commit.workingFileName) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-compare) Open Changes with Working File`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha} ${\n                            GlyphChars.Space\n                        } $(git-compare) ${GlyphChars.Space} $(file-text) ${workingName}`\n                    },\n                    Commands.DiffWithWorking,\n                    [\n                        GitUri.resolveToUri(commit.workingFileName, commit.repoPath),\n                        {\n                            commit\n                        } as DiffWithWorkingCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (commit.workingFileName && commit.status !== 'D') {\n            items.push(new OpenCommitFileCommandQuickPickItem(commit));\n        }\n        items.push(new OpenCommitFileRevisionCommandQuickPickItem(commit));\n\n        const remotes = await Container.git.getRemotes(commit.repoPath);\n        if (remotes.length) {\n            if (commit.workingFileName && commit.status !== 'D') {\n                const branch = await Container.git.getBranch(commit.repoPath);\n                if (branch !== undefined) {\n                    items.push(\n                        new OpenRemotesCommandQuickPickItem(\n                            remotes,\n                            {\n                                type: RemoteResourceType.File,\n                                fileName: commit.workingFileName,\n                                branch: branch.name\n                            },\n                            currentCommand\n                        )\n                    );\n                }\n            }\n\n            if (!stash) {\n                items.push(\n                    new OpenRemotesCommandQuickPickItem(\n                        remotes,\n                        {\n                            type: RemoteResourceType.Revision,\n                            fileName: commit.fileName,\n                            commit: commit\n                        },\n                        currentCommand\n                    )\n                );\n            }\n        }\n\n        if (!stash) {\n            items.push(new ApplyCommitFileChangesCommandQuickPickItem(commit));\n\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(clippy) Copy Commit ID to Clipboard`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.shortSha}`\n                    },\n                    Commands.CopyShaToClipboard,\n                    [\n                        uri,\n                        {\n                            sha: commit.sha\n                        } as CopyShaToClipboardCommandArgs\n                    ]\n                )\n            );\n\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(clippy) Copy Commit Message to Clipboard`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.CopyMessageToClipboard,\n                    [\n                        uri,\n                        {\n                            message: commit.message,\n                            sha: commit.sha\n                        } as CopyMessageToClipboardCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (commit.workingFileName) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(history) Show File History`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(commit.fileName)}`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [\n                        GitUri.resolveToUri(commit.workingFileName, commit.repoPath),\n                        {\n                            fileLog,\n                            goBackCommand: currentCommand\n                        } as ShowQuickFileHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (!stash) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(history) Show ${commit.workingFileName ? 'Previous ' : ''}File History`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(\n                            commit.fileName\n                        )} ${Strings.pad(GlyphChars.Dot, 1, 1)} from ${GlyphChars.Space}$(git-commit) ${\n                            commit.shortSha\n                        }`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [\n                        commit.toGitUri(),\n                        {\n                            goBackCommand: currentCommand\n                        } as ShowQuickFileHistoryCommandArgs\n                    ]\n                )\n            );\n\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-commit) Show Commit Details`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha}`\n                    },\n                    Commands.ShowQuickCommitDetails,\n                    [\n                        commit.toGitUri(),\n                        {\n                            commit,\n                            sha: commit.sha,\n                            goBackCommand: currentCommand\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        let previousCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        let nextCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        if (!stash) {\n            // If we have the full history, we are good\n            if (fileLog !== undefined && !fileLog.truncated && fileLog.sha === undefined) {\n                previousCommand =\n                    commit.previousSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                              commit.previousUri,\n                              {\n                                  fileLog,\n                                  sha: commit.previousSha,\n                                  goBackCommand\n                              } as ShowQuickCommitFileDetailsCommandArgs\n                          ]);\n\n                nextCommand =\n                    commit.nextSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                              commit.nextUri,\n                              {\n                                  fileLog,\n                                  sha: commit.nextSha,\n                                  goBackCommand\n                              } as ShowQuickCommitFileDetailsCommandArgs\n                          ]);\n            }\n            else {\n                previousCommand = async () => {\n                    let log = fileLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the previous commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.previousSha === undefined) {\n                        log = await Container.git.getLogForFile(commit.repoPath, uri.fsPath, {\n                            maxCount: Container.config.advanced.maxListItems,\n                            ref: commit.sha,\n                            renames: true\n                        });\n                        if (log === undefined) return KeyNoopCommand;\n\n                        c = log && log.commits.get(commit.sha);\n                        // Since we exclude merge commits in file log, just grab the first returned commit\n                        if (c === undefined && commit.isMerge) {\n                            c = Iterables.first(log.commits.values());\n                        }\n\n                        if (c) {\n                            // Copy over next info, since it is trustworthy at this point\n                            c.nextSha = commit.nextSha;\n                            c.nextFileName = commit.nextFileName;\n                        }\n                    }\n\n                    if (c === undefined || c.previousSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                        c.previousUri,\n                        {\n                            fileLog: log,\n                            sha: c.previousSha,\n                            goBackCommand\n                        } as ShowQuickCommitFileDetailsCommandArgs\n                    ]);\n                };\n\n                nextCommand = async () => {\n                    let log = fileLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the next commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.nextSha === undefined) {\n                        log = undefined;\n                        c = undefined;\n\n                        // Try to find the next commit\n                        const next = await Container.git.findNextCommit(commit.repoPath, uri.fsPath, commit.sha);\n                        if (next !== undefined && next.sha !== commit.sha) {\n                            c = commit;\n                            c.nextSha = next.sha;\n                            c.nextFileName = next.originalFileName || next.fileName;\n                        }\n                    }\n\n                    if (c === undefined || c.nextSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                        c.nextUri,\n                        {\n                            fileLog: log,\n                            sha: c.nextSha,\n                            goBackCommand\n                        } as ShowQuickCommitFileDetailsCommandArgs\n                    ]);\n                };\n            }\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousCommand,\n            '.': nextCommand\n        });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: `${commit.getFormattedPath()} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                isUncommitted ? `Uncommitted ${GlyphChars.ArrowRightHollow} ` : ''\n            }${commit.shortSha} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.author}, ${\n                commit.formattedDate\n            } ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getShortMessage()}`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item as KeyCommand);\n            }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, QuickPickOptions, TextDocumentShowOptions, Uri, window } from 'vscode';\nimport {\n    Commands,\n    CopyMessageToClipboardCommandArgs,\n    CopyShaToClipboardCommandArgs,\n    DiffDirectoryCommandArgs,\n    DiffWithPreviousCommandArgs,\n    ShowQuickCommitDetailsCommandArgs,\n    StashApplyCommandArgs,\n    StashDeleteCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    GitFile,\n    GitFileStatus,\n    GitLog,\n    GitLogCommit,\n    GitStashCommit,\n    GitUri,\n    RemoteResourceType\n} from '../git/gitService';\nimport { KeyCommand, KeyNoopCommand, Keys } from '../keyboard';\nimport { Arrays, Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    KeyCommandQuickPickItem,\n    OpenFileCommandQuickPickItem,\n    OpenFilesCommandQuickPickItem,\n    QuickPickItem,\n    ShowCommitInViewQuickPickItem\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class CommitWithFileStatusQuickPickItem extends OpenFileCommandQuickPickItem {\n    readonly status: GitFileStatus;\n\n    readonly commit: GitLogCommit;\n\n    constructor(commit: GitLogCommit, file: GitFile) {\n        const octicon = GitFile.getStatusOcticon(file.status);\n        const description = GitFile.getFormattedDirectory(file, true);\n\n        super(GitUri.toRevisionUri(commit.sha, file, commit.repoPath), {\n            label: `${Strings.pad(octicon, 4, 2)} ${paths.basename(file.fileName)}`,\n            description: description\n        });\n\n        this.commit = commit.toFileCommit(file);\n        this.status = file.status;\n    }\n\n    get sha(): string {\n        return this.commit.sha;\n    }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        if (this.commit.previousSha === undefined) return super.onDidPressKey(key);\n\n        return commands.executeCommand(Commands.DiffWithPrevious, this.commit.toGitUri(), {\n            commit: this.commit,\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            } as TextDocumentShowOptions\n        } as DiffWithPreviousCommandArgs) as Promise<{} | undefined>;\n    }\n}\n\nexport class OpenCommitFilesCommandQuickPickItem extends OpenFilesCommandQuickPickItem {\n    constructor(commit: GitLogCommit, versioned: boolean = false, item?: QuickPickItem) {\n        const repoPath = commit.repoPath;\n        const uris = Arrays.filterMap(commit.files, f => GitUri.fromFile(f, repoPath));\n\n        super(\n            uris,\n            item || {\n                label: `$(file-symlink-file) Open Files`,\n                description: ''\n                // detail: `Opens all of the changed file in the working tree`\n            }\n        );\n    }\n}\n\nexport class OpenCommitFileRevisionsCommandQuickPickItem extends OpenFilesCommandQuickPickItem {\n    constructor(commit: GitLogCommit, item?: QuickPickItem) {\n        const uris = Arrays.filterMap(commit.files, f =>\n            GitUri.toRevisionUri(f.status === 'D' ? commit.previousFileSha : commit.sha, f, commit.repoPath)\n        );\n\n        super(\n            uris,\n            item || {\n                label: `$(file-symlink-file) Open Revisions`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} in ${GlyphChars.Space}$(git-commit) ${\n                    commit.shortSha\n                }`\n                // detail: `Opens all of the changed files in $(git-commit) ${commit.shortSha}`\n            }\n        );\n    }\n}\n\nexport class CommitQuickPick {\n    static async show(\n        commit: GitLogCommit,\n        uri: Uri,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem,\n        repoLog?: GitLog\n    ): Promise<CommitWithFileStatusQuickPickItem | CommandQuickPickItem | undefined> {\n        await commit.resolvePreviousFileSha();\n\n        const items: (CommitWithFileStatusQuickPickItem | CommandQuickPickItem)[] = commit.files.map(\n            fs => new CommitWithFileStatusQuickPickItem(commit, fs)\n        );\n\n        const stash = commit.isStash;\n\n        let index = 0;\n\n        if (stash) {\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-pull-request) Apply Stashed Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.StashApply,\n                    [\n                        {\n                            confirm: true,\n                            deleteAfter: false,\n                            stashItem: commit as GitStashCommit,\n                            goBackCommand: currentCommand\n                        } as StashApplyCommandArgs\n                    ]\n                )\n            );\n\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(x) Delete Stashed Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.StashDelete,\n                    [\n                        {\n                            confirm: true,\n                            stashItem: commit as GitStashCommit,\n                            goBackCommand: currentCommand\n                        } as StashDeleteCommandArgs\n                    ]\n                )\n            );\n\n            items.splice(index++, 0, new ShowCommitInViewQuickPickItem(commit));\n        }\n        else {\n            items.splice(index++, 0, new ShowCommitInViewQuickPickItem(commit));\n\n            const remotes = await Container.git.getRemotes(commit.repoPath);\n            if (remotes.length) {\n                items.splice(\n                    index++,\n                    0,\n                    new OpenRemotesCommandQuickPickItem(\n                        remotes,\n                        {\n                            type: RemoteResourceType.Commit,\n                            sha: commit.sha\n                        },\n                        currentCommand\n                    )\n                );\n            }\n        }\n\n        items.splice(index++, 0, new OpenCommitFilesCommandQuickPickItem(commit));\n        items.splice(index++, 0, new OpenCommitFileRevisionsCommandQuickPickItem(commit));\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(git-compare) Open Directory Compare with Previous Revision`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.previousFileShortSha} ${\n                        GlyphChars.Space\n                    } $(git-compare) ${GlyphChars.Space} $(git-commit) ${commit.shortSha}`\n                },\n                Commands.DiffDirectory,\n                [\n                    commit.uri,\n                    {\n                        ref1: commit.previousFileSha,\n                        ref2: commit.sha\n                    } as DiffDirectoryCommandArgs\n                ]\n            )\n        );\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(git-compare) Open Directory Compare with Working Tree`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha} ${\n                        GlyphChars.Space\n                    } $(git-compare) ${GlyphChars.Space} $(file-directory) Working Tree`\n                },\n                Commands.DiffDirectory,\n                [\n                    uri,\n                    {\n                        ref1: commit.sha\n                    } as DiffDirectoryCommandArgs\n                ]\n            )\n        );\n\n        if (!stash) {\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(clippy) Copy Commit ID to Clipboard`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.shortSha}`\n                    },\n                    Commands.CopyShaToClipboard,\n                    [\n                        uri,\n                        {\n                            sha: commit.sha\n                        } as CopyShaToClipboardCommandArgs\n                    ]\n                )\n            );\n        }\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(clippy) Copy Commit Message to Clipboard`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                },\n                Commands.CopyMessageToClipboard,\n                [\n                    uri,\n                    {\n                        message: commit.message,\n                        sha: commit.sha\n                    } as CopyMessageToClipboardCommandArgs\n                ]\n            )\n        );\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `Changed Files`,\n                    description: commit.getFormattedDiffStatus()\n                },\n                Commands.ShowQuickCommitDetails,\n                [\n                    uri,\n                    {\n                        commit,\n                        repoLog,\n                        sha: commit.sha,\n                        goBackCommand\n                    } as ShowQuickCommitDetailsCommandArgs\n                ]\n            )\n        );\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        let previousCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        let nextCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        if (!stash) {\n            // If we have the full history, we are good\n            if (repoLog !== undefined && !repoLog.truncated && repoLog.sha === undefined) {\n                previousCommand =\n                    commit.previousSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                              commit.previousUri,\n                              {\n                                  repoLog,\n                                  sha: commit.previousSha,\n                                  goBackCommand\n                              } as ShowQuickCommitDetailsCommandArgs\n                          ]);\n\n                nextCommand =\n                    commit.nextSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                              commit.nextUri,\n                              {\n                                  repoLog,\n                                  sha: commit.nextSha,\n                                  goBackCommand\n                              } as ShowQuickCommitDetailsCommandArgs\n                          ]);\n            }\n            else {\n                previousCommand = async () => {\n                    let log = repoLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the previous commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.previousSha === undefined) {\n                        log = await Container.git.getLog(commit.repoPath, {\n                            maxCount: Container.config.advanced.maxListItems,\n                            ref: commit.sha\n                        });\n                        c = log && log.commits.get(commit.sha);\n\n                        if (c) {\n                            // Copy over next info, since it is trustworthy at this point\n                            c.nextSha = commit.nextSha;\n                        }\n                    }\n\n                    if (c === undefined || c.previousSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                        c.previousUri,\n                        {\n                            repoLog: log,\n                            sha: c.previousSha,\n                            goBackCommand\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]);\n                };\n\n                nextCommand = async () => {\n                    let log = repoLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the next commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.nextSha === undefined) {\n                        log = undefined;\n                        c = undefined;\n\n                        // Try to find the next commit\n                        const nextLog = await Container.git.getLog(commit.repoPath, {\n                            maxCount: 1,\n                            reverse: true,\n                            ref: commit.sha\n                        });\n                        const next = nextLog && Iterables.first(nextLog.commits.values());\n                        if (next !== undefined && next.sha !== commit.sha) {\n                            c = commit;\n                            c.nextSha = next.sha;\n                        }\n                    }\n\n                    if (c === undefined || c.nextSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                        c.nextUri,\n                        {\n                            repoLog: log,\n                            sha: c.nextSha,\n                            goBackCommand\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]);\n                };\n            }\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousCommand,\n            '.': nextCommand\n        });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: `${commit.shortSha} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                commit.author ? `${commit.author}, ` : ''\n            }${commit.formattedDate} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getShortMessage()}`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item);\n                if (typeof item.onDidSelect === 'function') {\n                    item.onDidSelect();\n                }\n            }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, QuickPickOptions, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitLog } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    MessageQuickPickItem,\n    showQuickPickProgress\n} from './commonQuickPicks';\n\nexport class CommitsQuickPick {\n    static showProgress(message: string) {\n        return showQuickPickProgress(message, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        log: GitLog | undefined,\n        placeHolder: string,\n        progressCancellation: CancellationTokenSource,\n        options: {\n            goBackCommand?: CommandQuickPickItem;\n            showAllCommand?: CommandQuickPickItem;\n            showInViewCommand?: CommandQuickPickItem;\n        }\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = ((log && [...Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))]) || [\n            new MessageQuickPickItem('No results found')\n        ]) as (CommitQuickPickItem | CommandQuickPickItem)[];\n\n        if (options.showInViewCommand !== undefined) {\n            items.splice(0, 0, options.showInViewCommand);\n        }\n\n        if (options.showAllCommand !== undefined) {\n            items.splice(0, 0, options.showAllCommand);\n        }\n\n        if (options.goBackCommand !== undefined) {\n            items.splice(0, 0, options.goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({ left: options.goBackCommand });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { CancellationTokenSource, QuickPickOptions, Uri, window } from 'vscode';\nimport { Commands, ShowQuickCurrentBranchHistoryCommandArgs, ShowQuickFileHistoryCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri, RemoteResource, RemoteResourceType } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    ChooseFromBranchesAndTagsQuickPickItem,\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class FileHistoryQuickPick {\n    static showProgress(placeHolder: string) {\n        return showQuickPickProgress(placeHolder, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        log: GitLog,\n        uri: GitUri,\n        placeHolder: string,\n        options: {\n            currentCommand?: CommandQuickPickItem;\n            goBackCommand?: CommandQuickPickItem;\n            nextPageCommand?: CommandQuickPickItem;\n            previousPageCommand?: CommandQuickPickItem;\n            pickerOnly?: boolean;\n            progressCancellation?: CancellationTokenSource;\n            showAllCommand?: CommandQuickPickItem;\n            showInViewCommand?: CommandQuickPickItem;\n        } = {}\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        options = { pickerOnly: false, ...options };\n\n        const items = Array.from(Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))) as (\n            | CommitQuickPickItem\n            | CommandQuickPickItem)[];\n\n        let index = 0;\n\n        index++;\n        items.splice(\n            0,\n            0,\n            new ChooseFromBranchesAndTagsQuickPickItem(log.repoPath, placeHolder, options.currentCommand)\n        );\n\n        if (options.showInViewCommand !== undefined) {\n            index++;\n            items.splice(0, 0, options.showInViewCommand);\n        }\n\n        if (log.truncated || log.sha) {\n            if (options.showAllCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.showAllCommand);\n            }\n            else if (!options.pickerOnly) {\n                const [workingFileName] = await Container.git.findWorkingFileName(\n                    paths.relative(log.repoPath, uri.fsPath),\n                    log.repoPath\n                );\n                if (workingFileName) {\n                    index++;\n                    items.splice(\n                        0,\n                        0,\n                        new CommandQuickPickItem(\n                            {\n                                label: `$(history) Show File History`,\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(\n                                    workingFileName\n                                )}`\n                            },\n                            Commands.ShowQuickFileHistory,\n                            [\n                                GitUri.resolveToUri(workingFileName, log.repoPath),\n                                {\n                                    goBackCommand: new CommandQuickPickItem(\n                                        {\n                                            label: `go back ${GlyphChars.ArrowBack}`,\n                                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                                                GlyphChars.Space\n                                            }$(file-text) ${paths.basename(uri.fsPath)}${\n                                                uri.sha ? ` from ${GlyphChars.Space}$(git-commit) ${uri.shortSha}` : ''\n                                            }`\n                                        },\n                                        Commands.ShowQuickFileHistory,\n                                        [\n                                            uri,\n                                            {\n                                                log: log,\n                                                maxCount: log.maxCount,\n                                                range: log.range,\n                                                goBackCommand: options.goBackCommand\n                                            } as ShowQuickFileHistoryCommandArgs\n                                        ]\n                                    )\n                                } as ShowQuickFileHistoryCommandArgs\n                            ]\n                        )\n                    );\n                }\n            }\n\n            if (options.nextPageCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.nextPageCommand);\n            }\n\n            if (options.previousPageCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.previousPageCommand);\n            }\n        }\n\n        if (!options.pickerOnly) {\n            const branch = await Container.git.getBranch(uri.repoPath!);\n\n            if (branch !== undefined) {\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                            GlyphChars.Space\n                        }$(file-text) ${paths.basename(uri.fsPath)}${\n                            uri.sha ? ` from ${GlyphChars.Space}$(git-commit) ${uri.shortSha}` : ''\n                        }`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [\n                        uri,\n                        {\n                            log,\n                            maxCount: log.maxCount,\n                            range: log.range\n                        } as ShowQuickFileHistoryCommandArgs\n                    ]\n                );\n\n                // Only show the full repo option if we are the root\n                if (options.goBackCommand === undefined) {\n                    items.splice(\n                        index++,\n                        0,\n                        new CommandQuickPickItem(\n                            {\n                                label: `$(history) Show Branch History`,\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows  ${\n                                    GlyphChars.Space\n                                }$(git-branch) ${branch.name} history`\n                            },\n                            Commands.ShowQuickCurrentBranchHistory,\n                            [\n                                undefined,\n                                {\n                                    goBackCommand: currentCommand\n                                } as ShowQuickCurrentBranchHistoryCommandArgs\n                            ]\n                        )\n                    );\n                }\n\n                const remotes = await Container.git.getRemotes(uri.repoPath!);\n                if (remotes.length) {\n                    const resource: RemoteResource =\n                        uri.sha !== undefined\n                            ? {\n                                  type: RemoteResourceType.Revision,\n                                  branch: branch.name,\n                                  fileName: uri.getRelativePath(),\n                                  sha: uri.sha\n                              }\n                            : {\n                                  type: RemoteResourceType.File,\n                                  branch: branch.name,\n                                  fileName: uri.getRelativePath()\n                              };\n                    items.splice(index++, 0, new OpenRemotesCommandQuickPickItem(remotes, resource, currentCommand));\n                }\n            }\n\n            if (options.goBackCommand) {\n                items.splice(0, 0, options.goBackCommand);\n            }\n        }\n\n        if (options.progressCancellation !== undefined && options.progressCancellation.token.isCancellationRequested) {\n            return undefined;\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: options.goBackCommand,\n            ',': options.previousPageCommand,\n            '.': options.nextPageCommand\n        });\n\n        options.progressCancellation && options.progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { QuickPickItem, QuickPickOptions, window } from 'vscode';\nimport { Container } from '../container';\nimport { Repository } from '../git/gitService';\nimport { Iterables } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class RepositoryQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly repository: Repository\n    ) {\n        this.label = repository.name;\n        this.description = repository.path;\n    }\n\n    get repoPath(): string {\n        return this.repository.path;\n    }\n}\n\nexport class RepositoriesQuickPick {\n    static async show(\n        placeHolder: string,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<RepositoryQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = [\n            ...Iterables.map(await Container.git.getOrderedRepositories(), r => new RepositoryQuickPickItem(r))\n        ] as (RepositoryQuickPickItem | CommandQuickPickItem)[];\n\n        if (goBackCommand !== undefined) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        // const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n        } as QuickPickOptions);\n\n        // await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, QuickPickOptions, TextDocumentShowOptions, window } from 'vscode';\nimport {\n    Commands,\n    DiffWithPreviousCommandArgs,\n    OpenChangedFilesCommandArgs,\n    ShowQuickBranchHistoryCommandArgs,\n    ShowQuickRepoStatusCommandArgs,\n    ShowQuickStashListCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    GitCommitType,\n    GitFileStatus,\n    GitLogCommit,\n    GitService,\n    GitStatus,\n    GitStatusFile,\n    GitUri\n} from '../git/gitService';\nimport { Keys } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    OpenFileCommandQuickPickItem,\n    QuickPickItem\n} from './commonQuickPicks';\n\nexport class OpenStatusFileCommandQuickPickItem extends OpenFileCommandQuickPickItem {\n    readonly status: GitStatusFile;\n    private readonly commit: GitLogCommit;\n\n    constructor(status: GitStatusFile, realIndexStatus?: GitFileStatus, item?: QuickPickItem) {\n        const octicon = status.getOcticon();\n        const description = status.getFormattedDirectory(true);\n\n        super(\n            status.uri,\n            item || {\n                label: `${status.staged ? '$(check)' : GlyphChars.Space.repeat(3)}${Strings.pad(\n                    octicon,\n                    2,\n                    2\n                )} ${paths.basename(status.fileName)}`,\n                description: description\n            }\n        );\n\n        this.status = status;\n        if (status.indexStatus !== undefined) {\n            this.commit = new GitLogCommit(\n                GitCommitType.File,\n                status.repoPath,\n                GitService.stagedUncommittedSha,\n                'You',\n                undefined,\n                new Date(),\n                new Date(),\n                '',\n                status.fileName,\n                [status],\n                status.status,\n                status.originalFileName,\n                'HEAD',\n                status.fileName\n            );\n        }\n        else {\n            this.commit = new GitLogCommit(\n                GitCommitType.File,\n                status.repoPath,\n                GitService.uncommittedSha,\n                'You',\n                undefined,\n                new Date(),\n                new Date(),\n                '',\n                status.fileName,\n                [status],\n                status.status,\n                status.originalFileName,\n                realIndexStatus !== undefined ? GitService.stagedUncommittedSha : 'HEAD',\n                status.fileName\n            );\n        }\n    }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return commands.executeCommand(Commands.DiffWithPrevious, GitUri.fromFile(this.status, this.status.repoPath), {\n            commit: this.commit,\n            line: 0,\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            } as TextDocumentShowOptions\n        } as DiffWithPreviousCommandArgs) as Promise<{} | undefined>;\n    }\n}\n\nexport class OpenStatusFilesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(files: GitStatusFile[], item?: QuickPickItem) {\n        const uris = files.map(f => f.uri);\n\n        super(\n            item || {\n                label: `$(file-symlink-file) Open Changed Files`,\n                description: ''\n                // detail: `Opens all of the changed files in the repository`\n            },\n            Commands.OpenChangedFiles,\n            [\n                undefined,\n                {\n                    uris\n                } as OpenChangedFilesCommandArgs\n            ]\n        );\n    }\n}\n\ninterface ComputedStatus {\n    staged: number;\n    stagedAddsAndChanges: GitStatusFile[];\n    stagedStatus: string;\n\n    unstaged: number;\n    unstagedAddsAndChanges: GitStatusFile[];\n    unstagedStatus: string;\n}\n\nexport class RepoStatusQuickPick {\n    private static computeStatus(files: GitStatusFile[]): ComputedStatus {\n        let stagedAdds = 0;\n        let unstagedAdds = 0;\n        let stagedChanges = 0;\n        let unstagedChanges = 0;\n        let stagedDeletes = 0;\n        let unstagedDeletes = 0;\n\n        const stagedAddsAndChanges: GitStatusFile[] = [];\n        const unstagedAddsAndChanges: GitStatusFile[] = [];\n\n        for (const f of files) {\n            switch (f.indexStatus) {\n                case 'A':\n                case '?':\n                    stagedAdds++;\n                    stagedAddsAndChanges.push(f);\n                    break;\n\n                case 'D':\n                    stagedDeletes++;\n                    break;\n\n                case undefined:\n                    break;\n\n                default:\n                    stagedChanges++;\n                    stagedAddsAndChanges.push(f);\n                    break;\n            }\n\n            switch (f.workingTreeStatus) {\n                case 'A':\n                case '?':\n                    unstagedAdds++;\n                    unstagedAddsAndChanges.push(f);\n                    break;\n\n                case 'D':\n                    unstagedDeletes++;\n                    break;\n\n                case undefined:\n                    break;\n\n                default:\n                    unstagedChanges++;\n                    unstagedAddsAndChanges.push(f);\n                    break;\n            }\n        }\n\n        const staged = stagedAdds + stagedChanges + stagedDeletes;\n        const unstaged = unstagedAdds + unstagedChanges + unstagedDeletes;\n\n        return {\n            staged: staged,\n            stagedStatus: staged > 0 ? `+${stagedAdds} ~${stagedChanges} -${stagedDeletes}` : '',\n            stagedAddsAndChanges: stagedAddsAndChanges,\n            unstaged: unstaged,\n            unstagedStatus: unstaged > 0 ? `+${unstagedAdds} ~${unstagedChanges} -${unstagedDeletes}` : '',\n            unstagedAddsAndChanges: unstagedAddsAndChanges\n        };\n    }\n\n    static async show(\n        status: GitStatus,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<\n        OpenStatusFileCommandQuickPickItem | OpenStatusFilesCommandQuickPickItem | CommandQuickPickItem | undefined\n    > {\n        const items = [\n            ...Iterables.flatMap(status.files, s => {\n                if (s.workingTreeStatus !== undefined && s.indexStatus !== undefined) {\n                    return [\n                        new OpenStatusFileCommandQuickPickItem(s.with({ indexStatus: null }), s.indexStatus),\n                        new OpenStatusFileCommandQuickPickItem(s.with({ workTreeStatus: null }))\n                    ];\n                }\n                else {\n                    return [new OpenStatusFileCommandQuickPickItem(s)];\n                }\n            })\n        ] as (OpenStatusFileCommandQuickPickItem | OpenStatusFilesCommandQuickPickItem | CommandQuickPickItem)[];\n\n        // Sort the status by staged and then filename\n        items.sort(\n            (a, b) =>\n                ((a as OpenStatusFileCommandQuickPickItem).status.staged ? -1 : 1) -\n                    ((b as OpenStatusFileCommandQuickPickItem).status.staged ? -1 : 1) ||\n                (a as OpenStatusFileCommandQuickPickItem).status.fileName.localeCompare(\n                    (b as OpenStatusFileCommandQuickPickItem).status.fileName,\n                    undefined,\n                    { numeric: true, sensitivity: 'base' }\n                )\n        );\n\n        const currentCommand = new CommandQuickPickItem(\n            {\n                label: `go back ${GlyphChars.ArrowBack}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${GlyphChars.Space}$(git-branch) ${\n                    status.branch\n                } status`\n            },\n            Commands.ShowQuickRepoStatus,\n            [\n                undefined,\n                {\n                    goBackCommand\n                } as ShowQuickRepoStatusCommandArgs\n            ]\n        );\n\n        const computed = this.computeStatus(status.files);\n        if (computed.staged > 0) {\n            let index = 0;\n            const unstagedIndex = computed.unstaged > 0 ? status.files.findIndex(f => !f.staged) : -1;\n            if (unstagedIndex > -1) {\n                items.splice(\n                    unstagedIndex,\n                    0,\n                    new CommandQuickPickItem(\n                        {\n                            label: `Unstaged Files`,\n                            description: computed.unstagedStatus\n                        },\n                        Commands.ShowQuickRepoStatus,\n                        [\n                            undefined,\n                            {\n                                goBackCommand\n                            } as ShowQuickRepoStatusCommandArgs\n                        ]\n                    )\n                );\n\n                items.splice(\n                    unstagedIndex,\n                    0,\n                    new OpenStatusFilesCommandQuickPickItem(computed.stagedAddsAndChanges, {\n                        label: `${GlyphChars.Space.repeat(4)} $(file-symlink-file) Open Staged Files`,\n                        description: ''\n                    })\n                );\n\n                items.push(\n                    new OpenStatusFilesCommandQuickPickItem(computed.unstagedAddsAndChanges, {\n                        label: `${GlyphChars.Space.repeat(4)} $(file-symlink-file) Open Unstaged Files`,\n                        description: ''\n                    })\n                );\n            }\n\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `Staged Files`,\n                        description: computed.stagedStatus\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n        else if (status.files.some(f => !f.staged)) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `Unstaged Files`,\n                        description: computed.unstagedStatus\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.files.length) {\n            items.push(\n                new OpenStatusFilesCommandQuickPickItem(\n                    computed.stagedAddsAndChanges.concat(computed.unstagedAddsAndChanges)\n                )\n            );\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: '$(x) Close Unchanged Files',\n                        description: ''\n                    },\n                    Commands.CloseUnchangedFiles\n                )\n            );\n        }\n        else {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `No changes in the working tree`,\n                        description: ''\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n\n        items.splice(\n            0,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(inbox) Show Stashed Changes`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows stashed changes in the repository`\n                },\n                Commands.ShowQuickStashList,\n                [\n                    GitUri.fromRepoPath(status.repoPath),\n                    {\n                        goBackCommand: currentCommand\n                    } as ShowQuickStashListCommandArgs\n                ]\n            )\n        );\n\n        if (status.upstream && status.state.ahead) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(cloud-upload)${GlyphChars.Space} ${status.state.ahead} Commit${\n                            status.state.ahead > 1 ? 's' : ''\n                        } ahead of ${GlyphChars.Space}$(git-branch) ${status.upstream}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows commits in ${\n                            GlyphChars.Space\n                        }$(git-branch) ${status.branch} but not ${GlyphChars.Space}$(git-branch) ${status.upstream}`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        GitUri.fromRepoPath(status.repoPath, `${status.upstream}..${status.ref}`),\n                        {\n                            branch: status.ref,\n                            maxCount: 0,\n                            goBackCommand: currentCommand\n                        } as ShowQuickBranchHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.upstream && status.state.behind) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(cloud-download)${GlyphChars.Space} ${status.state.behind} Commit${\n                            status.state.behind > 1 ? 's' : ''\n                        } behind ${GlyphChars.Space}$(git-branch) ${status.upstream}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows commits in ${\n                            GlyphChars.Space\n                        }$(git-branch) ${status.upstream} but not ${GlyphChars.Space}$(git-branch) ${status.branch}${\n                            status.sha\n                                ? ` (since ${GlyphChars.Space}$(git-commit) ${GitService.shortenSha(status.sha)})`\n                                : ''\n                        }`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        GitUri.fromRepoPath(status.repoPath, `${status.ref}..${status.upstream}`),\n                        {\n                            branch: status.upstream,\n                            maxCount: 0,\n                            goBackCommand: currentCommand\n                        } as ShowQuickBranchHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.upstream && !status.state.ahead && !status.state.behind) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-branch) ${status.branch} is up-to-date with ${GlyphChars.Space}$(git-branch) ${\n                            status.upstream\n                        }`,\n                        description: ''\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: `status of ${status.branch}${\n                status.upstream ? ` ${Strings.pad(GlyphChars.ArrowLeftRightLong, 1, 1)} ${status.upstream}` : ''\n            }`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item);\n            }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, QuickPickOptions, window } from 'vscode';\nimport { Commands, StashSaveCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStash } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\n\nexport class StashListQuickPick {\n    static showProgress(mode: 'list' | 'apply') {\n        const message =\n            mode === 'apply'\n                ? `Apply stashed changes to your working tree${GlyphChars.Ellipsis}`\n                : `stashed changes ${GlyphChars.Dash} search by message, filename, or commit id`;\n        return showQuickPickProgress(message, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        stash: GitStash,\n        mode: 'list' | 'apply',\n        progressCancellation: CancellationTokenSource,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = ((stash && Array.from(Iterables.map(stash.commits.values(), c => new CommitQuickPickItem(c)))) ||\n            []) as (CommitQuickPickItem | CommandQuickPickItem)[];\n\n        if (mode === 'list') {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(plus) Stash Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} stashes all changes`\n                    },\n                    Commands.StashSave,\n                    [\n                        {\n                            goBackCommand: currentCommand\n                        } as StashSaveCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder:\n                mode === 'apply'\n                    ? `Apply stashed changes to your working tree${GlyphChars.Ellipsis}`\n                    : `stashed changes ${GlyphChars.Dash} search by message, filename, or commit id`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { Disposable, TextEditor, TreeItem, TreeItemCollapsibleState, Uri, window } from 'vscode';\nimport { UriComparer } from '../../comparers';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitCommitish, GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { FileHistoryView } from '../fileHistoryView';\nimport { MessageNode } from './common';\nimport { FileHistoryNode } from './fileHistoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class FileHistoryTrackerNode extends SubscribeableViewNode<FileHistoryView> {\n    private _baseRef: string | undefined;\n    private _fileUri: GitUri | undefined;\n    private _child: FileHistoryNode | undefined;\n\n    constructor(view: FileHistoryView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        this.resetChild();\n    }\n\n    @debug()\n    private resetChild() {\n        if (this._child === undefined) return;\n\n        this._child.dispose();\n        this._child = undefined;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._child === undefined) {\n            if (this._fileUri === undefined && this.uri === unknownGitUri) {\n                return [\n                    new MessageNode(\n                        this.view,\n                        this,\n                        'There are no editors open that can provide file history information.'\n                    )\n                ];\n            }\n\n            const uri = this._fileUri || this.uri;\n            const fileUri = new GitUri(uri, { ...uri, sha: this._baseRef || uri.sha } as GitCommitish);\n            this._child = new FileHistoryNode(fileUri, this.view, this);\n        }\n\n        return [this._child];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('File History', TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.ActiveFileHistory;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @log()\n    async changeBase() {\n        const pick = await new BranchesAndTagsQuickPick(this.uri.repoPath!).show(\n            `Change the file history base to${GlyphChars.Ellipsis}`,\n            {\n                allowCommitId: true,\n                checked: this._baseRef\n            }\n        );\n        if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n        this._baseRef = pick.current ? undefined : pick.ref;\n        if (this._child === undefined) return;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @gate()\n    @debug({\n        exit: r => `returned ${r}`\n    })\n    async refresh(reset: boolean = false) {\n        const cc = Logger.getCorrelationContext();\n\n        if (reset) {\n            this._uri = unknownGitUri;\n            this.resetChild();\n        }\n\n        const editor = window.activeTextEditor;\n        if (editor == null || !Container.git.isTrackable(editor.document.uri)) {\n            if (\n                this.uri === unknownGitUri ||\n                (Container.git.isTrackable(this.uri) &&\n                    window.visibleTextEditors.some(e => e.document && UriComparer.equals(e.document.uri, this.uri)))\n            ) {\n                return true;\n            }\n\n            this._uri = unknownGitUri;\n            this.resetChild();\n\n            if (cc !== undefined) {\n                cc.exitDetails = `, uri=${Logger.toLoggable(this._uri)}`;\n            }\n            return false;\n        }\n\n        if (UriComparer.equals(editor!.document.uri, this.uri)) {\n            if (cc !== undefined) {\n                cc.exitDetails = `, uri=${Logger.toLoggable(this._uri)}`;\n            }\n            return true;\n        }\n\n        let gitUri = await GitUri.fromUri(editor!.document.uri);\n\n        let uri;\n        if (gitUri.sha !== undefined) {\n            // If we have a sha, normalize the history to the working file (so we get a full history all the time)\n            const [fileName, repoPath] = await Container.git.findWorkingFileName(\n                gitUri.fsPath,\n                gitUri.repoPath,\n                gitUri.sha\n            );\n\n            if (fileName !== undefined) {\n                uri = GitUri.resolveToUri(fileName, repoPath);\n            }\n        }\n\n        if (this.uri !== unknownGitUri && UriComparer.equals(uri || gitUri, this.uri)) {\n            return true;\n        }\n\n        if (uri !== undefined) {\n            gitUri = await GitUri.fromUri(uri);\n        }\n\n        this._uri = gitUri;\n        this.resetChild();\n\n        if (cc !== undefined) {\n            cc.exitDetails = `, uri=${Logger.toLoggable(this._uri)}`;\n        }\n        return false;\n    }\n\n    @log()\n    setEditorFollowing(enabled: boolean) {\n        if (enabled && this._fileUri !== undefined) {\n            this._fileUri = undefined;\n            this._baseRef = undefined;\n\n            this._uri = unknownGitUri;\n            // Don't need to call triggerChange here, since canSubscribe will do it\n        }\n\n        this.canSubscribe = enabled;\n    }\n\n    @gate()\n    @log()\n    async showHistoryForUri(uri: GitUri, baseRef?: string) {\n        this._fileUri = uri;\n        this._baseRef = baseRef;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @debug()\n    protected async subscribe() {\n        return Disposable.from(\n            window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveEditorChanged, 500), this)\n        );\n    }\n\n    @debug({ args: false })\n    private onActiveEditorChanged(editor: TextEditor | undefined) {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { Disposable, Selection, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitCommitType, GitFile, GitLogCommit } from '../../git/git';\nimport {\n    GitService,\n    GitUri,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { MessageNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class LineHistoryNode extends SubscribeableViewNode {\n    constructor(\n        uri: GitUri,\n        view: View,\n        parent: ViewNode,\n        public readonly selection: Selection\n    ) {\n        super(uri, view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const children: ViewNode[] = [];\n\n        const displayAs =\n            CommitFileNodeDisplayAs.CommitLabel |\n            (this.view.config.avatars ? CommitFileNodeDisplayAs.Gravatar : CommitFileNodeDisplayAs.StatusIcon);\n\n        const log = await Container.git.getLogForFile(this.uri.repoPath, this.uri.fsPath, {\n            ref: this.uri.sha,\n            range: this.selection\n        });\n        if (log !== undefined) {\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.filterMap(\n                        log.commits.values(),\n                        c => new CommitFileNode(this.view, this, c.files[0], c, displayAs, this.selection)\n                    ),\n                    this\n                )\n            );\n        }\n\n        const blame = await Container.git.getBlameForLine(this.uri, this.selection.active.line);\n        if (blame !== undefined) {\n            let first = children[0] as CommitFileNode | undefined;\n            if (first !== undefined && !(first instanceof CommitFileNode)) {\n                first = children[1] as CommitFileNode | undefined;\n            }\n\n            if (first === undefined || first.commit.sha !== blame.commit.sha) {\n                const file: GitFile = {\n                    fileName: blame.commit.fileName,\n                    indexStatus: '?',\n                    originalFileName: blame.commit.originalFileName,\n                    repoPath: this.uri.repoPath!,\n                    status: 'M',\n                    workingTreeStatus: '?'\n                };\n\n                const commit = new GitLogCommit(\n                    GitCommitType.File,\n                    this.uri.repoPath!,\n                    blame.commit.sha,\n                    'You',\n                    blame.commit.email,\n                    blame.commit.date,\n                    // TODO: Add committed date to blame?\n                    blame.commit.date,\n                    blame.commit.message,\n                    blame.commit.fileName,\n                    [file],\n                    'M',\n                    blame.commit.originalFileName,\n                    blame.commit.previousSha,\n                    blame.commit.originalFileName || blame.commit.fileName\n                );\n\n                children.splice(0, 0, new CommitFileNode(this.view, this, file, commit, displayAs, this.selection));\n            }\n        }\n\n        if (children.length === 0) return [new MessageNode(this.view, this, 'No line history could be found.')];\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const lines = this.selection.isSingleLine\n            ? ` #${this.selection.start.line + 1}`\n            : ` #${this.selection.start.line + 1}-${this.selection.end.line + 1}`;\n        const item = new TreeItem(\n            `${this.uri.getFilename()}${lines}${\n                this.uri.sha\n                    ? ` ${\n                          this.uri.sha === GitService.deletedOrMissingSha ? this.uri.shortSha : `(${this.uri.shortSha})`\n                      }`\n                    : ''\n            }`,\n            TreeItemCollapsibleState.Expanded\n        );\n        item.contextValue = ResourceType.LineHistory;\n        item.description = this.uri.getDirectory();\n        item.tooltip = `History of ${this.uri.getFilename()}${lines}\\n${this.uri.getDirectory()}/${\n            this.uri.sha === undefined ? '' : `\\n\\n${this.uri.sha}`\n        }`;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-history.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-history.svg')\n        };\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @debug()\n    protected async subscribe() {\n        const repo = await Container.git.getRepository(this.uri);\n        if (repo === undefined) return undefined;\n\n        const subscription = Disposable.from(\n            repo.onDidChange(this.onRepoChanged, this),\n            repo.onDidChangeFileSystem(this.onRepoFileSystemChanged, this),\n            { dispose: () => repo.stopWatchingFileSystem() }\n        );\n\n        repo.startWatchingFileSystem();\n\n        return subscription;\n    }\n\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        Logger.log(`LineHistoryNode.onRepoChanged(${e.changes.join()}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n\n    private onRepoFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        if (!e.uris.some(uri => uri.toString(true) === this.uri.toString(true))) return;\n\n        Logger.debug(`LineHistoryNode.onRepoFileSystemChanged(${this.uri.toString(true)}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { Disposable, Selection, TreeItem, TreeItemCollapsibleState, window } from 'vscode';\nimport { UriComparer } from '../../comparers';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitCommitish, GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { LinesChangeEvent } from '../../trackers/gitLineTracker';\nimport { LineHistoryView } from '../lineHistoryView';\nimport { MessageNode } from './common';\nimport { LineHistoryNode } from './lineHistoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class LineHistoryTrackerNode extends SubscribeableViewNode<LineHistoryView> {\n    private _base: string | undefined;\n    private _child: LineHistoryNode | undefined;\n    private _selection: Selection | undefined;\n\n    constructor(view: LineHistoryView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        this.resetChild();\n    }\n\n    @debug()\n    private resetChild() {\n        if (this._child === undefined) return;\n\n        this._child.dispose();\n        this._child = undefined;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._child === undefined) {\n            if (this.uri === unknownGitUri) {\n                return [\n                    new MessageNode(\n                        this.view,\n                        this,\n                        'There are no editors open that can provide line history information.'\n                    )\n                ];\n            }\n\n            const fileUri = new GitUri(this.uri, { ...this.uri, sha: this.uri.sha || this._base } as GitCommitish);\n            this._child = new LineHistoryNode(fileUri, this.view, this, this._selection!);\n        }\n\n        return [this._child];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('Line History', TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.ActiveLineHistory;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @log()\n    async changeBase() {\n        const pick = await new BranchesAndTagsQuickPick(this.uri.repoPath!).show(\n            `Change the line history base to${GlyphChars.Ellipsis}`,\n            {\n                allowCommitId: true,\n                checked: this._base\n            }\n        );\n        if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n        this._base = pick.current ? undefined : pick.ref;\n        if (this._child === undefined) return;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh(reset: boolean = false) {\n        const cc = Logger.getCorrelationContext();\n\n        if (reset) {\n            this._uri = unknownGitUri;\n            this._selection = undefined;\n            this.resetChild();\n        }\n\n        const editor = window.activeTextEditor;\n        if (editor == null || !Container.git.isTrackable(editor.document.uri)) {\n            if (\n                this.uri === unknownGitUri ||\n                (Container.git.isTrackable(this.uri) &&\n                    window.visibleTextEditors.some(e => e.document && UriComparer.equals(e.document.uri, this.uri)))\n            ) {\n                return true;\n            }\n\n            this._uri = unknownGitUri;\n            this._selection = undefined;\n            this.resetChild();\n\n            if (cc !== undefined) {\n                cc.exitDetails = `, uri=${Logger.toLoggable(this._uri)}`;\n            }\n            return false;\n        }\n\n        if (\n            UriComparer.equals(editor!.document.uri, this.uri) &&\n            (this._selection !== undefined && editor.selection.isEqual(this._selection))\n        ) {\n            if (cc !== undefined) {\n                cc.exitDetails = `, uri=${Logger.toLoggable(this._uri)}`;\n            }\n            return true;\n        }\n\n        const gitUri = await GitUri.fromUri(editor!.document.uri);\n\n        if (\n            this.uri !== unknownGitUri &&\n            UriComparer.equals(gitUri, this.uri) &&\n            (this._selection !== undefined && editor.selection.isEqual(this._selection))\n        ) {\n            return true;\n        }\n\n        this._uri = gitUri;\n        this._selection = editor.selection;\n        this.resetChild();\n\n        if (cc !== undefined) {\n            cc.exitDetails = `, uri=${Logger.toLoggable(this._uri)}`;\n        }\n        return false;\n    }\n\n    @log()\n    setEditorFollowing(enabled: boolean) {\n        this.canSubscribe = enabled;\n    }\n\n    @debug()\n    protected async subscribe() {\n        if (Container.lineTracker.isSubscribed(this)) return undefined;\n\n        const onActiveLinesChanged = Functions.debounce(this.onActiveLinesChanged.bind(this), 250);\n\n        return Container.lineTracker.start(\n            this,\n            Disposable.from(\n                Container.lineTracker.onDidChangeActiveLines((e: LinesChangeEvent) => {\n                    if (e.pending) return;\n\n                    onActiveLinesChanged(e);\n                })\n            )\n        );\n    }\n\n    @debug({ args: false })\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitRemote, GitRemoteType, GitUri, Repository } from '../../git/gitService';\nimport { Arrays, Iterables, log } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchNode } from './branchNode';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class RemoteNode extends ViewNode<RepositoriesView> {\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly remote: GitRemote,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.remote.repoPath}):remote(${this.remote.name}:${\n            this.remote.id\n        })`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const branches = await this.repo.getBranches();\n        if (branches === undefined) return [];\n\n        branches.sort(\n            (a, b) =>\n                (a.starred ? -1 : 1) - (b.starred ? -1 : 1) ||\n                a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n        );\n\n        // filter remote branches\n        const branchNodes = [\n            ...Iterables.filterMap(branches, b =>\n                !b.remote || !b.name.startsWith(this.remote.name)\n                    ? undefined\n                    : new BranchNode(this.uri, this.view, this, b)\n            )\n        ];\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchNodes;\n\n        const hierarchy = Arrays.makeHierarchical(\n            branchNodes,\n            n => n.treeHierarchy,\n            (...paths: string[]) => paths.join('/'),\n            this.view.config.files.compact\n        );\n\n        const root = new BranchOrTagFolderNode(\n            this.view,\n            this,\n            'remote-branch',\n            this.repo.path,\n            '',\n            undefined,\n            hierarchy\n        );\n        const children = (await root.getChildren()) as (BranchOrTagFolderNode | BranchNode)[];\n\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const fetch = this.remote.types.find(rt => rt.type === GitRemoteType.Fetch);\n        const push = this.remote.types.find(rt => rt.type === GitRemoteType.Push);\n\n        let separator;\n        if (fetch && push) {\n            separator = GlyphChars.ArrowLeftRightLong;\n        }\n        else if (fetch) {\n            separator = GlyphChars.ArrowLeft;\n        }\n        else if (push) {\n            separator = GlyphChars.ArrowRight;\n        }\n        else {\n            separator = GlyphChars.Dash;\n        }\n\n        const item = new TreeItem(\n            `${this.remote.default ? `${GlyphChars.Check} ${GlyphChars.Space}` : ''}${this.remote.name}`,\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.description = `${separator}${GlyphChars.Space} ${\n            this.remote.provider !== undefined ? this.remote.provider.name : this.remote.domain\n        } ${GlyphChars.Space}${GlyphChars.Dot}${GlyphChars.Space} ${\n            this.remote.provider !== undefined ? this.remote.provider.displayPath : this.remote.path\n        }`;\n        item.contextValue = ResourceType.Remote;\n        if (this.remote.default) {\n            item.contextValue += '+default';\n        }\n\n        if (this.remote.provider !== undefined) {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(`images/dark/icon-${this.remote.provider.icon}.svg`),\n                light: Container.context.asAbsolutePath(`images/light/icon-${this.remote.provider.icon}.svg`)\n            };\n        }\n        else {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath('images/dark/icon-remote.svg'),\n                light: Container.context.asAbsolutePath('images/light/icon-remote.svg')\n            };\n        }\n\n        item.id = this.id;\n        item.tooltip = `${this.remote.name} (${\n            this.remote.provider !== undefined ? this.remote.provider.name : this.remote.domain\n        })\\n${this.remote.provider !== undefined ? this.remote.provider.displayPath : this.remote.path}\\n`;\n\n        for (const type of this.remote.types) {\n            item.tooltip += `\\n${type.url} (${type.type})`;\n        }\n\n        return item;\n    }\n\n    @log()\n    fetch(options: { progress?: boolean } = {}) {\n        return this.repo.fetch({ ...options, remote: this.remote.name });\n    }\n\n    @log()\n    async setAsDefault(state: boolean = true) {\n        void (await this.remote.setAsDefault(state));\n        void this.parent!.triggerChange();\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { MessageNode } from './common';\nimport { RemoteNode } from './remoteNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class RemotesNode extends ViewNode<RepositoriesView> {\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):remotes`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const remotes = await this.repo.getRemotes();\n        if (remotes === undefined || remotes.length === 0) {\n            return [new MessageNode(this.view, this, 'No remotes could be found')];\n        }\n\n        remotes.sort(\n            (a, b) =>\n                (a.default ? -1 : 1) - (b.default ? -1 : 1) ||\n                a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n        );\n        return [...Iterables.map(remotes, r => new RemoteNode(this.uri, this.view, this, r, this.repo))];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Remotes`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Remotes;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-remote.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-remote.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { GitFile, GitLogCommit } from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StashFileNode extends CommitFileNode {\n    constructor(view: View, parent: ViewNode, file: GitFile, commit: GitLogCommit) {\n        super(view, parent, file, commit, CommitFileNodeDisplayAs.File);\n    }\n\n    protected get resourceType(): ResourceType {\n        return ResourceType.StashFile;\n    }\n\n    protected getCommitTemplate() {\n        return this.view.config.stashFormat;\n    }\n\n    protected getCommitDescriptionTemplate() {\n        return this.view.config.stashDescriptionFormat;\n    }\n\n    protected getCommitFileTemplate() {\n        return this.view.config.stashFileFormat;\n    }\n\n    protected getCommitFileDescriptionTemplate() {\n        return this.view.config.stashFileDescriptionFormat;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { CommitFormatter, GitStashCommit, ICommitFormatOptions } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { StashFileNode } from './stashFileNode';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class StashNode extends ViewRefNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly commit: GitStashCommit\n    ) {\n        super(commit.toGitUri(), view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.commit.repoPath}):stash(${this.commit.sha})`;\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const files = (this.commit as GitStashCommit).files;\n\n        // Check for any untracked files -- since git doesn't return them via `git stash list` :(\n        // See https://stackoverflow.com/questions/12681529/\n        const log = await Container.git.getLog(this.commit.repoPath, {\n            maxCount: 1,\n            ref: `${(this.commit as GitStashCommit).stashName}^3`\n        });\n        if (log !== undefined) {\n            const commit = Iterables.first(log.commits.values());\n            if (commit !== undefined && commit.files.length !== 0) {\n                // Since these files are untracked -- make them look that way\n                commit.files.forEach(s => (s.status = '?'));\n                files.splice(files.length, 0, ...commit.files);\n            }\n        }\n\n        const children = files.map(s => new StashFileNode(this.view, this, s, this.commit.toFileCommit(s)));\n        children.sort((a, b) => a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' }));\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(\n            CommitFormatter.fromTemplate(this.view.config.stashFormat, this.commit, {\n                truncateMessageAtNewLine: true,\n                dateFormat: Container.config.defaultDateFormat\n            } as ICommitFormatOptions),\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.id = this.id;\n        item.description = CommitFormatter.fromTemplate(this.view.config.stashDescriptionFormat, this.commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n        item.contextValue = ResourceType.Stash;\n        item.tooltip = CommitFormatter.fromTemplate('${ago} (${date})\\n\\n${message}', this.commit, {\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { MessageNode } from './common';\nimport { StashNode } from './stashNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StashesNode extends ViewNode {\n    constructor(\n        uri: GitUri,\n        view: View,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):stashes`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const stash = await this.repo.getStashList();\n        if (stash === undefined) return [new MessageNode(this.view, this, 'No stashed changes.')];\n\n        return [...Iterables.map(stash.commits.values(), c => new StashNode(this.view, this, c))];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Stashes`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Stashes;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-stash.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-stash.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { Container } from '../../container';\nimport {\n    GitFile,\n    GitFileWithCommit,\n    GitLogCommit,\n    GitUri,\n    IStatusFormatOptions,\n    StatusFileFormatter\n} from '../../git/gitService';\nimport { Strings } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StatusFileNode extends ViewNode {\n    private readonly _hasStagedChanges: boolean = false;\n    private readonly _hasUnstagedChanges: boolean = false;\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        public readonly file: GitFile,\n        public readonly commits: GitLogCommit[]\n    ) {\n        super(GitUri.fromFile(file, repoPath, 'HEAD'), view, parent);\n\n        for (const c of this.commits) {\n            if (c.isStagedUncommitted) {\n                this._hasStagedChanges = true;\n            }\n            else if (c.isUncommitted) {\n                this._hasUnstagedChanges = true;\n            }\n\n            if (this._hasStagedChanges && this._hasUnstagedChanges) break;\n        }\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        return this.commits.map(\n            c =>\n                new CommitFileNode(\n                    this.view,\n                    this,\n                    this.file,\n                    c,\n                    CommitFileNodeDisplayAs.CommitLabel |\n                        (this.view.config.avatars\n                            ? CommitFileNodeDisplayAs.Gravatar\n                            : CommitFileNodeDisplayAs.CommitIcon)\n                )\n        );\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.description = this.description;\n\n        if ((this._hasStagedChanges || this._hasUnstagedChanges) && this.commits.length === 1) {\n            item.contextValue = ResourceType.File;\n            if (this._hasStagedChanges) {\n                item.contextValue += '+staged';\n                item.tooltip = StatusFileFormatter.fromTemplate(\n                    '${file}\\n${directory}/\\n\\n${status} in Index (staged)',\n                    this.file\n                );\n            }\n            else {\n                item.contextValue += '+unstaged';\n                item.tooltip = StatusFileFormatter.fromTemplate(\n                    '${file}\\n${directory}/\\n\\n${status} in Working Tree',\n                    this.file\n                );\n            }\n\n            // Use the file icon and decorations\n            item.resourceUri = GitUri.resolveToUri(this.file.fileName, this.repoPath);\n            item.iconPath = ThemeIcon.File;\n\n            item.command = this.getCommand();\n        }\n        else {\n            item.collapsibleState = TreeItemCollapsibleState.Collapsed;\n            if (this._hasStagedChanges || this._hasUnstagedChanges) {\n                item.contextValue = ResourceType.File;\n                if (this._hasStagedChanges && this._hasUnstagedChanges) {\n                    item.contextValue += '+staged+unstaged';\n                }\n                else if (this._hasStagedChanges) {\n                    item.contextValue += '+staged';\n                }\n                else {\n                    item.contextValue += '+unstaged';\n                }\n\n                // Use the file icon and decorations\n                item.resourceUri = GitUri.resolveToUri(this.file.fileName, this.repoPath);\n                item.iconPath = ThemeIcon.File;\n            }\n            else {\n                item.contextValue = ResourceType.StatusFileCommits;\n\n                const icon = GitFile.getStatusIcon(this.file.status);\n                item.iconPath = {\n                    dark: Container.context.asAbsolutePath(paths.join('images', 'dark', icon)),\n                    light: Container.context.asAbsolutePath(paths.join('images', 'light', icon))\n                };\n            }\n\n            item.tooltip = StatusFileFormatter.fromTemplate(\n                `\\${file}\\n\\${directory}/\\n\\n\\${status} in ${this.getChangedIn()}`,\n                this.file\n            );\n        }\n\n        // Only cache the label/description for a single refresh\n        this._label = undefined;\n        this._description = undefined;\n\n        return item;\n    }\n\n    private _description: string | undefined;\n    get description() {\n        if (this._description === undefined) {\n            this._description = StatusFileFormatter.fromTemplate(\n                this.view.config.statusFileDescriptionFormat,\n                {\n                    ...this.file,\n                    commit: this.commit\n                } as GitFileWithCommit,\n                {\n                    relativePath: this.relativePath\n                } as IStatusFormatOptions\n            );\n        }\n        return this._description;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.getRelativePath());\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label = StatusFileFormatter.fromTemplate(\n                this.view.config.statusFileFormat,\n                {\n                    ...this.file,\n                    commit: this.commit\n                } as GitFileWithCommit,\n                {\n                    relativePath: this.relativePath\n                } as IStatusFormatOptions\n            );\n        }\n        return this._label;\n    }\n\n    get commit() {\n        return this.commits[0];\n    }\n\n    get priority(): number {\n        if (this._hasStagedChanges && !this._hasUnstagedChanges) return -3;\n        if (this._hasStagedChanges) return -2;\n        if (this._hasUnstagedChanges) return -1;\n        return 0;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n        this._description = undefined;\n    }\n\n    private getChangedIn(): string {\n        const changedIn = [];\n\n        let commits = 0;\n\n        if (this._hasUnstagedChanges) {\n            commits++;\n            changedIn.push('Working Tree');\n        }\n\n        if (this._hasStagedChanges) {\n            commits++;\n            changedIn.push('Index (staged)');\n        }\n\n        if (this.commits.length > commits) {\n            commits = this.commits.length - commits;\n        }\n\n        if (commits > 0) {\n            changedIn.push(Strings.pluralize('commit', commits));\n        }\n\n        if (changedIn.length > 2) {\n            changedIn[changedIn.length - 1] = `and ${changedIn[changedIn.length - 1]}`;\n        }\n        return changedIn.join(changedIn.length > 2 ? ', ' : ' and ');\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                GitUri.fromFile(this.file, this.repoPath),\n                {\n                    commit: this.commit,\n                    line: 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitStatusFile } from '../../git/git';\nimport {\n    GitCommitType,\n    GitFileWithCommit,\n    GitLog,\n    GitLogCommit,\n    GitService,\n    GitStatus,\n    GitUri\n} from '../../git/gitService';\nimport { Arrays, Iterables, Objects, Strings } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { FileNode, FolderNode } from './folderNode';\nimport { StatusFileNode } from './statusFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StatusFilesNode extends ViewNode<RepositoriesView> {\n    readonly repoPath: string;\n\n    constructor(\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly status: GitStatus,\n        public readonly range: string | undefined\n    ) {\n        super(GitUri.fromRepoPath(status.repoPath), view, parent);\n        this.repoPath = status.repoPath;\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.status.repoPath}):status:files`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        let files: GitFileWithCommit[] = [];\n\n        const repoPath = this.repoPath;\n\n        let log: GitLog | undefined;\n        if (this.range !== undefined) {\n            log = await Container.git.getLog(repoPath, { maxCount: 0, ref: this.range });\n            if (log !== undefined) {\n                files = [\n                    ...Iterables.flatMap(log.commits.values(), c =>\n                        c.files.map(s => ({ ...s, commit: c } as GitFileWithCommit))\n                    )\n                ];\n            }\n        }\n\n        if (this.status.files.length !== 0 && this.includeWorkingTree) {\n            files.splice(\n                0,\n                0,\n                ...Iterables.flatMap(this.status.files, s => {\n                    if (s.workingTreeStatus !== undefined && s.indexStatus !== undefined) {\n                        // Decrements the date to guarantee this entry will be sorted after the previous entry (most recent first)\n                        const older = new Date();\n                        older.setMilliseconds(older.getMilliseconds() - 1);\n\n                        return [\n                            this.toStatusFile(s, GitService.uncommittedSha, GitService.stagedUncommittedSha),\n                            this.toStatusFile(s, GitService.stagedUncommittedSha, 'HEAD', older)\n                        ];\n                    }\n                    else if (s.indexStatus !== undefined) {\n                        return [this.toStatusFile(s, GitService.stagedUncommittedSha, 'HEAD')];\n                    }\n                    else {\n                        return [this.toStatusFile(s, GitService.uncommittedSha, 'HEAD')];\n                    }\n                })\n            );\n        }\n\n        files.sort((a, b) => b.commit.date.getTime() - a.commit.date.getTime());\n\n        const groups = Arrays.groupBy(files, s => s.fileName);\n\n        let children: FileNode[] = [\n            ...Iterables.map(\n                Objects.values(groups),\n                files =>\n                    new StatusFileNode(this.view, this, repoPath, files[files.length - 1], files.map(s => s.commit))\n            )\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.getRelativePath().split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, repoPath, '', hierarchy, true);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort(\n                (a, b) =>\n                    a.priority - b.priority ||\n                    a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let files = this.status.files !== undefined && this.includeWorkingTree ? this.status.files.length : 0;\n\n        if (this.status.upstream !== undefined && this.status.state.ahead > 0) {\n            if (files > 0) {\n                const aheadFiles = await Container.git.getDiffStatus(this.repoPath, `${this.status.upstream}...`);\n                if (aheadFiles !== undefined) {\n                    const uniques = new Set();\n                    for (const f of this.status.files) {\n                        uniques.add(f.fileName);\n                    }\n                    for (const f of aheadFiles) {\n                        uniques.add(f.fileName);\n                    }\n\n                    files = uniques.size;\n                }\n            }\n            else {\n                const stats = await Container.git.getChangedFilesCount(this.repoPath, `${this.status.upstream}...`);\n                if (stats !== undefined) {\n                    files += stats.files;\n                }\n            }\n        }\n\n        const label = `${Strings.pluralize('file', files)} changed`;\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.StatusFiles;\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-diff.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-diff.svg`)\n        };\n\n        return item;\n    }\n\n    private get includeWorkingTree(): boolean {\n        return this.view.config.includeWorkingTree;\n    }\n\n    private toStatusFile(file: GitStatusFile, ref: string, previousRef: string, date?: Date): GitFileWithCommit {\n        return {\n            status: file.status,\n            repoPath: file.repoPath,\n            indexStatus: file.indexStatus,\n            workingTreeStatus: file.workingTreeStatus,\n            fileName: file.fileName,\n            originalFileName: file.originalFileName,\n            commit: new GitLogCommit(\n                GitCommitType.File,\n                file.repoPath,\n                ref,\n                'You',\n                undefined,\n                date || new Date(),\n                date || new Date(),\n                '',\n                file.fileName,\n                [file],\n                file.status,\n                file.originalFileName,\n                previousRef,\n                file.fileName\n            )\n        };\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitTag, GitUri } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { CommitNode } from './commitNode';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class TagNode extends ViewRefNode<RepositoriesView> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly tag: GitTag\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.tag.repoPath}):tag(${this.tag.name})`;\n    }\n\n    get label(): string {\n        return this.view.config.branches.layout === ViewBranchesLayout.Tree ? this.tag.getBasename() : this.tag.name;\n    }\n\n    get ref(): string {\n        return this.tag.name;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: this.maxCount || this.view.config.defaultItemLimit,\n            ref: this.tag.name\n        });\n        if (log === undefined) return [new MessageNode(this.view, this, 'No commits could be found.')];\n\n        const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath, this.tag.name);\n        const children = [\n            ...insertDateMarkers(\n                Iterables.map(\n                    log.commits.values(),\n                    c => new CommitNode(this.view, this, c, undefined, getBranchAndTagTips)\n                ),\n                this\n            )\n        ];\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Commits'));\n        }\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Tag;\n        item.tooltip = `${this.tag.name}${this.tag.annotation === undefined ? '' : `\\n${this.tag.annotation}`}`;\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Arrays } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { MessageNode } from './common';\nimport { TagNode } from './tagNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class TagsNode extends ViewNode<RepositoriesView> {\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path}):tags`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const tags = await this.repo.getTags();\n        if (tags.length === 0) return [new MessageNode(this.view, this, 'No tags could be found.')];\n\n        tags.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n        const tagNodes = tags.map(t => new TagNode(this.uri, this.view, this, t));\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return tagNodes;\n\n        const hierarchy = Arrays.makeHierarchical(\n            tagNodes,\n            n => n.tag.name.split('/'),\n            (...paths: string[]) => paths.join('/'),\n            this.view.config.files.compact\n        );\n\n        const root = new BranchOrTagFolderNode(this.view, this, 'tag', this.repo.path, '', undefined, hierarchy);\n        const children = (await root.getChildren()) as (BranchOrTagFolderNode | TagNode)[];\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(`Tags`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Tags;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-tag.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-tag.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { Disposable, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport {\n    GitBranch,\n    GitStatus,\n    GitUri,\n    Repository,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Dates, debug, gate, log, Strings } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchesNode } from './branchesNode';\nimport { BranchNode } from './branchNode';\nimport { BranchTrackingStatusNode } from './branchTrackingStatusNode';\nimport { MessageNode } from './common';\nimport { RemotesNode } from './remotesNode';\nimport { StashesNode } from './stashesNode';\nimport { StatusFilesNode } from './statusFilesNode';\nimport { TagsNode } from './tagsNode';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nconst hasTimeRegex = /[hHm]/;\n\nexport class RepositoryNode extends SubscribeableViewNode<RepositoriesView> {\n    private _children: ViewNode[] | undefined;\n    private _lastFetched: number = 0;\n    private _status: Promise<GitStatus | undefined>;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n\n        this._status = this.repo.getStatus();\n    }\n\n    get id(): string {\n        return `${this._instanceId}:gitlens:repository(${this.repo.path})${this.repo.starred ? '+starred:' : ''}`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const children = [];\n\n            const status = await this._status;\n            if (status !== undefined) {\n                const branch = new GitBranch(\n                    status.repoPath,\n                    status.branch,\n                    true,\n                    status.sha,\n                    status.upstream,\n                    status.state.ahead,\n                    status.state.behind,\n                    status.detached\n                );\n                children.push(new BranchNode(this.uri, this.view, this, branch, true));\n\n                if (status.state.behind) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'behind', true));\n                }\n\n                if (status.state.ahead) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'ahead', true));\n                }\n\n                if (status.state.ahead || (status.files.length !== 0 && this.includeWorkingTree)) {\n                    const range = status.upstream ? `${status.upstream}..${branch.ref}` : undefined;\n                    children.push(new StatusFilesNode(this.view, this, status, range));\n                }\n\n                if (!this.view.config.repositories.compact) {\n                    children.push(new MessageNode(this.view, this, '', GlyphChars.Dash.repeat(2), ''));\n                }\n            }\n\n            children.push(\n                new BranchesNode(this.uri, this.view, this, this.repo),\n                new RemotesNode(this.uri, this.view, this, this.repo),\n                new StashesNode(this.uri, this.view, this, this.repo),\n                new TagsNode(this.uri, this.view, this, this.repo)\n            );\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const label = this.repo.formattedName || this.uri.repoPath || '';\n\n        this._lastFetched = await this.repo.getLastFetched();\n\n        const lastFetchedTooltip = this.formatLastFetched({\n            prefix: `${Strings.pad(GlyphChars.Dash, 2, 2)}Last fetched on `,\n            format: Container.config.defaultDateFormat || 'dddd MMMM Do, YYYY',\n            includeTime: true\n        });\n\n        let description;\n        let tooltip = this.repo.formattedName\n            ? `${this.repo.formattedName}${lastFetchedTooltip}\\n${this.uri.repoPath}`\n            : `${this.uri.repoPath}${lastFetchedTooltip}`;\n        let iconSuffix = '';\n        let workingStatus = '';\n\n        const status = await this._status;\n        if (status !== undefined) {\n            tooltip += `\\n\\nCurrent branch is ${status.branch}`;\n\n            if (status.files.length !== 0 && this.includeWorkingTree) {\n                workingStatus = status.getFormattedDiffStatus({\n                    compact: true,\n                    prefix: Strings.pad(GlyphChars.Dot, 2, 2)\n                });\n            }\n\n            const upstreamStatus = status.getUpstreamStatus({\n                prefix: `${GlyphChars.Space} `\n            });\n\n            description = `${status.branch}${upstreamStatus}${workingStatus}`;\n\n            iconSuffix = workingStatus ? '-blue' : '';\n            if (status.upstream !== undefined) {\n                tooltip += ` and is tracking ${status.upstream}\\n${status.getUpstreamStatus({\n                    empty: `No commits ahead or behind`,\n                    expand: true,\n                    separator: '\\n',\n                    suffix: '\\n'\n                })}`;\n\n                if (status.state.behind) {\n                    iconSuffix = '-red';\n                }\n                if (status.state.ahead) {\n                    iconSuffix = status.state.behind ? '-yellow' : '-green';\n                }\n            }\n\n            if (workingStatus) {\n                tooltip += `\\n\\nWorking tree has uncommitted changes${status.getFormattedDiffStatus({\n                    expand: true,\n                    prefix: `\\n`,\n                    separator: '\\n'\n                })}`;\n            }\n        }\n\n        if (!this.repo.supportsChangeEvents) {\n            description = `<!>${description ? ` ${GlyphChars.Space}${description}` : ''}`;\n            tooltip += `\\n\\n<!> Unable to automatically detect repository changes`;\n        }\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Repository;\n        if (this.repo.starred) {\n            item.contextValue += '+starred';\n        }\n        item.description = `${description || ''}${this.formatLastFetched({\n            prefix: `${Strings.pad(GlyphChars.Dot, 2, 2)}Last fetched `\n        })}`;\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-repo${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-repo${iconSuffix}.svg`)\n        };\n        item.id = this.id;\n        item.tooltip = tooltip;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @log()\n    fetch(options: { progress?: boolean; remote?: string } = {}) {\n        return this.repo.fetch(options);\n    }\n\n    @log()\n    pull(options: { progress?: boolean } = {}) {\n        return this.repo.pull(options);\n    }\n\n    @log()\n    push(options: { force?: boolean; progress?: boolean } = {}) {\n        return this.repo.push(options);\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        this._status = this.repo.getStatus();\n\n        this._children = undefined;\n        await this.ensureSubscription();\n    }\n\n    @log()\n    async star() {\n        await this.repo.star();\n        void this.parent!.triggerChange();\n    }\n\n    @log()\n    async unstar() {\n        await this.repo.unstar();\n        void this.parent!.triggerChange();\n    }\n\n    @debug()\n    protected async subscribe() {\n        const disposables = [this.repo.onDidChange(this.onRepoChanged, this)];\n\n        // if (Container.config.defaultDateStyle === DateStyle.Relative) {\n        //     disposables.push(Functions.interval(() => void this.updateLastFetched(), 60000));\n        // }\n\n        if (this.includeWorkingTree) {\n            disposables.push(this.repo.onDidChangeFileSystem(this.onFileSystemChanged, this), {\n                dispose: () => this.repo.stopWatchingFileSystem()\n            });\n\n            this.repo.startWatchingFileSystem();\n        }\n\n        return Disposable.from(...disposables);\n    }\n\n    private get includeWorkingTree(): boolean {\n        return this.view.config.includeWorkingTree;\n    }\n\n    @debug({\n        args: {\n            0: (e: RepositoryFileSystemChangeEvent) =>\n                `{ repository: ${e.repository ? e.repository.name : ''}, uris(${e.uris.length}): [${e.uris\n                    .slice(0, 1)\n                    .map(u => u.fsPath)\n                    .join(', ')}${e.uris.length > 1 ? ', ...' : ''}] }`\n        }\n    })\n    private onFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        void this.triggerChange();\n    }\n\n    @debug({\n        args: {\n            0: (e: RepositoryChangeEvent) =>\n                `{ repository: ${e.repository ? e.repository.name : ''}, changes: ${e.changes.join()} }`\n        }\n    })\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (e.changed(RepositoryChange.Closed)) {\n            this.dispose();\n\n            return;\n        }\n\n        if (\n            this._children === undefined ||\n            e.changed(RepositoryChange.Repository) ||\n            e.changed(RepositoryChange.Config)\n        ) {\n            void this.triggerChange();\n\n            return;\n        }\n\n        if (e.changed(RepositoryChange.Stashes)) {\n            const node = this._children.find(c => c instanceof StashesNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n\n        if (e.changed(RepositoryChange.Remotes)) {\n            const node = this._children.find(c => c instanceof RemotesNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n\n        if (e.changed(RepositoryChange.Tags)) {\n            const node = this._children.find(c => c instanceof TagsNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n    }\n\n    private formatLastFetched(options: { prefix?: string; format?: string; includeTime?: boolean } = {}) {\n        if (this._lastFetched === 0) return '';\n\n        // if (options.format === undefined && Container.config.defaultDateStyle === DateStyle.Relative) {\n        //     // If less than a day has passed show a relative date\n        //     if (Date.now() - this._lastFetched < Dates.MillisecondsPerDay) {\n        //         return `${options.prefix || ''}${Dates.toFormatter(new Date(this._lastFetched)).fromNow()}`;\n        //     }\n        // }\n\n        let format = options.format || Container.config.defaultDateShortFormat || 'MMM D, YYYY';\n        if (\n            (options.includeTime ||\n                // If less than a day has passed show the time too\n                (options.includeTime === undefined && Date.now() - this._lastFetched < Dates.MillisecondsPerDay)) &&\n            // If the time is already included don't do anything\n            !hasTimeRegex.test(format)\n        ) {\n            format = `h:mma, ${format}`;\n        }\n\n        return `${options.prefix || ''}${Dates.toFormatter(new Date(this._lastFetched)).format(format)}`;\n    }\n\n    // @debug()\n    // private async updateLastFetched() {\n    //     const prevLastFetched = this._lastFetched;\n    //     this._lastFetched = await this.repo.getLastFetched();\n\n    //     // If the fetched date hasn't changed and it was over a day ago, kick out\n    //     if (this._lastFetched === prevLastFetched && Date.now() - this._lastFetched >= Dates.MillisecondsPerDay) return;\n\n    //     this.view.triggerNodeChange(this);\n    // }\n}\n","'use strict';\nimport { Disposable, TextEditor, TreeItem, TreeItemCollapsibleState, window } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Functions, gate } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { MessageNode } from './common';\nimport { RepositoryNode } from './repositoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class RepositoriesNode extends SubscribeableViewNode<RepositoriesView> {\n    private _children: (RepositoryNode | MessageNode)[] | undefined;\n\n    constructor(view: RepositoriesView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        this.resetChildren();\n    }\n\n    @debug()\n    private resetChildren() {\n        if (this._children === undefined) return;\n\n        for (const child of this._children) {\n            if (child instanceof RepositoryNode) {\n                child.dispose();\n            }\n        }\n        this._children = undefined;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const repositories = await Container.git.getOrderedRepositories();\n            if (repositories.length === 0) return [new MessageNode(this.view, this, 'No repositories could be found.')];\n\n            this._children = repositories.map(r => new RepositoryNode(GitUri.fromRepoPath(r.path), this.view, this, r));\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Repositories`, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Repositories;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @debug()\n    async refresh(reset: boolean = false) {\n        if (this._children === undefined) return;\n\n        if (reset) {\n            this.resetChildren();\n            await this.unsubscribe();\n            void this.ensureSubscription();\n\n            return;\n        }\n\n        const repositories = await Container.git.getOrderedRepositories();\n        if (repositories.length === 0 && (this._children === undefined || this._children.length === 0)) return;\n\n        if (repositories.length === 0) {\n            this._children = [new MessageNode(this.view, this, 'No repositories could be found.')];\n            return;\n        }\n\n        const children = [];\n        for (const repo of repositories) {\n            const normalizedPath = repo.normalizedPath;\n            const child = (this._children as RepositoryNode[]).find(c => c.repo.normalizedPath === normalizedPath);\n            if (child !== undefined) {\n                children.push(child);\n                void child.refresh();\n            }\n            else {\n                children.push(new RepositoryNode(GitUri.fromRepoPath(repo.path), this.view, this, repo));\n            }\n        }\n\n        for (const child of this._children as RepositoryNode[]) {\n            if (children.includes(child)) continue;\n\n            child.dispose();\n        }\n\n        this._children = children;\n\n        void this.ensureSubscription();\n    }\n\n    @debug()\n    protected async subscribe() {\n        const subscriptions = [Container.git.onDidChangeRepositories(this.onRepositoriesChanged, this)];\n\n        if (this.view.config.autoReveal) {\n            subscriptions.push(\n                window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveEditorChanged, 500), this)\n            );\n        }\n\n        return Disposable.from(...subscriptions);\n    }\n\n    @debug({ args: false })\n    private onActiveEditorChanged(editor: TextEditor | undefined) {\n        if (editor == null || this._children === undefined || this._children.length === 1) {\n            return;\n        }\n\n        try {\n            const uri = editor.document.uri;\n            const node = this._children.find(n => n instanceof RepositoryNode && n.repo.containsUri(uri)) as\n                | RepositoryNode\n                | undefined;\n            if (node === undefined) return;\n\n            // Check to see if this repo has a descendent that is already selected\n            let parent = this.view.selection.length === 0 ? undefined : this.view.selection[0];\n            while (parent !== undefined) {\n                if (parent === node) return;\n\n                parent = parent.getParent();\n            }\n\n            void this.view.reveal(node, { expand: true });\n        }\n        catch (ex) {\n            Logger.error(ex);\n        }\n    }\n\n    @debug()\n    private onRepositoriesChanged() {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitLog, GitUri } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { CommitNode } from './commitNode';\nimport { ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode } from './viewNode';\n\nexport interface CommitsQueryResults {\n    label: string;\n    log: GitLog | undefined;\n}\n\nexport class ResultsCommitsNode extends ViewNode<ViewWithFiles> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        private readonly _commitsQuery: (maxCount: number | undefined) => Promise<CommitsQueryResults>\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    get type(): ResourceType {\n        return ResourceType.ResultsCommits;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const { log } = await this.getCommitsQueryResults();\n        if (log === undefined) return [];\n\n        const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath);\n        const children = [\n            ...insertDateMarkers(\n                Iterables.map(\n                    log.commits.values(),\n                    c => new CommitNode(this.view, this, c, undefined, getBranchAndTagTips)\n                ),\n                this\n            )\n        ];\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Results'));\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const { label, log } = await this.getCommitsQueryResults();\n\n        let description;\n        if ((await Container.git.getRepositoryCount()) > 1) {\n            const repo = await Container.git.getRepository(this.repoPath);\n            description = (repo && repo.formattedName) || this.repoPath;\n        }\n\n        const item = new TreeItem(\n            label,\n            log && log.count > 0 ? TreeItemCollapsibleState.Collapsed : TreeItemCollapsibleState.None\n        );\n        item.contextValue = this.type;\n        item.description = description;\n\n        return item;\n    }\n\n    refresh() {\n        this._commitsQueryResults = this._commitsQuery(this.maxCount);\n    }\n\n    private _commitsQueryResults: Promise<CommitsQueryResults> | undefined;\n\n    protected getCommitsQueryResults() {\n        if (this._commitsQueryResults === undefined) {\n            this._commitsQueryResults = this._commitsQuery(this.maxCount);\n        }\n\n        return this._commitsQueryResults;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithCommandArgs } from '../../commands';\nimport { Container } from '../../container';\nimport { GitFile, GitUri, IStatusFormatOptions, StatusFileFormatter } from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class ResultsFileNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        public readonly file: GitFile,\n        public readonly ref1: string,\n        public readonly ref2: string\n    ) {\n        super(GitUri.fromFile(file, repoPath, ref1 ? ref1 : ref2 ? ref2 : undefined), view, parent);\n    }\n\n    get ref() {\n        return this.ref1 ? this.ref1 : this.ref2 ? this.ref2 : undefined;\n    }\n\n    getChildren(): ViewNode[] {\n        return [];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.ResultsFile;\n        item.description = this.description;\n        item.tooltip = StatusFileFormatter.fromTemplate('${file}\\n${directory}/\\n\\n${status}', this.file);\n\n        const statusIcon = GitFile.getStatusIcon(this.file.status);\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(paths.join('images', 'dark', statusIcon)),\n            light: Container.context.asAbsolutePath(paths.join('images', 'light', statusIcon))\n        };\n\n        item.command = this.getCommand();\n        return item;\n    }\n\n    private _description: string | undefined;\n    get description() {\n        if (this._description === undefined) {\n            this._description = StatusFileFormatter.fromTemplate('${directory}', this.file, {\n                relativePath: this.relativePath\n            } as IStatusFormatOptions);\n        }\n        return this._description;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.getRelativePath());\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label = StatusFileFormatter.fromTemplate('${file}', this.file, {\n                relativePath: this.relativePath\n            } as IStatusFormatOptions);\n        }\n        return this._label;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n        this._description = undefined;\n    }\n\n    get priority(): number {\n        return 0;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Open Changes',\n            command: Commands.DiffWith,\n            arguments: [\n                this.uri,\n                {\n                    lhs: {\n                        sha: this.ref1,\n                        uri: this.uri\n                    },\n                    rhs: {\n                        sha: this.ref2,\n                        uri:\n                            this.file.status === 'R'\n                                ? GitUri.fromFile(this.file, this.uri.repoPath!, this.ref2, true)\n                                : this.uri\n                    },\n                    repoPath: this.uri.repoPath!,\n\n                    line: 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithCommandArgs\n            ]\n        };\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitFile, GitUri } from '../../git/gitService';\nimport { Arrays, Iterables, Strings } from '../../system';\nimport { ViewWithFiles } from '../viewBase';\nimport { FileNode, FolderNode } from './folderNode';\nimport { ResultsFileNode } from './resultsFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport interface FilesQueryResults {\n    label: string;\n    diff: GitFile[] | undefined;\n}\n\nexport class ResultsFilesNode extends ViewNode<ViewWithFiles> {\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        private readonly _ref1: string,\n        private readonly _ref2: string\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const { diff } = await this.getFilesQueryResults();\n        if (diff === undefined) return [];\n\n        let children: FileNode[] = [\n            ...Iterables.map(diff, s => new ResultsFileNode(this.view, this, this.repoPath, s, this._ref1, this._ref2))\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.getRelativePath().split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, this.repoPath, '', hierarchy);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort(\n                (a, b) =>\n                    a.priority - b.priority ||\n                    a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const { diff, label } = await this.getFilesQueryResults();\n\n        const item = new TreeItem(\n            label,\n            diff && diff.length > 0 ? TreeItemCollapsibleState.Expanded : TreeItemCollapsibleState.None\n        );\n        item.contextValue = ResourceType.ResultsFiles;\n        return item;\n    }\n\n    refresh() {\n        this._filesQueryResults = this.getFilesQueryResultsCore();\n    }\n\n    private _filesQueryResults: Promise<FilesQueryResults> | undefined;\n\n    private getFilesQueryResults() {\n        if (this._filesQueryResults === undefined) {\n            this._filesQueryResults = this.getFilesQueryResultsCore();\n        }\n\n        return this._filesQueryResults;\n    }\n\n    private async getFilesQueryResultsCore(): Promise<FilesQueryResults> {\n        const diff = await Container.git.getDiffStatus(this.uri.repoPath!, this._ref1, this._ref2);\n        return {\n            label: `${Strings.pluralize('file', diff !== undefined ? diff.length : 0, { zero: 'No' })} changed`,\n            diff: diff\n        };\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { NamedRef, PinnedComparisons, WorkspaceState } from '../../constants';\nimport { Container } from '../../container';\nimport { GitService, GitUri } from '../../git/gitService';\nimport { log, Strings } from '../../system';\nimport { CompareView } from '../compareView';\nimport { CommitsQueryResults, ResultsCommitsNode } from './resultsCommitsNode';\nimport { ResultsFilesNode } from './resultsFilesNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class CompareResultsNode extends ViewNode<CompareView> {\n    constructor(\n        view: CompareView,\n        public readonly repoPath: string,\n        private _ref1: NamedRef,\n        private _ref2: NamedRef,\n        private _pinned: boolean = false\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view);\n    }\n\n    get label() {\n        return `Comparing ${this._ref1.label ||\n            GitService.shortenSha(this._ref1.ref, { working: 'Working Tree' })} to ${this._ref2.label ||\n            GitService.shortenSha(this._ref2.ref, { working: 'Working Tree' })}`;\n    }\n\n    get pinned(): boolean {\n        return this._pinned;\n    }\n\n    get ref1(): NamedRef {\n        return this._ref1;\n    }\n\n    get ref2(): NamedRef {\n        return this._ref2;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        return [\n            new ResultsCommitsNode(this.view, this, this.uri.repoPath!, this.getCommitsQuery.bind(this)),\n            new ResultsFilesNode(this.view, this, this.uri.repoPath!, this._ref1.ref, this._ref2.ref)\n        ];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let description;\n        if ((await Container.git.getRepositoryCount()) > 1) {\n            const repo = await Container.git.getRepository(this.uri.repoPath!);\n            description = (repo && repo.formattedName) || this.uri.repoPath;\n        }\n\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.CompareResults;\n        if (this._pinned) {\n            item.contextValue += '+pinned';\n        }\n        item.description = description;\n        if (this._pinned) {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(`images/dark/icon-pin-small.svg`),\n                light: Container.context.asAbsolutePath(`images/light/icon-pin-small.svg`)\n            };\n        }\n\n        return item;\n    }\n\n    canDismiss(): boolean {\n        return !this._pinned;\n    }\n\n    @log()\n    async pin() {\n        if (this._pinned) return;\n\n        await this.view.updatePinnedComparison(this.getPinnableId(), {\n            path: this.repoPath,\n            ref1: this.ref1,\n            ref2: this.ref2\n        });\n\n        this._pinned = true;\n        void this.triggerChange();\n    }\n\n    @log()\n    async unpin() {\n        if (!this._pinned) return;\n\n        await this.view.updatePinnedComparison(this.getPinnableId());\n\n        this._pinned = false;\n        void this.triggerChange();\n    }\n\n    @log()\n    async swap() {\n        // Save the current id so we can update it later\n        const currentId = this.getPinnableId();\n\n        const ref1 = this._ref1;\n        this._ref1 = this._ref2;\n        this._ref2 = ref1;\n\n        // If we were pinned, remove the existing pin and save a new one\n        if (this._pinned) {\n            await this.view.updatePinnedComparison(currentId);\n            await this.view.updatePinnedComparison(this.getPinnableId(), {\n                path: this.repoPath,\n                ref1: this.ref1,\n                ref2: this.ref2\n            });\n        }\n\n        this.view.triggerNodeChange(this);\n    }\n\n    private async getCommitsQuery(maxCount: number | undefined): Promise<CommitsQueryResults> {\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: maxCount,\n            ref: `${this._ref1.ref}...${this._ref2.ref || 'HEAD'}`\n        });\n\n        const count = log !== undefined ? log.count : 0;\n        const truncated = log !== undefined ? log.truncated : false;\n\n        const label = Strings.pluralize('commit', count, { number: truncated ? `${count}+` : undefined, zero: 'No' });\n\n        return {\n            label: label,\n            log: log\n        };\n    }\n\n    private getPinnableId() {\n        return Strings.sha1(`${this.repoPath}|${this.ref1.ref}|${this.ref2.ref}`);\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { CompareView } from '../compareView';\nimport { CompareNode } from './compareNode';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class ComparePickerNode extends ViewNode<CompareView> {\n    constructor(\n        view: CompareView,\n        protected readonly parent: CompareNode\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] {\n        return [];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const selectedRef = this.parent.selectedRef;\n        const repoPath = selectedRef !== undefined ? selectedRef.repoPath : undefined;\n\n        let description;\n        if (repoPath !== undefined) {\n            if ((await Container.git.getRepositoryCount()) > 1) {\n                const repo = await Container.git.getRepository(repoPath);\n                description = (repo && repo.formattedName) || repoPath;\n            }\n        }\n\n        let item;\n        if (selectedRef === undefined) {\n            item = new TreeItem(\n                `Compare <branch, tag, or ref> with <branch, tag, or ref>`,\n                TreeItemCollapsibleState.None\n            );\n            item.contextValue = ResourceType.ComparePicker;\n            item.description = description;\n            item.tooltip = `Click to select branch or tag for compare${GlyphChars.Ellipsis}`;\n            item.command = {\n                title: `Select branch or tag for compare${GlyphChars.Ellipsis}`,\n                command: this.view.getQualifiedCommand('selectForCompare')\n            };\n        }\n        else {\n            item = new TreeItem(\n                `Compare ${selectedRef.label} with <branch, tag, or ref>`,\n                TreeItemCollapsibleState.None\n            );\n            item.contextValue = ResourceType.ComparePickerWithRef;\n            item.description = description;\n            item.tooltip = `Click to compare ${selectedRef.label} with${GlyphChars.Ellipsis}`;\n            item.command = {\n                title: `Compare ${selectedRef.label} with${GlyphChars.Ellipsis}`,\n                command: this.view.getQualifiedCommand('compareWithSelected')\n            };\n        }\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { getRepoPathOrPrompt } from '../../commands';\nimport { CommandContext, GlyphChars, NamedRef, setCommandContext } from '../../constants';\nimport { GitService } from '../../git/gitService';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { CompareView } from '../compareView';\nimport { MessageNode } from './common';\nimport { ComparePickerNode } from './comparePickerNode';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\ninterface RepoRef {\n    label: string;\n    repoPath: string;\n    ref: string | NamedRef;\n}\n\nexport class CompareNode extends ViewNode<CompareView> {\n    private _children: (ViewNode | MessageNode)[] = [];\n    private _comparePickerNode: ComparePickerNode | undefined;\n\n    constructor(view: CompareView) {\n        super(unknownGitUri, view);\n    }\n\n    private _selectedRef: RepoRef | undefined;\n    get selectedRef(): RepoRef | undefined {\n        return this._selectedRef;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children.length === 0) {\n            // Not really sure why I can't reuse this node -- but if I do the Tree errors out with an id already exists error\n            this._comparePickerNode = new ComparePickerNode(this.view, this);\n            this._children = [this._comparePickerNode];\n\n            const pinned = this.view.getPinnedComparisons();\n            if (pinned.length !== 0) {\n                this._children.push(...pinned);\n            }\n        }\n        else if (this._comparePickerNode === undefined || !this._children.includes(this._comparePickerNode)) {\n            // Not really sure why I can't reuse this node -- but if I do the Tree errors out with an id already exists error\n            this._comparePickerNode = new ComparePickerNode(this.view, this);\n            this._children.splice(0, 0, this._comparePickerNode);\n\n            if (this._selectedRef !== undefined) {\n                const node = this._comparePickerNode;\n                setImmediate(() => this.view.reveal(node, { focus: false, select: true }));\n            }\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Compare`, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Compare;\n        return item;\n    }\n\n    addOrReplace(results: ViewNode, replace: boolean) {\n        if (this._children.includes(results)) return;\n\n        if (this._children.length !== 0 && replace) {\n            this._children.length = 0;\n            this._children.push(results);\n\n            // Re-add the pinned comparisons\n            const pinned = this.view.getPinnedComparisons();\n            if (pinned.length !== 0) {\n                this._children.push(...pinned);\n            }\n        }\n        else {\n            if (this._comparePickerNode !== undefined) {\n                const index = this._children.indexOf(this._comparePickerNode);\n                if (index !== -1) {\n                    this._children.splice(index, 1);\n                }\n            }\n\n            this._children.splice(0, 0, results);\n        }\n\n        this.view.triggerNodeChange();\n    }\n\n    @log()\n    clear() {\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        this._children.length = 0;\n        this.view.triggerNodeChange();\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    dismiss(node: ViewNode) {\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        if (this._children.length !== 0) {\n            const index = this._children.indexOf(node);\n            if (index === -1) return;\n\n            this._children.splice(index, 1);\n        }\n        this.view.triggerNodeChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        if (this._children.length === 0) return;\n\n        await Promise.all(this._children.map(c => c.refresh()).filter(Functions.isPromise) as Promise<any>[]);\n    }\n\n    async compareWithSelected(repoPath?: string, ref?: string | NamedRef) {\n        if (this._selectedRef === undefined) return;\n\n        if (repoPath === undefined) {\n            repoPath = this._selectedRef.repoPath;\n        }\n        else if (repoPath !== this._selectedRef.repoPath) {\n            // If we don't have a matching repoPath, then start over\n            void this.selectForCompare(repoPath, ref);\n            return;\n        }\n\n        if (ref === undefined) {\n            const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                `Compare ${this.getRefName(this._selectedRef.ref)} with${GlyphChars.Ellipsis}`,\n                { allowCommitId: true }\n            );\n            if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n            ref = pick.ref;\n        }\n\n        const ref1 = this._selectedRef;\n\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        void (await this.view.compare(repoPath, ref1.ref, ref));\n    }\n\n    async selectForCompare(repoPath?: string, ref?: string | NamedRef) {\n        if (repoPath === undefined) {\n            repoPath = await getRepoPathOrPrompt(\n                undefined,\n                `Select branch or tag for compare in which repository${GlyphChars.Ellipsis}`\n            );\n        }\n        if (repoPath === undefined) return;\n\n        let autoCompare = false;\n        if (ref === undefined) {\n            const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                `Select branch or tag for compare${GlyphChars.Ellipsis}`,\n                { allowCommitId: true }\n            );\n            if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n            ref = pick.ref;\n\n            autoCompare = true;\n        }\n\n        this._selectedRef = { label: this.getRefName(ref), repoPath: repoPath, ref: ref };\n        setCommandContext(CommandContext.ViewsCanCompare, true);\n\n        await this.view.show();\n\n        void (await this.triggerChange());\n\n        if (autoCompare) {\n            void (await this.compareWithSelected());\n        }\n    }\n\n    private getRefName(ref: string | NamedRef) {\n        return typeof ref === 'string' ? GitService.shortenSha(ref)! : ref.label || GitService.shortenSha(ref.ref)!;\n    }\n}\n","'strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { SearchCommitsCommandArgs } from '../../commands';\nimport { GlyphChars } from '../../constants';\nimport { GitRepoSearchBy } from '../../git/gitService';\nimport { debug, Functions, gate, log } from '../../system';\nimport { View } from '../viewBase';\nimport { CommandMessageNode, MessageNode } from './common';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class SearchNode extends ViewNode {\n    private _children: (ViewNode | MessageNode)[] = [];\n\n    constructor(view: View) {\n        super(unknownGitUri, view);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children.length === 0) {\n            const command = {\n                title: ' ',\n                command: 'gitlens.showCommitSearch'\n            };\n\n            return [\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Message } as SearchCommitsCommandArgs]\n                    },\n                    `Search commits by message`,\n                    'message-pattern',\n                    'Click to search commits by message'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Author } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by author`,\n                    '@ author-pattern',\n                    'Click to search commits by author'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Sha } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by commit id`,\n                    '# sha',\n                    'Click to search commits by commit id'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Files } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by files`,\n                    ': file-path/glob',\n                    'Click to search commits by files'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Changes } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by changes`,\n                    '= pattern',\n                    'Click to search commits by changes'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.ChangedLines } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by changed lines`,\n                    '~ pattern',\n                    'Click to search commits by changed lines'\n                )\n            ];\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Search`, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Search;\n        return item;\n    }\n\n    addOrReplace(results: ViewNode, replace: boolean) {\n        if (this._children.includes(results)) return;\n\n        if (this._children.length !== 0 && replace) {\n            this._children.length = 0;\n            this._children.push(results);\n        }\n        else {\n            this._children.splice(0, 0, results);\n        }\n\n        this.view.triggerNodeChange();\n    }\n\n    @log()\n    clear() {\n        if (this._children.length === 0) return;\n\n        this._children.length = 0;\n        this.view.triggerNodeChange();\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    dismiss(node: ViewNode) {\n        if (this._children.length === 0) return;\n\n        const index = this._children.findIndex(n => n === node);\n        if (index === -1) return;\n\n        this._children.splice(index, 1);\n        this.view.triggerNodeChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        if (this._children.length === 0) return;\n\n        await Promise.all(this._children.map(c => c.refresh()).filter(Functions.isPromise) as Promise<any>[]);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    commands,\n    Disposable,\n    ExtensionContext,\n    SourceControlResourceGroup,\n    SourceControlResourceState,\n    TextDocumentShowOptions,\n    TextEditor,\n    TextEditorEdit,\n    Uri,\n    ViewColumn,\n    window,\n    workspace\n} from 'vscode';\nimport { BuiltInCommands, DocumentSchemes, ImageMimetypes } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitCommit, GitFile, GitRemote, GitUri, Repository } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { CommandQuickPickItem, RepositoriesQuickPick } from '../quickpicks';\n// import { Telemetry } from '../telemetry';\nimport { ViewNode, ViewRefNode } from '../views/nodes';\n\nexport enum Commands {\n    ClearFileAnnotations = 'gitlens.clearFileAnnotations',\n    CloseUnchangedFiles = 'gitlens.closeUnchangedFiles',\n    ComputingFileAnnotations = 'gitlens.computingFileAnnotations',\n    CopyMessageToClipboard = 'gitlens.copyMessageToClipboard',\n    CopyRemoteFileUrlToClipboard = 'gitlens.copyRemoteFileUrlToClipboard',\n    CopyShaToClipboard = 'gitlens.copyShaToClipboard',\n    DiffDirectory = 'gitlens.diffDirectory',\n    DiffDirectoryWithHead = 'gitlens.diffDirectoryWithHead',\n    DiffHeadWithBranch = 'gitlens.diffHeadWithBranch',\n    DiffWorkingWithBranch = 'gitlens.diffWorkingWithBranch',\n    ExternalDiffAll = 'gitlens.externalDiffAll',\n    DiffWith = 'gitlens.diffWith',\n    DiffWithBranch = 'gitlens.diffWithBranch',\n    DiffWithNext = 'gitlens.diffWithNext',\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    DiffWithPreviousInDiff = 'gitlens.diffWithPreviousInDiff',\n    DiffLineWithPrevious = 'gitlens.diffLineWithPrevious',\n    DiffWithRevision = 'gitlens.diffWithRevision',\n    DiffWithWorking = 'gitlens.diffWithWorking',\n    DiffLineWithWorking = 'gitlens.diffLineWithWorking',\n    ExternalDiff = 'gitlens.externalDiff',\n    FetchRepositories = 'gitlens.fetchRepositories',\n    OpenChangedFiles = 'gitlens.openChangedFiles',\n    OpenBranchesInRemote = 'gitlens.openBranchesInRemote',\n    OpenBranchInRemote = 'gitlens.openBranchInRemote',\n    OpenCommitInRemote = 'gitlens.openCommitInRemote',\n    OpenFileInRemote = 'gitlens.openFileInRemote',\n    OpenFileRevision = 'gitlens.openFileRevision',\n    OpenInRemote = 'gitlens.openInRemote',\n    OpenRepoInRemote = 'gitlens.openRepoInRemote',\n    OpenWorkingFile = 'gitlens.openWorkingFile',\n    PullRepositories = 'gitlens.pullRepositories',\n    PushRepositories = 'gitlens.pushRepositories',\n    ResetSuppressedWarnings = 'gitlens.resetSuppressedWarnings',\n    ShowCommitInView = 'gitlens.showCommitInView',\n    SearchCommits = 'gitlens.showCommitSearch',\n    SearchCommitsInView = 'gitlens.views.search.searchCommits',\n    ShowCompareView = 'gitlens.showCompareView',\n    ShowFileHistoryView = 'gitlens.showFileHistoryView',\n    ShowFileHistoryInView = 'gitlens.showFileHistoryInView',\n    ShowLineHistoryView = 'gitlens.showLineHistoryView',\n    ShowLastQuickPick = 'gitlens.showLastQuickPick',\n    ShowQuickBranchHistory = 'gitlens.showQuickBranchHistory',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ShowQuickRepoStatus = 'gitlens.showQuickRepoStatus',\n    ShowQuickRevisionDetails = 'gitlens.showQuickRevisionDetails',\n    ShowQuickStashList = 'gitlens.showQuickStashList',\n    ShowRepositoriesView = 'gitlens.showRepositoriesView',\n    ShowSearchView = 'gitlens.showSearchView',\n    ShowSettingsPage = 'gitlens.showSettingsPage',\n    ShowWelcomePage = 'gitlens.showWelcomePage',\n    StashApply = 'gitlens.stashApply',\n    StashDelete = 'gitlens.stashDelete',\n    StashSave = 'gitlens.stashSave',\n    StashSaveFiles = 'gitlens.stashSaveFiles',\n    SupportGitLens = 'gitlens.supportGitLens',\n    SwitchMode = 'gitlens.switchMode',\n    ToggleCodeLens = 'gitlens.toggleCodeLens',\n    ToggleFileBlame = 'gitlens.toggleFileBlame',\n    ToggleFileHeatmap = 'gitlens.toggleFileHeatmap',\n    ToggleFileRecentChanges = 'gitlens.toggleFileRecentChanges',\n    ToggleLineBlame = 'gitlens.toggleLineBlame',\n    ToggleReviewMode = 'gitlens.toggleReviewMode',\n    ToggleZenMode = 'gitlens.toggleZenMode',\n    ViewsOpenDirectoryDiff = 'gitlens.views.openDirectoryDiff',\n    ViewsOpenDirectoryDiffWithWorking = 'gitlens.views.openDirectoryDiffWithWorking'\n}\n\ninterface CommandConstructor {\n    new (): any;\n}\n\nconst registrableCommands: CommandConstructor[] = [];\n\nexport function command(): ClassDecorator {\n    return (target: any) => {\n        registrableCommands.push(target);\n    };\n}\n\nexport function registerCommands(context: ExtensionContext): void {\n    for (const c of registrableCommands) {\n        context.subscriptions.push(new c());\n    }\n}\n\nexport function getCommandUri(uri?: Uri, editor?: TextEditor): Uri | undefined {\n    if (uri instanceof Uri) return uri;\n    if (editor == null) return undefined;\n\n    const document = editor.document;\n    if (document == null) return undefined;\n\n    return document.uri;\n}\n\nexport async function getRepoPathOrActiveOrPrompt(\n    uri: Uri | undefined,\n    editor: TextEditor | undefined,\n    placeholder: string,\n    goBackCommand?: CommandQuickPickItem\n) {\n    let repoPath = await Container.git.getRepoPathOrActive(uri, editor);\n    if (!repoPath) {\n        const pick = await RepositoriesQuickPick.show(placeholder, goBackCommand);\n        if (pick instanceof CommandQuickPickItem) {\n            await pick.execute();\n            return undefined;\n        }\n\n        if (pick === undefined) {\n            if (goBackCommand !== undefined) {\n                await goBackCommand.execute();\n            }\n            return undefined;\n        }\n\n        repoPath = pick.repoPath;\n    }\n    return repoPath;\n}\n\nexport async function getRepoPathOrPrompt(\n    uri: Uri | undefined,\n    placeholder: string,\n    goBackCommand?: CommandQuickPickItem\n) {\n    let repoPath = await Container.git.getRepoPath(uri);\n    if (!repoPath) {\n        const pick = await RepositoriesQuickPick.show(placeholder, goBackCommand);\n        if (pick instanceof CommandQuickPickItem) {\n            await pick.execute();\n            return undefined;\n        }\n\n        if (pick === undefined) {\n            if (goBackCommand !== undefined) {\n                await goBackCommand.execute();\n            }\n            return undefined;\n        }\n\n        repoPath = pick.repoPath;\n    }\n    return repoPath;\n}\n\nexport interface CommandContextParsingOptions {\n    editor: boolean;\n    uri: boolean;\n}\n\nexport interface CommandBaseContext {\n    command: string;\n    editor?: TextEditor;\n    uri?: Uri;\n}\n\nexport interface CommandScmGroupsContext extends CommandBaseContext {\n    type: 'scm-groups';\n    scmResourceGroups: SourceControlResourceGroup[];\n}\n\nexport interface CommandScmStatesContext extends CommandBaseContext {\n    type: 'scm-states';\n    scmResourceStates: SourceControlResourceState[];\n}\n\nexport interface CommandUnknownContext extends CommandBaseContext {\n    type: 'unknown';\n}\n\nexport interface CommandUriContext extends CommandBaseContext {\n    type: 'uri';\n}\n\n// export interface CommandViewContext extends CommandBaseContext {\n//     type: 'view';\n// }\n\nexport interface CommandViewItemContext extends CommandBaseContext {\n    type: 'viewItem';\n    node: ViewNode;\n}\n\nexport function isCommandViewContextWithBranch(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { branch: GitBranch } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { branch: GitBranch }).branch instanceof GitBranch;\n}\n\nexport function isCommandViewContextWithCommit<T extends GitCommit>(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { commit: T } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { commit: GitCommit }).commit instanceof GitCommit;\n}\n\nexport function isCommandViewContextWithFile(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { file: GitFile; repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { file: GitFile; repoPath: string };\n    return node.file !== undefined && (node.file.repoPath !== undefined || node.repoPath !== undefined);\n}\n\nexport function isCommandViewContextWithFileCommit(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { commit: GitCommit; file: GitFile; repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { commit: GitCommit; file: GitFile; repoPath: string };\n    return (\n        node.file !== undefined &&\n        node.commit instanceof GitCommit &&\n        (node.file.repoPath !== undefined || node.repoPath !== undefined)\n    );\n}\n\nexport function isCommandViewContextWithFileRefs(\n    context: CommandContext\n): context is CommandViewItemContext & {\n    node: ViewNode & { file: GitFile; ref1: string; ref2: string; repoPath: string };\n} {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { file: GitFile; ref1: string; ref2: string; repoPath: string };\n    return (\n        node.file !== undefined &&\n        node.ref1 !== undefined &&\n        node.ref2 !== undefined &&\n        (node.file.repoPath !== undefined || node.repoPath !== undefined)\n    );\n}\n\nexport function isCommandViewContextWithRef(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { ref: string } } {\n    return context.type === 'viewItem' && context.node instanceof ViewRefNode;\n}\n\nexport function isCommandViewContextWithRemote(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { remote: GitRemote } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { remote: GitRemote }).remote instanceof GitRemote;\n}\n\nexport function isCommandViewContextWithRepo(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { repo: Repository } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { repo?: Repository }).repo instanceof Repository;\n}\n\nexport function isCommandViewContextWithRepoPath(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    return typeof (context.node as ViewNode & { repoPath?: string }).repoPath === 'string';\n}\n\nexport type CommandContext =\n    | CommandScmGroupsContext\n    | CommandScmStatesContext\n    | CommandUnknownContext\n    | CommandUriContext\n    // | CommandViewContext\n    | CommandViewItemContext;\n\nfunction isScmResourceGroup(group: any): group is SourceControlResourceGroup {\n    if (group == null) return false;\n\n    return (\n        (group as SourceControlResourceGroup).id !== undefined &&\n        (group.handle !== undefined ||\n            (group as SourceControlResourceGroup).label !== undefined ||\n            (group as SourceControlResourceGroup).resourceStates !== undefined)\n    );\n}\n\nfunction isScmResourceState(state: any): state is SourceControlResourceState {\n    if (state == null) return false;\n\n    return (state as SourceControlResourceState).resourceUri != null;\n}\n\nfunction isTextEditor(editor: any): editor is TextEditor {\n    if (editor == null) return false;\n\n    return (\n        editor.id !== undefined &&\n        ((editor as TextEditor).edit !== undefined || (editor as TextEditor).document !== undefined)\n    );\n}\n\nexport abstract class Command implements Disposable {\n    static getMarkdownCommandArgsCore<T>(command: Commands, args: T): string {\n        return `command:${command}?${encodeURIComponent(JSON.stringify(args))}`;\n    }\n\n    protected readonly contextParsingOptions: CommandContextParsingOptions = { editor: false, uri: false };\n\n    private _disposable: Disposable;\n\n    constructor(command: Commands | Commands[]) {\n        if (typeof command === 'string') {\n            this._disposable = commands.registerCommand(\n                command,\n                (...args: any[]) => this._execute(command, ...args),\n                this\n            );\n\n            return;\n        }\n\n        const subscriptions = command.map(cmd =>\n            commands.registerCommand(cmd, (...args: any[]) => this._execute(cmd, ...args), this)\n        );\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    protected async preExecute(context: CommandContext, ...args: any[]): Promise<any> {\n        return this.execute(...args);\n    }\n\n    abstract execute(...args: any[]): any;\n\n    protected _execute(command: string, ...args: any[]): any {\n        // Telemetry.trackEvent(command);\n\n        const [context, rest] = Command.parseContext(command, { ...this.contextParsingOptions }, ...args);\n        return this.preExecute(context, ...rest);\n    }\n\n    private static parseContext(\n        command: string,\n        options: CommandContextParsingOptions,\n        ...args: any[]\n    ): [CommandContext, any[]] {\n        let editor: TextEditor | undefined = undefined;\n\n        let firstArg = args[0];\n        if (options.editor && (firstArg == null || isTextEditor(firstArg))) {\n            editor = firstArg;\n            args = args.slice(1);\n            firstArg = args[0];\n        }\n\n        if (options.uri && (firstArg == null || firstArg instanceof Uri)) {\n            const [uri, ...rest] = args as [Uri, any];\n            if (uri !== undefined) {\n                return [{ command: command, type: 'uri', editor: editor, uri: uri }, rest];\n            }\n            else {\n                args = args.slice(1);\n            }\n        }\n\n        if (firstArg instanceof ViewNode) {\n            const [node, ...rest] = args as [ViewNode, any];\n            return [{ command: command, type: 'viewItem', node: node, uri: node.uri }, rest];\n        }\n\n        if (isScmResourceState(firstArg)) {\n            const states = [];\n            let count = 0;\n            for (const arg of args) {\n                if (!isScmResourceState(arg)) break;\n\n                count++;\n                states.push(arg);\n            }\n\n            return [\n                { command: command, type: 'scm-states', scmResourceStates: states, uri: states[0].resourceUri },\n                args.slice(count)\n            ];\n        }\n\n        if (isScmResourceGroup(firstArg)) {\n            const groups = [];\n            let count = 0;\n            for (const arg of args) {\n                if (!isScmResourceGroup(arg)) break;\n\n                count++;\n                groups.push(arg);\n            }\n\n            return [{ command: command, type: 'scm-groups', scmResourceGroups: groups }, args.slice(count)];\n        }\n\n        return [{ command: command, type: 'unknown', editor: editor }, args];\n    }\n}\n\nexport abstract class ActiveEditorCommand extends Command {\n    protected readonly contextParsingOptions: CommandContextParsingOptions = { editor: true, uri: true };\n\n    constructor(command: Commands | Commands[]) {\n        super(command);\n    }\n\n    protected async preExecute(context: CommandContext, ...args: any[]): Promise<any> {\n        return this.execute(context.editor, context.uri, ...args);\n    }\n\n    protected _execute(command: string, ...args: any[]): any {\n        return super._execute(command, window.activeTextEditor, ...args);\n    }\n\n    abstract execute(editor?: TextEditor, ...args: any[]): any;\n}\n\nlet lastCommand: { command: string; args: any[] } | undefined = undefined;\nexport function getLastCommand() {\n    return lastCommand;\n}\n\nexport abstract class ActiveEditorCachedCommand extends ActiveEditorCommand {\n    constructor(command: Commands | Commands[]) {\n        super(command);\n    }\n\n    protected _execute(command: string, ...args: any[]): any {\n        lastCommand = {\n            command: command,\n            args: args\n        };\n        return super._execute(command, ...args);\n    }\n\n    abstract execute(editor: TextEditor, ...args: any[]): any;\n}\n\nexport abstract class EditorCommand implements Disposable {\n    private _disposable: Disposable;\n\n    constructor(command: Commands | Commands[]) {\n        if (!Array.isArray(command)) {\n            command = [command];\n        }\n\n        const subscriptions = [];\n        for (const cmd of command) {\n            subscriptions.push(\n                commands.registerTextEditorCommand(\n                    cmd,\n                    (editor: TextEditor, edit: TextEditorEdit, ...args: any[]) =>\n                        this.executeCore(cmd, editor, edit, ...args),\n                    this\n                )\n            );\n        }\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private executeCore(command: string, editor: TextEditor, edit: TextEditorEdit, ...args: any[]): any {\n        // Telemetry.trackEvent(command);\n        return this.execute(editor, edit, ...args);\n    }\n\n    abstract execute(editor: TextEditor, edit: TextEditorEdit, ...args: any[]): any;\n}\n\nexport async function openEditor(\n    uri: Uri,\n    options: TextDocumentShowOptions & { rethrow?: boolean } = {}\n): Promise<TextEditor | undefined> {\n    const { rethrow, ...opts } = options;\n    try {\n        if (uri instanceof GitUri) {\n            uri = uri.documentUri();\n        }\n\n        if (uri.scheme === DocumentSchemes.GitLens && ImageMimetypes[paths.extname(uri.fsPath)]) {\n            await commands.executeCommand(BuiltInCommands.Open, uri);\n\n            return undefined;\n        }\n\n        const document = await workspace.openTextDocument(uri);\n        return window.showTextDocument(document, {\n            preserveFocus: false,\n            preview: true,\n            viewColumn: ViewColumn.Active,\n            ...opts\n        });\n    }\n    catch (ex) {\n        const msg = ex.toString();\n        if (msg.includes('File seems to be binary and cannot be opened as text')) {\n            await commands.executeCommand(BuiltInCommands.Open, uri);\n\n            return undefined;\n        }\n\n        if (rethrow) throw ex;\n\n        Logger.error(ex, 'openEditor');\n        return undefined;\n    }\n}\n\nexport function openWorkspace(uri: Uri, name: string, options: { openInNewWindow?: boolean } = {}) {\n    if (options.openInNewWindow) {\n        commands.executeCommand(BuiltInCommands.OpenFolder, uri, true);\n\n        return true;\n    }\n\n    return workspace.updateWorkspaceFolders(\n        workspace.workspaceFolders !== undefined ? workspace.workspaceFolders.length : 0,\n        null,\n        { uri, name }\n    );\n}\n","'use strict';\nimport { TreeItem } from 'vscode';\nimport { SearchCommitsCommandArgs } from '../../commands';\nimport { Commands } from '../../commands/common';\nimport { GitRepoSearchBy } from '../../git/gitService';\nimport { ViewWithFiles } from '../viewBase';\nimport { CommitsQueryResults, ResultsCommitsNode } from './resultsCommitsNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class SearchResultsCommitsNode extends ResultsCommitsNode {\n    constructor(\n        view: ViewWithFiles,\n        parent: ViewNode,\n        repoPath: string,\n        public readonly search: string,\n        public readonly searchBy: GitRepoSearchBy,\n        commitsQuery: (maxCount: number | undefined) => Promise<CommitsQueryResults>\n    ) {\n        super(view, parent, repoPath, commitsQuery);\n    }\n\n    get type(): ResourceType {\n        return ResourceType.SearchResults;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const { log } = await super.getCommitsQueryResults();\n\n        const item = await super.getTreeItem();\n\n        if (log == null || log.count === 0) {\n            const args: SearchCommitsCommandArgs = {\n                search: this.search,\n                searchBy: this.searchBy,\n                prefillOnly: true\n            };\n            item.command = {\n                title: 'Search Commits',\n                command: Commands.SearchCommitsInView,\n                arguments: [args]\n            };\n        }\n\n        return item;\n    }\n}\n","'use strict';\nimport {\n    commands,\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    TreeDataProvider,\n    TreeItem,\n    TreeItemCollapsibleState,\n    TreeView,\n    TreeViewExpansionEvent,\n    TreeViewVisibilityChangeEvent,\n    window\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { debug, Functions, log } from '../system';\nimport { CompareView } from './compareView';\nimport { FileHistoryView } from './fileHistoryView';\nimport { LineHistoryView } from './lineHistoryView';\nimport { ViewNode } from './nodes';\nimport { isPageable } from './nodes/viewNode';\nimport { RepositoriesView } from './repositoriesView';\nimport { SearchView } from './searchView';\nimport { RefreshNodeCommandArgs } from './viewCommands';\n\nexport type View = RepositoriesView | FileHistoryView | LineHistoryView | CompareView | SearchView;\nexport type ViewWithFiles = RepositoriesView | CompareView | SearchView;\n\nexport interface TreeViewNodeStateChangeEvent<T> extends TreeViewExpansionEvent<T> {\n    state: TreeItemCollapsibleState;\n}\n\nexport abstract class ViewBase<TRoot extends ViewNode<View>> implements TreeDataProvider<ViewNode>, Disposable {\n    protected _onDidChangeTreeData = new EventEmitter<ViewNode>();\n    get onDidChangeTreeData(): Event<ViewNode> {\n        return this._onDidChangeTreeData.event;\n    }\n\n    private _onDidChangeVisibility = new EventEmitter<TreeViewVisibilityChangeEvent>();\n    get onDidChangeVisibility(): Event<TreeViewVisibilityChangeEvent> {\n        return this._onDidChangeVisibility.event;\n    }\n\n    private _onDidChangeNodeState = new EventEmitter<TreeViewNodeStateChangeEvent<ViewNode>>();\n    get onDidChangeNodeState(): Event<TreeViewNodeStateChangeEvent<ViewNode>> {\n        return this._onDidChangeNodeState.event;\n    }\n\n    protected _disposable: Disposable | undefined;\n    protected _root: TRoot | undefined;\n    protected _tree: TreeView<ViewNode> | undefined;\n\n    constructor(\n        public readonly id: string\n    ) {\n        this.registerCommands();\n\n        Container.context.subscriptions.push(configuration.onDidChange(this.onConfigurationChanged, this));\n        setImmediate(() => this.onConfigurationChanged(configuration.initializingChangeEvent));\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    getQualifiedCommand(command: string) {\n        return `${this.id}.${command}`;\n    }\n\n    protected abstract get location(): string;\n\n    protected abstract getRoot(): TRoot;\n    protected abstract registerCommands(): void;\n    protected abstract onConfigurationChanged(e: ConfigurationChangeEvent): void;\n\n    protected initialize(container?: string, options: { showCollapseAll?: boolean } = {}) {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._onDidChangeTreeData = new EventEmitter<ViewNode>();\n        }\n\n        this._tree = window.createTreeView(`${this.id}${container ? `:${container}` : ''}`, {\n            ...options,\n            treeDataProvider: this\n        });\n        this._disposable = Disposable.from(\n            this._tree,\n            this._tree.onDidChangeVisibility(Functions.debounce(this.onVisibilityChanged, 250), this),\n            this._tree.onDidCollapseElement(this.onElementCollapsed, this),\n            this._tree.onDidExpandElement(this.onElementExpanded, this)\n        );\n    }\n\n    protected ensureRoot() {\n        if (this._root === undefined) {\n            this._root = this.getRoot();\n        }\n\n        return this._root;\n    }\n\n    getChildren(node?: ViewNode): ViewNode[] | Promise<ViewNode[]> {\n        if (node !== undefined) return node.getChildren();\n\n        const root = this.ensureRoot();\n        return root.getChildren();\n    }\n\n    getParent(node: ViewNode): ViewNode | undefined {\n        return node.getParent();\n    }\n\n    getTreeItem(node: ViewNode): TreeItem | Promise<TreeItem> {\n        return node.getTreeItem();\n    }\n\n    protected onElementCollapsed(e: TreeViewExpansionEvent<ViewNode>) {\n        this._onDidChangeNodeState.fire({ ...e, state: TreeItemCollapsibleState.Collapsed });\n    }\n\n    protected onElementExpanded(e: TreeViewExpansionEvent<ViewNode>) {\n        this._onDidChangeNodeState.fire({ ...e, state: TreeItemCollapsibleState.Expanded });\n    }\n\n    protected onVisibilityChanged(e: TreeViewVisibilityChangeEvent) {\n        this._onDidChangeVisibility.fire(e);\n    }\n\n    get selection(): ViewNode[] {\n        if (this._tree === undefined || this._root === undefined) return [];\n\n        return this._tree.selection;\n    }\n\n    get visible(): boolean {\n        return this._tree !== undefined ? this._tree.visible : false;\n    }\n\n    @debug()\n    async refresh(reset: boolean = false) {\n        if (this._root !== undefined) {\n            await this._root.refresh(reset);\n        }\n\n        this.triggerNodeChange();\n    }\n\n    @debug({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    async refreshNode(node: ViewNode, reset: boolean = false, args?: RefreshNodeCommandArgs) {\n        if (args !== undefined) {\n            if (isPageable(node)) {\n                if (args.maxCount === undefined || args.maxCount === 0) {\n                    node.maxCount = args.maxCount;\n                }\n                else {\n                    node.maxCount = (node.maxCount || args.maxCount) + args.maxCount;\n                }\n            }\n        }\n\n        const cancel = await node.refresh(reset);\n        if (cancel === true) return;\n\n        this.triggerNodeChange(node);\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    async reveal(\n        node: ViewNode,\n        options?: {\n            select?: boolean;\n            focus?: boolean;\n            expand?: boolean | number;\n        }\n    ) {\n        if (this._tree === undefined) return;\n\n        try {\n            await this._tree.reveal(node, options);\n        }\n        catch (ex) {\n            Logger.error(ex);\n        }\n    }\n\n    @log()\n    async show() {\n        try {\n            const location = this.location;\n            return await commands.executeCommand(`${this.id}${location ? `:${location}` : ''}.focus`);\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return;\n        }\n    }\n\n    @debug({\n        args: { 0: (n: ViewNode) => (n != null ? n.toString() : '') }\n    })\n    triggerNodeChange(node?: ViewNode) {\n        // Since the root node won't actually refresh, force everything\n        this._onDidChangeTreeData.fire(node !== undefined && node !== this._root ? node : undefined);\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { CompareViewConfig, configuration, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport {\n    CommandContext,\n    NamedRef,\n    PinnedComparison,\n    PinnedComparisons,\n    setCommandContext,\n    WorkspaceState\n} from '../constants';\nimport { Container } from '../container';\nimport { CompareNode, CompareResultsNode, nodeSupportsConditionalDismissal, ViewNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\nexport class CompareView extends ViewBase<CompareNode> {\n    constructor() {\n        super('gitlens.views.compare');\n\n        setCommandContext(CommandContext.ViewsCompareKeepResults, this.keepResults);\n    }\n\n    getRoot() {\n        return new CompareNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('clear'), () => this.clear(), this);\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n        commands.registerCommand(this.getQualifiedCommand('setKeepResultsToOn'), () => this.setKeepResults(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setKeepResultsToOff'),\n            () => this.setKeepResults(false),\n            this\n        );\n\n        commands.registerCommand(this.getQualifiedCommand('pinComparison'), this.pinComparison, this);\n        commands.registerCommand(this.getQualifiedCommand('unpinComparison'), this.unpinComparison, this);\n        commands.registerCommand(this.getQualifiedCommand('swapComparison'), this.swapComparison, this);\n\n        commands.registerCommand(this.getQualifiedCommand('selectForCompare'), this.selectForCompare, this);\n        commands.registerCommand(this.getQualifiedCommand('compareWithSelected'), this.compareWithSelected, this);\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('compare').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('compare')('location').value)) {\n            this.initialize(this.config.location, { showCollapseAll: true });\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get config(): ViewsConfig & CompareViewConfig {\n        return { ...Container.config.views, ...Container.config.views.compare };\n    }\n\n    get keepResults(): boolean {\n        return Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsCompareKeepResults, false);\n    }\n\n    clear() {\n        if (this._root === undefined) return;\n\n        this._root.clear();\n    }\n\n    dismissNode(node: ViewNode) {\n        if (this._root === undefined) return;\n        if (nodeSupportsConditionalDismissal(node) && node.canDismiss() === false) return;\n\n        this._root.dismiss(node);\n    }\n\n    compare(repoPath: string, ref1: string | NamedRef, ref2: string | NamedRef) {\n        return this.addResults(\n            new CompareResultsNode(\n                this,\n                repoPath,\n                typeof ref1 === 'string' ? { ref: ref1 } : ref1,\n                typeof ref2 === 'string' ? { ref: ref2 } : ref2\n            )\n        );\n    }\n\n    compareWithSelected(repoPath?: string, ref?: string | NamedRef) {\n        const root = this.ensureRoot();\n        void root.compareWithSelected(repoPath, ref);\n    }\n\n    selectForCompare(repoPath?: string, ref?: string | NamedRef) {\n        const root = this.ensureRoot();\n        void root.selectForCompare(repoPath, ref);\n    }\n\n    getPinnedComparisons() {\n        const pinned = Container.context.workspaceState.get<PinnedComparisons>(WorkspaceState.PinnedComparisons);\n        if (pinned == null) return [];\n\n        return Object.values(pinned).map(p => new CompareResultsNode(this, p.path, p.ref1, p.ref2, true));\n    }\n\n    async updatePinnedComparison(id: string, pin?: PinnedComparison) {\n        let pinned = Container.context.workspaceState.get<PinnedComparisons>(WorkspaceState.PinnedComparisons);\n        if (pinned == null) {\n            pinned = Object.create(null);\n        }\n\n        if (pin !== undefined) {\n            pinned![id] = {\n                path: pin.path,\n                ref1: pin.ref1,\n                ref2: pin.ref2\n            };\n        }\n        else {\n            const { [id]: _, ...rest } = pinned!;\n            pinned = rest;\n        }\n\n        await Container.context.workspaceState.update(WorkspaceState.PinnedComparisons, pinned);\n    }\n\n    private async addResults(results: ViewNode) {\n        if (!this.visible) {\n            void (await this.show());\n        }\n\n        const root = this.ensureRoot();\n        root.addOrReplace(results, !this.keepResults);\n\n        setImmediate(() => this.reveal(results, { select: true, expand: true }));\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(configuration.name('views')('compare')('files')('layout').value, layout);\n    }\n\n    private setKeepResults(enabled: boolean) {\n        Container.context.workspaceState.update(WorkspaceState.ViewsCompareKeepResults, enabled);\n        setCommandContext(CommandContext.ViewsCompareKeepResults, enabled);\n    }\n\n    private async pinComparison(node: ViewNode) {\n        if (!(node instanceof CompareResultsNode)) return;\n\n        return node.pin();\n    }\n\n    private swapComparison(node: ViewNode) {\n        if (!(node instanceof CompareResultsNode)) return;\n\n        return node.swap();\n    }\n\n    private async unpinComparison(node: ViewNode) {\n        if (!(node instanceof CompareResultsNode)) return;\n\n        return node.unpin();\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, FileHistoryViewConfig, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitUri';\nimport { FileHistoryTrackerNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\nexport class FileHistoryView extends ViewBase<FileHistoryTrackerNode> {\n    constructor() {\n        super('gitlens.views.fileHistory');\n    }\n\n    getRoot() {\n        return new FileHistoryTrackerNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(this.getQualifiedCommand('changeBase'), () => this.changeBase(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOn'),\n            () => this.setEditorFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOff'),\n            () => this.setEditorFollowing(false),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOn'),\n            () => this.setRenameFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOff'),\n            () => this.setRenameFollowing(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('fileHistory').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value) &&\n            !configuration.changed(e, configuration.name('advanced')('fileHistoryFollowsRenames').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('fileHistory')('enabled').value)) {\n            setCommandContext(CommandContext.ViewsFileHistoryEditorFollowing, true);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('fileHistory')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get config(): ViewsConfig & FileHistoryViewConfig {\n        return { ...Container.config.views, ...Container.config.views.fileHistory };\n    }\n\n    async showHistoryForUri(uri: GitUri, baseRef?: string) {\n        const root = this.ensureRoot();\n\n        this.setEditorFollowing(false);\n        await root.showHistoryForUri(uri, baseRef);\n        return this.show();\n    }\n\n    private changeBase() {\n        if (this._root !== undefined) {\n            void this._root.changeBase();\n        }\n    }\n\n    private setEditorFollowing(enabled: boolean) {\n        setCommandContext(CommandContext.ViewsFileHistoryEditorFollowing, enabled);\n        if (this._root !== undefined) {\n            this._root.setEditorFollowing(enabled);\n        }\n    }\n\n    private setRenameFollowing(enabled: boolean) {\n        return configuration.updateEffective(\n            configuration.name('advanced')('fileHistoryFollowsRenames').value,\n            enabled\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, LineHistoryViewConfig, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { LineHistoryTrackerNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\nexport class LineHistoryView extends ViewBase<LineHistoryTrackerNode> {\n    constructor() {\n        super('gitlens.views.lineHistory');\n    }\n\n    getRoot() {\n        return new LineHistoryTrackerNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(this.getQualifiedCommand('changeBase'), () => this.changeBase(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOn'),\n            () => this.setEditorFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOff'),\n            () => this.setEditorFollowing(false),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOn'),\n            () => this.setRenameFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOff'),\n            () => this.setRenameFollowing(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('lineHistory').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value) &&\n            !configuration.changed(e, configuration.name('advanced')('fileHistoryFollowsRenames').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('lineHistory')('enabled').value)) {\n            setCommandContext(CommandContext.ViewsLineHistoryEditorFollowing, true);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('lineHistory')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get config(): ViewsConfig & LineHistoryViewConfig {\n        return { ...Container.config.views, ...Container.config.views.lineHistory };\n    }\n\n    private changeBase() {\n        if (this._root !== undefined) {\n            void this._root.changeBase();\n        }\n    }\n\n    private setEditorFollowing(enabled: boolean) {\n        setCommandContext(CommandContext.ViewsLineHistoryEditorFollowing, enabled);\n        if (this._root !== undefined) {\n            this._root.setEditorFollowing(enabled);\n        }\n    }\n\n    private setRenameFollowing(enabled: boolean) {\n        return configuration.updateEffective(\n            configuration.name('advanced')('fileHistoryFollowsRenames').value,\n            enabled\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent, Event, EventEmitter } from 'vscode';\nimport { configuration, RepositoriesViewConfig, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext, WorkspaceState } from '../constants';\nimport { Container } from '../container';\nimport { RepositoriesNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\nexport class RepositoriesView extends ViewBase<RepositoriesNode> {\n    constructor() {\n        super('gitlens.views.repositories');\n    }\n\n    private _onDidChangeAutoRefresh = new EventEmitter<void>();\n    get onDidChangeAutoRefresh(): Event<void> {\n        return this._onDidChangeAutoRefresh.event;\n    }\n\n    getRoot() {\n        return new RepositoriesNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n\n        commands.registerCommand(\n            this.getQualifiedCommand('setAutoRefreshToOn'),\n            () => this.setAutoRefresh(Container.config.views.repositories.autoRefresh, true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setAutoRefreshToOff'),\n            () => this.setAutoRefresh(Container.config.views.repositories.autoRefresh, false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('repositories').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('repositories')('autoRefresh').value)) {\n            void this.setAutoRefresh(Container.config.views.repositories.autoRefresh);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('repositories')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get autoRefresh() {\n        return (\n            this.config.autoRefresh &&\n            Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsRepositoriesAutoRefresh, true)\n        );\n    }\n\n    get config(): ViewsConfig & RepositoriesViewConfig {\n        return { ...Container.config.views, ...Container.config.views.repositories };\n    }\n\n    private async setAutoRefresh(enabled: boolean, workspaceEnabled?: boolean) {\n        if (enabled) {\n            if (workspaceEnabled === undefined) {\n                workspaceEnabled = Container.context.workspaceState.get<boolean>(\n                    WorkspaceState.ViewsRepositoriesAutoRefresh,\n                    true\n                );\n            }\n            else {\n                await Container.context.workspaceState.update(\n                    WorkspaceState.ViewsRepositoriesAutoRefresh,\n                    workspaceEnabled\n                );\n            }\n        }\n\n        setCommandContext(CommandContext.ViewsRepositoriesAutoRefresh, enabled && workspaceEnabled);\n\n        this._onDidChangeAutoRefresh.fire();\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(\n            configuration.name('views')('repositories')('files')('layout').value,\n            layout\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, SearchViewConfig, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext, WorkspaceState } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitRepoSearchBy } from '../git/gitService';\nimport { Functions, Strings } from '../system';\nimport { nodeSupportsConditionalDismissal, SearchNode, SearchResultsCommitsNode, ViewNode } from './nodes';\nimport { ViewBase } from './viewBase';\n\ninterface SearchQueryResult {\n    label: string;\n    log: GitLog | undefined;\n}\n\nexport class SearchView extends ViewBase<SearchNode> {\n    constructor() {\n        super('gitlens.views.search');\n\n        setCommandContext(CommandContext.ViewsSearchKeepResults, this.keepResults);\n    }\n\n    getRoot() {\n        return new SearchNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('clear'), () => this.clear(), this);\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n        commands.registerCommand(this.getQualifiedCommand('setKeepResultsToOn'), () => this.setKeepResults(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setKeepResultsToOff'),\n            () => this.setKeepResults(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('search').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('search')('location').value)) {\n            this.initialize(this.config.location, { showCollapseAll: true });\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(true);\n        }\n    }\n\n    get config(): ViewsConfig & SearchViewConfig {\n        return { ...Container.config.views, ...Container.config.views.search };\n    }\n\n    get keepResults(): boolean {\n        return Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsSearchKeepResults, false);\n    }\n\n    clear() {\n        if (this._root === undefined) return;\n\n        this._root.clear();\n    }\n\n    dismissNode(node: ViewNode) {\n        if (this._root === undefined) return;\n        if (nodeSupportsConditionalDismissal(node) && node.canDismiss() === false) return;\n\n        this._root.dismiss(node);\n    }\n\n    async search(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        options: {\n            maxCount?: number;\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ) {\n        await this.show();\n\n        const searchQueryFn = this.getSearchQueryFn(\n            Container.git.getLogForSearch(repoPath, search, searchBy, {\n                maxCount: options.maxCount\n            }),\n            options\n        );\n\n        return this.addResults(\n            new SearchResultsCommitsNode(this, this._root!, repoPath, search, searchBy, searchQueryFn)\n        );\n    }\n\n    showSearchResults(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        results: GitLog,\n        options: {\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ) {\n        const label = this.getSearchLabel(options.label, results);\n        const searchQueryFn = Functions.cachedOnce(this.getSearchQueryFn(results, options), {\n            label: label,\n            log: results\n        });\n\n        return this.addResults(\n            new SearchResultsCommitsNode(this, this._root!, repoPath, search, searchBy, searchQueryFn)\n        );\n    }\n\n    private addResults(results: ViewNode) {\n        const root = this.ensureRoot();\n        root.addOrReplace(results, !this.keepResults);\n\n        setImmediate(() => this.reveal(results, { select: true, expand: true }));\n    }\n\n    private getSearchLabel(\n        label:\n            | string\n            | {\n                  label: string;\n                  resultsType?: { singular: string; plural: string };\n              },\n        log: GitLog | undefined\n    ) {\n        if (typeof label === 'string') return label;\n\n        const count = log !== undefined ? log.count : 0;\n        const truncated = log !== undefined ? log.truncated : false;\n\n        const resultsType =\n            label.resultsType === undefined ? { singular: 'result', plural: 'results' } : label.resultsType;\n\n        return `${Strings.pluralize(resultsType.singular, count, {\n            number: truncated ? `${count}+` : undefined,\n            plural: resultsType.plural,\n            zero: 'No'\n        })} for ${label.label}`;\n    }\n\n    private getSearchQueryFn(\n        results: Promise<GitLog | undefined> | GitLog | undefined,\n        options: {\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ): (maxCount: number | undefined) => Promise<SearchQueryResult> {\n        return async (maxCount: number | undefined) => {\n            if (Functions.isPromise(results)) {\n                results = await results;\n            }\n\n            let log;\n            if (results !== undefined) {\n                log = await (results.query === undefined\n                    ? (maxCount: number | undefined) => Promise.resolve(results)\n                    : results.query)(maxCount);\n            }\n\n            const label = this.getSearchLabel(options.label, log);\n            return {\n                label: label,\n                log: log\n            };\n        };\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(configuration.name('views')('search')('files')('layout').value, layout);\n    }\n\n    private setKeepResults(enabled: boolean) {\n        Container.context.workspaceState.update(WorkspaceState.ViewsSearchKeepResults, enabled);\n        setCommandContext(CommandContext.ViewsSearchKeepResults, enabled);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Disposable, InputBoxOptions, Terminal, TextDocumentShowOptions, Uri, window } from 'vscode';\nimport {\n    Commands,\n    DiffWithCommandArgs,\n    DiffWithCommandArgsRevision,\n    DiffWithPreviousCommandArgs,\n    DiffWithWorkingCommandArgs,\n    openEditor,\n    OpenFileInRemoteCommandArgs,\n    OpenFileRevisionCommandArgs,\n    openWorkspace\n} from '../commands';\nimport { BuiltInCommands, CommandContext, extensionTerminalName, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { toGitLensFSUri } from '../git/fsProvider';\nimport { GitService, GitUri } from '../git/gitService';\nimport { Arrays } from '../system';\nimport {\n    BranchNode,\n    BranchTrackingStatusNode,\n    CommitFileNode,\n    CommitNode,\n    FolderNode,\n    RemoteNode,\n    RepositoryNode,\n    ResultsFileNode,\n    StashFileNode,\n    StashNode,\n    StatusFileNode,\n    TagNode,\n    ViewNode,\n    ViewRefNode,\n    viewSupportsNodeDismissal\n} from './nodes';\n\nexport interface RefreshNodeCommandArgs {\n    maxCount?: number;\n}\n\ninterface ICompareSelected {\n    ref: string;\n    repoPath: string | undefined;\n    uri?: Uri;\n}\n\nexport class ViewCommands implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _terminal: Terminal | undefined;\n    private _terminalCwd: string | undefined;\n\n    constructor() {\n        commands.registerCommand(\n            'gitlens.views.refreshNode',\n            (node: ViewNode, reset?: boolean, args?: RefreshNodeCommandArgs) =>\n                node.view.refreshNode(node, reset === undefined ? true : reset, args),\n            this\n        );\n        commands.registerCommand(\n            'gitlens.views.expandNode',\n            (node: ViewNode) => node.view.reveal(node, { select: false, focus: false, expand: 3 }),\n            this\n        );\n        commands.registerCommand(\n            'gitlens.views.dismissNode',\n            (node: ViewNode) => viewSupportsNodeDismissal(node.view) && node.view.dismissNode(node),\n            this\n        );\n\n        commands.registerCommand('gitlens.views.fetch', this.fetch, this);\n        commands.registerCommand('gitlens.views.pull', this.pull, this);\n        commands.registerCommand('gitlens.views.push', this.push, this);\n        commands.registerCommand('gitlens.views.pushWithForce', n => this.push(n, true), this);\n        commands.registerCommand('gitlens.views.closeRepository', this.closeRepository, this);\n\n        commands.registerCommand('gitlens.views.setAsDefault', this.setAsDefault, this);\n        commands.registerCommand('gitlens.views.unsetAsDefault', this.unsetAsDefault, this);\n\n        commands.registerCommand('gitlens.views.openInTerminal', this.openInTerminal, this);\n        commands.registerCommand('gitlens.views.star', this.star, this);\n        commands.registerCommand('gitlens.views.unstar', this.unstar, this);\n\n        commands.registerCommand('gitlens.views.exploreRepoRevision', this.exploreRepoRevision, this);\n\n        commands.registerCommand('gitlens.views.openChanges', this.openChanges, this);\n        commands.registerCommand('gitlens.views.openChangesWithWorking', this.openChangesWithWorking, this);\n        commands.registerCommand('gitlens.views.openFile', this.openFile, this);\n        commands.registerCommand('gitlens.views.openFileRevision', this.openFileRevision, this);\n        commands.registerCommand('gitlens.views.openFileRevisionInRemote', this.openFileRevisionInRemote, this);\n        commands.registerCommand('gitlens.views.openChangedFiles', this.openChangedFiles, this);\n        commands.registerCommand('gitlens.views.openChangedFileChanges', this.openChangedFileChanges, this);\n        commands.registerCommand(\n            'gitlens.views.openChangedFileChangesWithWorking',\n            this.openChangedFileChangesWithWorking,\n            this\n        );\n        commands.registerCommand('gitlens.views.openChangedFileRevisions', this.openChangedFileRevisions, this);\n        commands.registerCommand('gitlens.views.applyChanges', this.applyChanges, this);\n        commands.registerCommand('gitlens.views.checkout', this.checkout, this);\n\n        commands.registerCommand('gitlens.views.stageDirectory', this.stageDirectory, this);\n        commands.registerCommand('gitlens.views.stageFile', this.stageFile, this);\n        commands.registerCommand('gitlens.views.unstageDirectory', this.unstageDirectory, this);\n        commands.registerCommand('gitlens.views.unstageFile', this.unstageFile, this);\n\n        commands.registerCommand('gitlens.views.compareAncestryWithWorking', this.compareAncestryWithWorking, this);\n        commands.registerCommand('gitlens.views.compareWithHead', this.compareWithHead, this);\n        commands.registerCommand('gitlens.views.compareWithRemote', this.compareWithRemote, this);\n        commands.registerCommand('gitlens.views.compareWithSelected', this.compareWithSelected, this);\n        commands.registerCommand('gitlens.views.selectForCompare', this.selectForCompare, this);\n        commands.registerCommand('gitlens.views.compareFileWithSelected', this.compareFileWithSelected, this);\n        commands.registerCommand('gitlens.views.selectFileForCompare', this.selectFileForCompare, this);\n        commands.registerCommand('gitlens.views.compareWithWorking', this.compareWithWorking, this);\n\n        commands.registerCommand('gitlens.views.terminalCheckoutBranch', this.terminalCheckoutBranch, this);\n        commands.registerCommand('gitlens.views.terminalCreateBranch', this.terminalCreateBranch, this);\n        commands.registerCommand('gitlens.views.terminalDeleteBranch', this.terminalDeleteBranch, this);\n        commands.registerCommand('gitlens.views.terminalMergeBranch', this.terminalMergeBranch, this);\n        commands.registerCommand('gitlens.views.terminalRebaseBranch', this.terminalRebaseBranch, this);\n        commands.registerCommand('gitlens.views.terminalRebaseBranchToRemote', this.terminalRebaseBranchToRemote, this);\n        commands.registerCommand(\n            'gitlens.views.terminalSquashBranchIntoCommit',\n            this.terminalSquashBranchIntoCommit,\n            this\n        );\n        commands.registerCommand('gitlens.views.terminalCheckoutCommit', this.terminalCheckoutCommit, this);\n        commands.registerCommand('gitlens.views.terminalCherryPickCommit', this.terminalCherryPickCommit, this);\n        commands.registerCommand('gitlens.views.terminalPushCommit', this.terminalPushCommit, this);\n        commands.registerCommand('gitlens.views.terminalRebaseCommit', this.terminalRebaseCommit, this);\n        commands.registerCommand('gitlens.views.terminalResetCommit', this.terminalResetCommit, this);\n        commands.registerCommand('gitlens.views.terminalRevertCommit', this.terminalRevertCommit, this);\n        commands.registerCommand('gitlens.views.terminalRemoveRemote', this.terminalRemoveRemote, this);\n        commands.registerCommand('gitlens.views.terminalCreateTag', this.terminalCreateTag, this);\n        commands.registerCommand('gitlens.views.terminalDeleteTag', this.terminalDeleteTag, this);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private fetch(node: RemoteNode | RepositoryNode) {\n        if (node instanceof RemoteNode) return node.fetch();\n        if (node instanceof RepositoryNode) return node.fetch();\n        return;\n    }\n\n    private pull(node: RepositoryNode | BranchTrackingStatusNode) {\n        if (node instanceof BranchTrackingStatusNode) {\n            node = node.getParent() as RepositoryNode;\n        }\n        if (!(node instanceof RepositoryNode)) return;\n\n        return node.pull();\n    }\n\n    private push(node: RepositoryNode | BranchTrackingStatusNode, force?: boolean) {\n        if (node instanceof BranchTrackingStatusNode) {\n            node = node.getParent() as RepositoryNode;\n        }\n        if (!(node instanceof RepositoryNode)) return;\n\n        return node.push({ force: force });\n    }\n\n    private async applyChanges(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) {\n            return;\n        }\n\n        void (await this.openFile(node));\n\n        if (node instanceof ResultsFileNode) {\n            void (await Container.git.applyChangesToWorkingFile(node.uri, node.ref1, node.ref2));\n\n            return;\n        }\n\n        if (node.uri.sha !== undefined && node.uri.sha !== 'HEAD') {\n            void (await Container.git.applyChangesToWorkingFile(node.uri));\n        }\n    }\n\n    private async checkout(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        return Container.git.checkout(node.repoPath, node.ref);\n    }\n\n    private closeRepository(node: RepositoryNode) {\n        if (!(node instanceof RepositoryNode)) return;\n\n        node.repo.closed = true;\n    }\n\n    private compareWithHead(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        return Container.compareView.compare(node.repoPath, node.ref, 'HEAD');\n    }\n\n    private compareWithRemote(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n        if (!node.branch.tracking) return;\n\n        return Container.compareView.compare(node.repoPath, node.branch.tracking, node.ref);\n    }\n\n    private compareWithWorking(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        return Container.compareView.compare(node.repoPath, node.ref, '');\n    }\n\n    private async compareAncestryWithWorking(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        const branch = await Container.git.getBranch(node.repoPath);\n        if (branch === undefined) return;\n\n        const commonAncestor = await Container.git.getMergeBase(node.repoPath, branch.ref, node.ref);\n        if (commonAncestor === undefined) return;\n\n        return Container.compareView.compare(\n            node.repoPath,\n            { ref: commonAncestor, label: `ancestry with ${node.ref} (${GitService.shortenSha(commonAncestor)})` },\n            ''\n        );\n    }\n\n    private compareWithSelected(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        Container.compareView.compareWithSelected(node.repoPath, node.ref);\n    }\n\n    private selectForCompare(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        Container.compareView.selectForCompare(node.repoPath, node.ref);\n    }\n\n    private compareFileWithSelected(node: CommitFileNode | ResultsFileNode | StashFileNode) {\n        if (\n            this._selectedFile === undefined ||\n            (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) ||\n            node.ref === undefined\n        ) {\n            return;\n        }\n        if (this._selectedFile.repoPath !== node.repoPath) {\n            this.selectFileForCompare(node);\n            return;\n        }\n\n        const selected = this._selectedFile;\n\n        this._selectedFile = undefined;\n        setCommandContext(CommandContext.ViewsCanCompareFile, false);\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: selected.repoPath,\n            lhs: {\n                sha: selected.ref,\n                uri: selected.uri!\n            },\n            rhs: {\n                sha: node.ref,\n                uri: node.uri\n            }\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n\n    private _selectedFile: ICompareSelected | undefined;\n\n    private selectFileForCompare(node: CommitFileNode | ResultsFileNode | StashFileNode) {\n        if ((!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) || node.ref === undefined) return;\n\n        this._selectedFile = {\n            ref: node.ref,\n            repoPath: node.repoPath,\n            uri: node.uri\n        };\n        setCommandContext(CommandContext.ViewsCanCompareFile, true);\n    }\n\n    private exploreRepoRevision(node: ViewRefNode, options: { openInNewWindow?: boolean } = {}) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        const uri = toGitLensFSUri(node.ref, node.repoPath);\n        const gitUri = GitUri.fromRevisionUri(uri);\n\n        openWorkspace(uri, `${paths.basename(gitUri.repoPath!)} @ ${gitUri.shortSha}`, options);\n\n        void commands.executeCommand(BuiltInCommands.FocusFilesExplorer);\n    }\n\n    private openChanges(node: CommitFileNode | ResultsFileNode | StashFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        const command = node.getCommand();\n        if (command === undefined || command.arguments === undefined) return;\n\n        const [uri, args] = command.arguments as [Uri, DiffWithPreviousCommandArgs];\n        args.showOptions!.preview = false;\n        return commands.executeCommand(command.command, uri, args);\n    }\n\n    private async openChangesWithWorking(node: CommitFileNode | ResultsFileNode | StashFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        const args: DiffWithWorkingCommandArgs = {\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            }\n        };\n\n        if (node instanceof ResultsFileNode) {\n            args.commit = await Container.git.getLogCommitForFile(node.repoPath, node.uri.fsPath, {\n                ref: node.uri.sha,\n                firstIfNotFound: true,\n                reverse: true\n            });\n        }\n\n        return commands.executeCommand(Commands.DiffWithWorking, node.uri, args);\n    }\n\n    private openFile(node: CommitFileNode | ResultsFileNode | StashFileNode | StatusFileNode) {\n        if (\n            !(node instanceof CommitFileNode) &&\n            !(node instanceof ResultsFileNode) &&\n            !(node instanceof StatusFileNode)\n        ) {\n            return;\n        }\n\n        return openEditor(node.uri, { preserveFocus: true, preview: false });\n    }\n\n    private openFileRevision(\n        node: CommitFileNode | ResultsFileNode | StashFileNode,\n        options: OpenFileRevisionCommandArgs = { showOptions: { preserveFocus: true, preview: false } }\n    ) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        let uri = options.uri;\n        if (uri == null) {\n            if (node instanceof ResultsFileNode) {\n                uri = GitUri.toRevisionUri(node.uri);\n            }\n            else {\n                uri =\n                    node.commit.status === 'D'\n                        ? GitUri.toRevisionUri(\n                              node.commit.previousSha!,\n                              node.commit.previousUri.fsPath,\n                              node.commit.repoPath\n                          )\n                        : GitUri.toRevisionUri(node.uri);\n            }\n        }\n\n        return openEditor(uri, options.showOptions || { preserveFocus: true, preview: false });\n    }\n\n    private async openChangedFileChanges(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = node.commit.files.map(s => GitUri.fromFile(s, repoPath));\n\n        for (const uri of uris) {\n            await this.openDiffWith(\n                repoPath,\n                {\n                    uri: uri,\n                    sha:\n                        node.commit.previousSha !== undefined ? node.commit.previousSha : GitService.deletedOrMissingSha\n                },\n                { uri: uri, sha: node.commit.sha },\n                options\n            );\n        }\n    }\n\n    private async openChangedFileChangesWithWorking(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = Arrays.filterMap(node.commit.files, f =>\n            f.status !== 'D' ? GitUri.fromFile(f, repoPath) : undefined\n        );\n\n        for (const uri of uris) {\n            await this.openDiffWith(repoPath, { uri: uri, sha: node.commit.sha }, { uri: uri, sha: '' }, options);\n        }\n    }\n\n    private async openChangedFiles(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = Arrays.filterMap(node.commit.files, f => GitUri.fromFile(f, repoPath));\n\n        for (const uri of uris) {\n            await openEditor(uri, options);\n        }\n    }\n\n    private async openChangedFileRevisions(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const uris = Arrays.filterMap(node.commit.files, f =>\n            GitUri.toRevisionUri(\n                f.status === 'D' ? node.commit.previousFileSha : node.commit.sha,\n                f,\n                node.commit.repoPath\n            )\n        );\n        for (const uri of uris) {\n            await openEditor(uri, options);\n        }\n    }\n\n    private async openDiffWith(\n        repoPath: string,\n        lhs: DiffWithCommandArgsRevision,\n        rhs: DiffWithCommandArgsRevision,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: repoPath,\n            lhs: lhs,\n            rhs: rhs,\n            showOptions: options\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n\n    private async openFileRevisionInRemote(node: CommitFileNode | StashFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        return commands.executeCommand(Commands.OpenFileInRemote, node.commit.toGitUri(node.commit.status === 'D'), {\n            range: false\n        } as OpenFileInRemoteCommandArgs);\n    }\n\n    private openInTerminal(node: RepositoryNode) {\n        if (!(node instanceof RepositoryNode)) return;\n\n        return commands.executeCommand(BuiltInCommands.OpenInTerminal, Uri.file(node.repo.path));\n    }\n\n    private setAsDefault(node: RemoteNode) {\n        if (node instanceof RemoteNode) return node.setAsDefault();\n        return;\n    }\n\n    private unsetAsDefault(node: RemoteNode) {\n        if (node instanceof RemoteNode) return node.setAsDefault(false);\n        return;\n    }\n\n    private async stageDirectory(node: FolderNode) {\n        if (!(node instanceof FolderNode) || !node.relativePath) return;\n\n        void (await Container.git.stageDirectory(node.repoPath, node.relativePath));\n        void node.triggerChange();\n    }\n\n    private async stageFile(node: CommitFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        void (await Container.git.stageFile(node.repoPath, node.file.fileName));\n        void node.triggerChange();\n    }\n\n    private async unstageDirectory(node: FolderNode) {\n        if (!(node instanceof FolderNode) || !node.relativePath) return;\n\n        void (await Container.git.unStageDirectory(node.repoPath, node.relativePath));\n        void node.triggerChange();\n    }\n\n    private async unstageFile(node: CommitFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        void (await Container.git.unStageFile(node.repoPath, node.file.fileName));\n        void node.triggerChange();\n    }\n\n    private star(node: BranchNode | RepositoryNode) {\n        if (node instanceof BranchNode || node instanceof RepositoryNode) return node.star();\n        return;\n    }\n\n    private unstar(node: BranchNode | RepositoryNode) {\n        if (node instanceof BranchNode || node instanceof RepositoryNode) return node.unstar();\n        return;\n    }\n\n    async terminalCheckoutBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('checkout', `${node.ref}`, node.repoPath);\n    }\n\n    async terminalCreateBranch(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        let remoteBranch = false;\n        let value = undefined;\n        if (node instanceof BranchNode && node.branch.remote) {\n            remoteBranch = true;\n            value = node.branch.getName();\n        }\n\n        const name = await window.showInputBox({\n            prompt: `Please provide a branch name (Press 'Enter' to confirm or 'Escape' to cancel)`,\n            placeHolder: `Branch name`,\n            value: value\n        } as InputBoxOptions);\n        if (name === undefined || name.length === 0) return;\n\n        this.sendTerminalCommand('branch', `${remoteBranch ? '-t ' : ''}${name} ${node.ref}`, node.repoPath);\n    }\n\n    terminalDeleteBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        if (node.branch.remote) {\n            this.sendTerminalCommand('push', `${node.branch.getRemote()} :${node.branch.getName()}`, node.repoPath);\n        }\n        else {\n            this.sendTerminalCommand('branch', `-d ${node.ref}`, node.repoPath);\n        }\n    }\n\n    terminalMergeBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('merge', `${node.ref}`, node.repoPath);\n    }\n\n    terminalRebaseBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('rebase', `-i ${node.ref}`, node.repoPath);\n    }\n\n    terminalRebaseBranchToRemote(node: BranchNode | BranchTrackingStatusNode) {\n        if (node instanceof BranchNode) {\n            if (!node.branch.current || !node.branch.tracking) return;\n\n            this.sendTerminalCommand('rebase', `-i ${node.branch.tracking}`, node.repoPath);\n        }\n        else if (node instanceof BranchTrackingStatusNode) {\n            this.sendTerminalCommand('rebase', `-i ${node.status.upstream}`, node.status.repoPath);\n        }\n    }\n\n    terminalSquashBranchIntoCommit(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('merge', `--squash ${node.ref}`, node.repoPath);\n    }\n\n    terminalCheckoutCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('checkout', `${node.ref}`, node.repoPath);\n    }\n\n    terminalCherryPickCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('cherry-pick', `-e ${node.ref}`, node.repoPath);\n    }\n\n    async terminalPushCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        const branch = node.branch || (await Container.git.getBranch(node.repoPath));\n        if (branch === undefined) return;\n\n        this.sendTerminalCommand('push', `${branch.getRemote()} ${node.ref}:${branch.getName()}`, node.repoPath);\n    }\n\n    terminalRebaseCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('rebase', `-i ${node.ref}^`, node.repoPath);\n    }\n\n    terminalResetCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('reset', `--soft ${node.ref}`, node.repoPath);\n    }\n\n    terminalRevertCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('revert', `-e ${node.ref}`, node.repoPath);\n    }\n\n    terminalRemoveRemote(node: RemoteNode) {\n        if (!(node instanceof RemoteNode)) return;\n\n        this.sendTerminalCommand('remote', `remove ${node.remote.name}`, node.remote.repoPath);\n    }\n\n    async terminalCreateTag(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        const name = await window.showInputBox({\n            prompt: `Please provide a tag name (Press 'Enter' to confirm or 'Escape' to cancel)`,\n            placeHolder: `Tag name`\n        } as InputBoxOptions);\n        if (name === undefined || name.length === 0) return;\n\n        const message = await window.showInputBox({\n            prompt: `Please provide an optional message to annotate the tag (Press 'Enter' to confirm or 'Escape' to cancel)`,\n            placeHolder: `Tag message`\n        } as InputBoxOptions);\n        if (message === undefined) return;\n\n        const args = `${message.length !== 0 ? `-a -m \"${message}\" ` : ''}${name} ${node.ref}`;\n        this.sendTerminalCommand('tag', args, node.repoPath);\n    }\n\n    terminalDeleteTag(node: TagNode) {\n        if (!(node instanceof TagNode)) return;\n\n        this.sendTerminalCommand('tag', `-d ${node.ref}`, node.repoPath);\n    }\n\n    private ensureTerminal(cwd: string): Terminal {\n        if (this._terminal === undefined) {\n            this._terminal = window.createTerminal(extensionTerminalName);\n            this._disposable = window.onDidCloseTerminal((e: Terminal) => {\n                if (e.name === extensionTerminalName) {\n                    this._terminal = undefined;\n                    this._disposable!.dispose();\n                    this._disposable = undefined;\n                }\n            }, this);\n\n            Container.context.subscriptions.push(this._disposable);\n            this._terminalCwd = undefined;\n        }\n\n        if (this._terminalCwd !== cwd) {\n            this._terminal.sendText(`cd \"${cwd}\"`, true);\n            this._terminalCwd = cwd;\n        }\n\n        return this._terminal;\n    }\n\n    private sendTerminalCommand(command: string, args: string, cwd: string) {\n        // let git = GitService.getGitPath();\n        // if (git.includes(' ')) {\n        //     git = `\"${git}\"`;\n        // }\n\n        const terminal = this.ensureTerminal(cwd);\n        terminal.show(false);\n        terminal.sendText(`git ${command} ${args}`, false);\n    }\n}\n","'use strict';\nimport * as fs from 'fs';\nimport {\n    ConfigurationChangeEvent,\n    ConfigurationTarget,\n    Disposable,\n    Uri,\n    ViewColumn,\n    WebviewPanel,\n    WebviewPanelOnDidChangeViewStateEvent,\n    window,\n    workspace\n} from 'vscode';\nimport { Config, configuration } from '../configuration';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Message, SettingsChangedMessage } from '../ui/ipc';\n\nexport abstract class WebviewEditor<TBootstrap> implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _disposablePanel: Disposable | undefined;\n    private _panel: WebviewPanel | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            ...this.registerCommands()\n        );\n    }\n\n    abstract get filename(): string;\n    abstract get id(): string;\n    abstract get title(): string;\n\n    abstract getBootstrap(): TBootstrap;\n    abstract registerCommands(): Disposable[];\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n        this._disposablePanel && this._disposablePanel.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        this.postUpdatedConfiguration();\n    }\n\n    private onPanelDisposed() {\n        this._disposablePanel && this._disposablePanel.dispose();\n        this._panel = undefined;\n    }\n\n    private onViewStateChanged(e: WebviewPanelOnDidChangeViewStateEvent) {\n        Logger.log(\n            'WebviewEditor.onViewStateChanged',\n            `active=${e.webviewPanel.active}, visible=${e.webviewPanel.visible}`\n        );\n\n        // Anytime the webview becomes active, make sure it has the most up-to-date config\n        if (e.webviewPanel.active) {\n            this.postUpdatedConfiguration();\n        }\n    }\n\n    protected async onMessageReceived(e: Message) {\n        if (e == null) return;\n\n        Logger.log(`WebviewEditor.onMessageReceived: type=${e.type}, data=${JSON.stringify(e)}`);\n\n        switch (e.type) {\n            case 'saveSettings':\n                const target = e.scope === 'workspace' ? ConfigurationTarget.Workspace : ConfigurationTarget.Global;\n\n                for (const key in e.changes) {\n                    const inspect = await configuration.inspect(key)!;\n\n                    const value = e.changes[key];\n                    await configuration.update(key, value === inspect.defaultValue ? undefined : value, target);\n                }\n\n                for (const key of e.removes) {\n                    await configuration.update(key, undefined, target);\n                }\n                break;\n        }\n    }\n\n    get visible() {\n        return this._panel === undefined ? false : this._panel.visible;\n    }\n\n    hide() {\n        if (this._panel === undefined) return;\n\n        this._panel.dispose();\n    }\n\n    async show(): Promise<void> {\n        const html = await this.getHtml();\n\n        if (this._panel === undefined) {\n            this._panel = window.createWebviewPanel(\n                this.id,\n                this.title,\n                { viewColumn: ViewColumn.Active, preserveFocus: false },\n                {\n                    retainContextWhenHidden: true,\n                    enableFindWidget: true,\n                    enableCommandUris: true,\n                    enableScripts: true\n                }\n            );\n\n            this._panel.iconPath = Uri.file(Container.context.asAbsolutePath('images/gitlens-icon.png'));\n            this._disposablePanel = Disposable.from(\n                this._panel,\n                this._panel.onDidDispose(this.onPanelDisposed, this),\n                this._panel.onDidChangeViewState(this.onViewStateChanged, this),\n                this._panel.webview.onDidReceiveMessage(this.onMessageReceived, this)\n            );\n\n            this._panel.webview.html = html;\n        }\n        else {\n            // Reset the html to get the webview to reload\n            this._panel.webview.html = '';\n            this._panel.webview.html = html;\n            this._panel.reveal(ViewColumn.Active, false);\n        }\n    }\n\n    private _html: string | undefined;\n    private async getHtml(): Promise<string> {\n        let content;\n        // When we are debugging avoid any caching so that we can change the html and have it update without reloading\n        if (Logger.isDebugging) {\n            content = await new Promise<string>((resolve, reject) => {\n                fs.readFile(Container.context.asAbsolutePath(this.filename), 'utf8', (err, data) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(data);\n                    }\n                });\n            });\n        }\n        else {\n            if (this._html !== undefined) return this._html;\n\n            const doc = await workspace.openTextDocument(Container.context.asAbsolutePath(this.filename));\n            content = doc.getText();\n        }\n\n        this._html = content.replace(\n            /{{root}}/g,\n            Uri.file(Container.context.asAbsolutePath('.'))\n                .with({ scheme: 'vscode-resource' })\n                .toString()\n        );\n\n        if (this._html.includes(\"'{{bootstrap}}'\")) {\n            this._html = this._html.replace(\"'{{bootstrap}}'\", JSON.stringify(this.getBootstrap()));\n        }\n\n        return this._html;\n    }\n\n    private postMessage(message: Message) {\n        if (this._panel === undefined) return false;\n\n        return this._panel!.webview.postMessage(message);\n    }\n\n    private postUpdatedConfiguration() {\n        // Make sure to get the raw config, not from the container which has the modes mixed in\n        return this.postMessage({\n            type: 'settingsChanged',\n            config: configuration.get<Config>()\n        } as SettingsChangedMessage);\n    }\n}\n","'use strict';\nimport { commands, workspace } from 'vscode';\nimport { Commands } from '../commands';\nimport { Config, configuration } from '../configuration';\nimport { SettingsBootstrap } from '../ui/ipc';\nimport { WebviewEditor } from './webviewEditor';\n\nexport class SettingsEditor extends WebviewEditor<SettingsBootstrap> {\n    constructor() {\n        super();\n    }\n\n    get filename(): string {\n        return 'settings.html';\n    }\n\n    get id(): string {\n        return 'gitlens.settings';\n    }\n\n    get title(): string {\n        return 'GitLens Settings';\n    }\n\n    getBootstrap() {\n        return {\n            // Make sure to get the raw config, not from the container which has the modes mixed in\n            config: configuration.get<Config>(),\n            scope: 'user',\n            scopes: this.getAvailableScopes()\n        } as SettingsBootstrap;\n    }\n\n    registerCommands() {\n        return [commands.registerCommand(Commands.ShowSettingsPage, this.show, this)];\n    }\n\n    private getAvailableScopes(): ['user' | 'workspace', string][] {\n        const scopes: ['user' | 'workspace', string][] = [['user', 'User']];\n        if (workspace.workspaceFolders !== undefined && workspace.workspaceFolders.length) {\n            scopes.push(['workspace', 'Workspace']);\n        }\n        return scopes;\n    }\n}\n","'use strict';\nimport { commands } from 'vscode';\nimport { Commands } from '../commands';\nimport { Container } from '../container';\nimport { WelcomeBootstrap } from '../ui/ipc';\nimport { WebviewEditor } from './webviewEditor';\n\nexport class WelcomeEditor extends WebviewEditor<WelcomeBootstrap> {\n    constructor() {\n        super();\n    }\n\n    get filename(): string {\n        return 'welcome.html';\n    }\n\n    get id(): string {\n        return 'gitlens.welcome';\n    }\n\n    get title(): string {\n        return 'Welcome to GitLens';\n    }\n\n    getBootstrap(): WelcomeBootstrap {\n        return {\n            config: Container.config\n        };\n    }\n\n    registerCommands() {\n        return [commands.registerCommand(Commands.ShowWelcomePage, this.show, this)];\n    }\n}\n","'use strict';\nimport { commands, Disposable, ExtensionContext } from 'vscode';\nimport { FileAnnotationController } from './annotations/fileAnnotationController';\nimport { LineAnnotationController } from './annotations/lineAnnotationController';\nimport { GitCodeLensController } from './codelens/codeLensController';\nimport { Commands, ToggleFileBlameCommandArgs } from './commands';\nimport { AnnotationsToggleMode, Config, configuration } from './configuration';\nimport { GitFileSystemProvider } from './git/fsProvider';\nimport { GitService } from './git/gitService';\nimport { LineHoverController } from './hovers/lineHoverController';\nimport { Keyboard } from './keyboard';\nimport { StatusBarController } from './statusbar/statusBarController';\nimport { GitDocumentTracker } from './trackers/gitDocumentTracker';\nimport { GitLineTracker } from './trackers/gitLineTracker';\nimport { CompareView } from './views/compareView';\nimport { FileHistoryView } from './views/fileHistoryView';\nimport { LineHistoryView } from './views/lineHistoryView';\nimport { RepositoriesView } from './views/repositoriesView';\nimport { SearchView } from './views/searchView';\nimport { ViewCommands } from './views/viewCommands';\nimport { VslsController } from './vsls/vsls';\nimport { SettingsEditor } from './webviews/settingsEditor';\nimport { WelcomeEditor } from './webviews/welcomeEditor';\n\nexport class Container {\n    static initialize(context: ExtensionContext, config: Config) {\n        this._context = context;\n        this._config = Container.applyMode(config);\n\n        context.subscriptions.push((this._lineTracker = new GitLineTracker()));\n        context.subscriptions.push((this._tracker = new GitDocumentTracker()));\n        context.subscriptions.push((this._vsls = new VslsController()));\n\n        context.subscriptions.push((this._git = new GitService()));\n\n        // Since there is a bit of a chicken & egg problem with the DocumentTracker and the GitService, initialize the tracker once the GitService is loaded\n        this._tracker.initialize();\n\n        context.subscriptions.push((this._fileAnnotationController = new FileAnnotationController()));\n        context.subscriptions.push((this._lineAnnotationController = new LineAnnotationController()));\n        context.subscriptions.push((this._lineHoverController = new LineHoverController()));\n        context.subscriptions.push((this._statusBarController = new StatusBarController()));\n        context.subscriptions.push((this._codeLensController = new GitCodeLensController()));\n        context.subscriptions.push((this._keyboard = new Keyboard()));\n        context.subscriptions.push((this._settingsEditor = new SettingsEditor()));\n        context.subscriptions.push((this._welcomeEditor = new WelcomeEditor()));\n\n        if (config.views.compare.enabled) {\n            context.subscriptions.push((this._compareView = new CompareView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('compare')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._compareView = new CompareView()));\n                }\n            });\n        }\n\n        if (config.views.fileHistory.enabled) {\n            context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('fileHistory')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n                }\n            });\n        }\n\n        if (config.views.lineHistory.enabled) {\n            context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('lineHistory')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n                }\n            });\n        }\n\n        if (config.views.repositories.enabled) {\n            context.subscriptions.push((this._repositoriesView = new RepositoriesView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('repositories')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._repositoriesView = new RepositoriesView()));\n                }\n            });\n        }\n\n        if (config.views.search.enabled) {\n            context.subscriptions.push((this._searchView = new SearchView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('search')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._searchView = new SearchView()));\n                }\n            });\n        }\n\n        context.subscriptions.push(new GitFileSystemProvider());\n    }\n\n    private static _codeLensController: GitCodeLensController;\n    static get codeLens() {\n        return this._codeLensController;\n    }\n\n    private static _compareView: CompareView | undefined;\n    static get compareView() {\n        if (this._compareView === undefined) {\n            this._context.subscriptions.push((this._compareView = new CompareView()));\n        }\n\n        return this._compareView;\n    }\n\n    private static _config: Config | undefined;\n    static get config() {\n        if (this._config === undefined) {\n            this._config = Container.applyMode(configuration.get<Config>());\n        }\n        return this._config;\n    }\n\n    private static _context: ExtensionContext;\n    static get context() {\n        return this._context;\n    }\n\n    private static _fileAnnotationController: FileAnnotationController;\n    static get fileAnnotations() {\n        return this._fileAnnotationController;\n    }\n\n    private static _fileHistoryView: FileHistoryView | undefined;\n    static get fileHistoryView() {\n        if (this._fileHistoryView === undefined) {\n            this._context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n        }\n\n        return this._fileHistoryView;\n    }\n\n    private static _git: GitService;\n    static get git() {\n        return this._git;\n    }\n\n    private static _keyboard: Keyboard;\n    static get keyboard() {\n        return this._keyboard;\n    }\n\n    private static _lineAnnotationController: LineAnnotationController;\n    static get lineAnnotations() {\n        return this._lineAnnotationController;\n    }\n\n    private static _lineHistoryView: LineHistoryView | undefined;\n    static get lineHistoryView() {\n        if (this._lineHistoryView === undefined) {\n            this._context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n        }\n\n        return this._lineHistoryView;\n    }\n\n    private static _lineHoverController: LineHoverController;\n    static get lineHovers() {\n        return this._lineHoverController;\n    }\n\n    private static _lineTracker: GitLineTracker;\n    static get lineTracker() {\n        return this._lineTracker;\n    }\n\n    private static _repositoriesView: RepositoriesView | undefined;\n    static get repositoriesView(): RepositoriesView {\n        return this._repositoriesView!;\n    }\n\n    private static _searchView: SearchView | undefined;\n    static get searchView() {\n        if (this._searchView === undefined) {\n            this._context.subscriptions.push((this._searchView = new SearchView()));\n        }\n\n        return this._searchView;\n    }\n\n    private static _settingsEditor: SettingsEditor;\n    static get settingsEditor() {\n        return this._settingsEditor;\n    }\n\n    private static _statusBarController: StatusBarController;\n    static get statusBar() {\n        return this._statusBarController;\n    }\n\n    private static _tracker: GitDocumentTracker;\n    static get tracker() {\n        return this._tracker;\n    }\n\n    private static _viewCommands: ViewCommands | undefined;\n    static get viewCommands() {\n        if (this._viewCommands === undefined) {\n            this._context.subscriptions.push((this._viewCommands = new ViewCommands()));\n        }\n        return this._viewCommands;\n    }\n\n    private static _vsls: VslsController;\n    static get vsls() {\n        return this._vsls;\n    }\n\n    private static _welcomeEditor: WelcomeEditor;\n    static get welcomeEditor() {\n        return this._welcomeEditor;\n    }\n\n    static resetConfig() {\n        this._config = undefined;\n    }\n\n    private static applyMode(config: Config) {\n        if (!config.mode.active) return config;\n\n        const mode = config.modes[config.mode.active];\n        if (mode == null) return config;\n\n        if (mode.annotations != null) {\n            let command: string | undefined;\n            switch (mode.annotations) {\n                case 'blame':\n                    config.blame.toggleMode = AnnotationsToggleMode.Window;\n                    command = Commands.ToggleFileBlame;\n                    break;\n                case 'heatmap':\n                    config.heatmap.toggleMode = AnnotationsToggleMode.Window;\n                    command = Commands.ToggleFileHeatmap;\n                    break;\n                case 'recentChanges':\n                    config.recentChanges.toggleMode = AnnotationsToggleMode.Window;\n                    command = Commands.ToggleFileRecentChanges;\n                    break;\n            }\n\n            if (command !== undefined) {\n                // Make sure to delay the execution by a bit so that the configuration changes get propegated first\n                setTimeout(\n                    () =>\n                        commands.executeCommand(command!, {\n                            on: true\n                        } as ToggleFileBlameCommandArgs),\n                    50\n                );\n            }\n        }\n\n        if (mode.codeLens != null) {\n            config.codeLens.enabled = mode.codeLens;\n        }\n\n        if (mode.currentLine != null) {\n            config.currentLine.enabled = mode.currentLine;\n        }\n\n        if (mode.hovers != null) {\n            config.hovers.enabled = mode.hovers;\n        }\n\n        if (mode.statusBar != null) {\n            config.statusBar.enabled = mode.statusBar;\n        }\n\n        if (mode.views != null) {\n            config.views.compare.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.fileHistory.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.lineHistory.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.repositories.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.search.enabled = mode.views;\n        }\n\n        return config;\n    }\n}\n","'use strict';\nexport * from './ui/config';\n\nimport {\n    ConfigurationChangeEvent,\n    ConfigurationTarget,\n    Event,\n    EventEmitter,\n    ExtensionContext,\n    Uri,\n    workspace\n} from 'vscode';\nimport { extensionId } from './constants';\nimport { Container } from './container';\nimport { clearGravatarCache } from './git/gitService';\nimport { Functions } from './system';\nimport { Config } from './ui/config';\n\nconst emptyConfig: any = new Proxy<any>({} as Config, {\n    get(target, propKey, receiver) {\n        return emptyConfig;\n    }\n});\n\nexport class Configuration {\n    static configure(context: ExtensionContext) {\n        context.subscriptions.push(\n            workspace.onDidChangeConfiguration(configuration.onConfigurationChanged, configuration)\n        );\n    }\n\n    private _onDidChange = new EventEmitter<ConfigurationChangeEvent>();\n    get onDidChange(): Event<ConfigurationChangeEvent> {\n        return this._onDidChange.event;\n    }\n\n    private readonly _configAffectedByMode: string[];\n\n    constructor() {\n        this._configAffectedByMode = [\n            `gitlens.${this.name('mode').value}`,\n            `gitlens.${this.name('modes').value}`,\n            `gitlens.${this.name('blame')('toggleMode').value}`,\n            `gitlens.${this.name('codeLens').value}`,\n            `gitlens.${this.name('currentLine').value}`,\n            `gitlens.${this.name('heatmap')('toggleMode').value}`,\n            `gitlens.${this.name('hovers').value}`,\n            `gitlens.${this.name('recentChanges')('toggleMode').value}`,\n            `gitlens.${this.name('statusBar').value}`,\n            `gitlens.${this.name('views')('compare').value}`,\n            `gitlens.${this.name('views')('fileHistory').value}`,\n            `gitlens.${this.name('views')('lineHistory').value}`,\n            `gitlens.${this.name('views')('repositories').value}`,\n            `gitlens.${this.name('views')('search').value}`\n        ];\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (!e.affectsConfiguration(extensionId, null!)) return;\n\n        Container.resetConfig();\n\n        if (configuration.changed(e, configuration.name('defaultGravatarsStyle').value)) {\n            clearGravatarCache();\n        }\n\n        if (\n            configuration.changed(e, configuration.name('mode').value) ||\n            configuration.changed(e, configuration.name('modes').value)\n        ) {\n            const original = e.affectsConfiguration;\n            e = {\n                ...e,\n                affectsConfiguration: (section: string, resource?: Uri) => {\n                    if (this._configAffectedByMode.some(n => section.startsWith(n))) {\n                        return true;\n                    }\n\n                    return original(section, resource);\n                }\n            } as ConfigurationChangeEvent;\n        }\n\n        this._onDidChange.fire(e);\n    }\n\n    readonly initializingChangeEvent: ConfigurationChangeEvent = {\n        affectsConfiguration: (section: string, resource?: Uri) => true\n    };\n\n    get<T>(section?: string, resource?: Uri | null, defaultValue?: T) {\n        return defaultValue === undefined\n            ? workspace\n                  .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n                  .get<T>(section === undefined ? extensionId : section)!\n            : workspace\n                  .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n                  .get<T>(section === undefined ? extensionId : section, defaultValue)!;\n    }\n\n    changed(e: ConfigurationChangeEvent, section: string, resource?: Uri | null) {\n        return e.affectsConfiguration(`${extensionId}.${section}`, resource!);\n    }\n\n    initializing(e: ConfigurationChangeEvent) {\n        return e === this.initializingChangeEvent;\n    }\n\n    inspect(section?: string, resource?: Uri | null) {\n        return workspace\n            .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n            .inspect(section === undefined ? extensionId : section);\n    }\n\n    async migrate<TFrom, TTo>(\n        from: string,\n        to: string,\n        options: { fallbackValue?: TTo; migrationFn?(value: TFrom): TTo } = {}\n    ): Promise<boolean> {\n        const inspection = configuration.inspect(from);\n        if (inspection === undefined) return false;\n\n        let migrated = false;\n        if (inspection.globalValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn ? options.migrationFn(inspection.globalValue as TFrom) : inspection.globalValue,\n                ConfigurationTarget.Global\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.Global);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (inspection.workspaceValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn\n                    ? options.migrationFn(inspection.workspaceValue as TFrom)\n                    : inspection.workspaceValue,\n                ConfigurationTarget.Workspace\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.Workspace);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (inspection.workspaceFolderValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn\n                    ? options.migrationFn(inspection.workspaceFolderValue as TFrom)\n                    : inspection.workspaceFolderValue,\n                ConfigurationTarget.WorkspaceFolder\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.WorkspaceFolder);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (!migrated && options.fallbackValue !== undefined) {\n            await this.update(to, options.fallbackValue, ConfigurationTarget.Global);\n            migrated = true;\n        }\n\n        return migrated;\n    }\n\n    async migrateIfMissing<TFrom, TTo>(from: string, to: string, options: { migrationFn?(value: TFrom): TTo } = {}) {\n        const fromInspection = configuration.inspect(from);\n        if (fromInspection === undefined) return;\n\n        const toInspection = configuration.inspect(to);\n        if (fromInspection.globalValue !== undefined) {\n            if (toInspection === undefined || toInspection.globalValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.globalValue as TFrom)\n                        : fromInspection.globalValue,\n                    ConfigurationTarget.Global\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.Global);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n\n        if (fromInspection.workspaceValue !== undefined) {\n            if (toInspection === undefined || toInspection.workspaceValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.workspaceValue as TFrom)\n                        : fromInspection.workspaceValue,\n                    ConfigurationTarget.Workspace\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.Workspace);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n\n        if (fromInspection.workspaceFolderValue !== undefined) {\n            if (toInspection === undefined || toInspection.workspaceFolderValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.workspaceFolderValue as TFrom)\n                        : fromInspection.workspaceFolderValue,\n                    ConfigurationTarget.WorkspaceFolder\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.WorkspaceFolder);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n    }\n\n    name<K extends keyof Config>(name: K) {\n        return Functions.propOf(emptyConfig as Config, name);\n    }\n\n    update(section: string, value: any, target: ConfigurationTarget, resource?: Uri | null) {\n        return workspace\n            .getConfiguration(extensionId, target === ConfigurationTarget.Global ? undefined : resource!)\n            .update(section, value, target);\n    }\n\n    async updateEffective(section: string, value: any, resource: Uri | null = null) {\n        const inspect = await configuration.inspect(section, resource)!;\n        if (inspect.workspaceFolderValue !== undefined) {\n            if (value === inspect.workspaceFolderValue) return;\n\n            return await configuration.update(section, value, ConfigurationTarget.WorkspaceFolder, resource);\n        }\n\n        if (inspect.workspaceValue !== undefined) {\n            if (value === inspect.workspaceValue) return;\n\n            return await configuration.update(section, value, ConfigurationTarget.Workspace);\n        }\n\n        if (inspect.globalValue === value || (inspect.globalValue === undefined && value === inspect.defaultValue)) {\n            return;\n        }\n\n        return await configuration.update(\n            section,\n            value === inspect.defaultValue ? undefined : value,\n            ConfigurationTarget.Global\n        );\n    }\n}\n\nexport const configuration = new Configuration();\n","'use strict';\nimport { commands, TextEditor, TextEditorEdit, Uri, window } from 'vscode';\nimport { UriComparer } from '../comparers';\nimport { FileAnnotationType } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, EditorCommand } from './common';\n\n@command()\nexport class ClearFileAnnotationsCommand extends EditorCommand {\n    constructor() {\n        super([Commands.ClearFileAnnotations, Commands.ComputingFileAnnotations]);\n    }\n\n    async execute(editor: TextEditor, edit: TextEditorEdit, uri?: Uri): Promise<any> {\n        // Handle the case where we are focused on a non-editor editor (output, debug console)\n        if (editor != null && !isTextEditor(editor)) {\n            if (uri != null && !UriComparer.equals(uri, editor.document.uri)) {\n                const e = window.visibleTextEditors.find(e => UriComparer.equals(uri, e.document.uri));\n                if (e !== undefined) {\n                    editor = e;\n                }\n            }\n        }\n\n        try {\n            return Container.fileAnnotations.clear(editor);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ClearFileAnnotationsCommand');\n            return Messages.showGenericErrorMessage('Unable to clear file annotations');\n        }\n    }\n}\n\nexport interface ToggleFileBlameCommandArgs {\n    on?: boolean;\n    sha?: string;\n    type?: FileAnnotationType;\n}\n\n@command()\nexport class ToggleFileBlameCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileBlame);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: ToggleFileBlameCommandArgs = {}): Promise<any> {\n        // Handle the case where we are focused on a non-editor editor (output, debug console)\n        if (editor != null && !isTextEditor(editor)) {\n            if (uri != null && !UriComparer.equals(uri, editor.document.uri)) {\n                const e = window.visibleTextEditors.find(e => UriComparer.equals(uri, e.document.uri));\n                if (e !== undefined) {\n                    editor = e;\n                }\n            }\n        }\n\n        try {\n            if (args.type === undefined) {\n                args = { ...args, type: FileAnnotationType.Blame };\n            }\n\n            return Container.fileAnnotations.toggle(\n                editor,\n                args.type!,\n                args.sha !== undefined ? args.sha : editor && editor.selection.active.line,\n                args.on\n            );\n        }\n        catch (ex) {\n            Logger.error(ex, 'ToggleFileBlameCommand');\n            return window.showErrorMessage(\n                `Unable to toggle file ${args.type} annotations. See output channel for more details`\n            );\n        }\n    }\n}\n\n@command()\nexport class ToggleFileHeatmapCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileHeatmap);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: ToggleFileBlameCommandArgs = {}): Promise<any> {\n        commands.executeCommand(Commands.ToggleFileBlame, uri, {\n            ...args,\n            type: FileAnnotationType.Heatmap\n        } as ToggleFileBlameCommandArgs);\n    }\n}\n\n@command()\nexport class ToggleFileRecentChangesCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileRecentChanges);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: ToggleFileBlameCommandArgs = {}): Promise<any> {\n        commands.executeCommand(Commands.ToggleFileBlame, uri, {\n            ...args,\n            type: FileAnnotationType.RecentChanges\n        } as ToggleFileBlameCommandArgs);\n    }\n}\n\n@command()\nexport class ToggleLineBlameCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleLineBlame);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri): Promise<any> {\n        try {\n            return Container.lineAnnotations.toggle(editor);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ToggleLineBlameCommand');\n            return window.showErrorMessage(\n                `Unable to toggle line blame annotations. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { TextEditorComparer, UriComparer } from '../comparers';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Functions } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, getRepoPathOrPrompt } from './common';\n\nexport interface CloseUnchangedFilesCommandArgs {\n    uris?: Uri[];\n}\n\n@command()\nexport class CloseUnchangedFilesCommand extends ActiveEditorCommand {\n    private _onEditorChangedFn: ((editor: TextEditor | undefined) => void) | undefined;\n\n    constructor() {\n        super(Commands.CloseUnchangedFiles);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CloseUnchangedFilesCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            if (args.uris === undefined) {\n                args = { ...args };\n\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Close all files except those changed in which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) return window.showWarningMessage(`Unable to close unchanged files`);\n\n                args.uris = status.files.map(f => f.uri);\n            }\n\n            if (args.uris.length === 0) return commands.executeCommand(BuiltInCommands.CloseAllEditors);\n\n            const disposable = window.onDidChangeActiveTextEditor(\n                Functions.debounce(\n                    (e: TextEditor | undefined) => this._onEditorChangedFn && this._onEditorChangedFn(e),\n                    50\n                )\n            );\n\n            editor = window.activeTextEditor;\n\n            let count = 0;\n            let loopCount = 0;\n            const editors: TextEditor[] = [];\n\n            // Find out how many editors there are\n            while (true) {\n                if (editor != null) {\n                    let found = false;\n                    for (const e of editors) {\n                        if (TextEditorComparer.equals(e, editor, { useId: true, usePosition: true })) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (found) break;\n\n                    // Start counting at the first real editor\n                    count++;\n                    editors.push(editor);\n                }\n                else {\n                    if (count !== 0) {\n                        count++;\n                    }\n                }\n\n                editor = await this.nextEditor();\n\n                loopCount++;\n                // Break out if we've looped 4 times and haven't found any editors\n                if (loopCount >= 4 && editors.length === 0) break;\n            }\n\n            if (editors.length) {\n                editor = window.activeTextEditor;\n\n                for (let i = 0; i <= count; i++) {\n                    if (\n                        editor == null ||\n                        (editor.document !== undefined &&\n                            (editor.document.isDirty ||\n                                args.uris.some(uri =>\n                                    UriComparer.equals(uri, editor!.document && editor!.document.uri)\n                                )))\n                    ) {\n                        editor = await this.nextEditor();\n                    }\n                    else {\n                        editor = await this.closeEditor();\n                    }\n                }\n            }\n\n            disposable.dispose();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'CloseUnchangedFilesCommand');\n            return Messages.showGenericErrorMessage('Unable to close all unchanged files');\n        }\n    }\n\n    private async closeEditor(timeout: number = 500): Promise<TextEditor | undefined> {\n        const editor = window.activeTextEditor;\n\n        void (await commands.executeCommand(BuiltInCommands.CloseActiveEditor));\n\n        if (editor !== window.activeTextEditor) {\n            return window.activeTextEditor;\n        }\n\n        return this.waitForEditorChange(timeout);\n    }\n\n    private async nextEditor(timeout: number = 500): Promise<TextEditor | undefined> {\n        const editor = window.activeTextEditor;\n\n        void (await commands.executeCommand(BuiltInCommands.NextEditor));\n\n        if (editor !== window.activeTextEditor) {\n            return window.activeTextEditor;\n        }\n\n        return this.waitForEditorChange(timeout);\n    }\n\n    private waitForEditorChange(timeout: number = 500): Promise<TextEditor | undefined> {\n        return new Promise<TextEditor>((resolve, reject) => {\n            let timer: NodeJS.Timer | undefined;\n\n            this._onEditorChangedFn = (editor: TextEditor | undefined) => {\n                if (timer) {\n                    clearTimeout(timer);\n                    timer = undefined;\n\n                    resolve(editor);\n                }\n            };\n\n            timer = setTimeout(() => {\n                timer = undefined;\n\n                resolve(window.activeTextEditor);\n            }, timeout);\n        });\n    }\n}\n","'use strict';\nimport { env, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyMessageToClipboardCommandArgs {\n    message?: string;\n    sha?: string;\n}\n\n@command()\nexport class CopyMessageToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyMessageToClipboard);\n    }\n\n    protected async preExecute(context: CommandContext, args: CopyMessageToClipboardCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyMessageToClipboardCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            args = { ...args };\n\n            // If we don't have an editor then get the message of the last commit to the branch\n            if (uri == null) {\n                const repoPath = await Container.git.getActiveRepoPath(editor);\n                if (!repoPath) return undefined;\n\n                const log = await Container.git.getLog(repoPath, { maxCount: 1 });\n                if (!log) return undefined;\n\n                args.message = Iterables.first(log.commits.values()).message;\n            }\n            else if (args.message === undefined) {\n                const gitUri = await GitUri.fromUri(uri);\n\n                if (args.sha === undefined) {\n                    const blameline = (editor && editor.selection.active.line) || 0;\n                    if (blameline < 0) return undefined;\n\n                    try {\n                        const blame =\n                            editor && editor.document && editor.document.isDirty\n                                ? await Container.git.getBlameForLineContents(\n                                      gitUri,\n                                      blameline,\n                                      editor.document.getText()\n                                  )\n                                : await Container.git.getBlameForLine(gitUri, blameline);\n                        if (!blame) return undefined;\n\n                        if (blame.commit.isUncommitted) return undefined;\n\n                        args.sha = blame.commit.sha;\n                        if (!gitUri.repoPath) {\n                            gitUri.repoPath = blame.commit.repoPath;\n                        }\n                    }\n                    catch (ex) {\n                        Logger.error(ex, 'CopyMessageToClipboardCommand', `getBlameForLine(${blameline})`);\n                        return Messages.showGenericErrorMessage('Unable to copy message');\n                    }\n                }\n\n                // Get the full commit message -- since blame only returns the summary\n                const commit = await Container.git.getLogCommit(gitUri.repoPath!, args.sha);\n                if (commit === undefined) return undefined;\n\n                args.message = commit.message;\n            }\n\n            void (await env.clipboard.writeText(args.message));\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    `Unable to copy message, xsel is not installed. Please install it via your package manager, e.g. \\`sudo apt install xsel\\``\n                );\n                return;\n            }\n\n            Logger.error(ex, 'CopyMessageToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy message');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { StatusFileNode } from '../views/nodes';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyRemoteFileUrlToClipboardCommandArgs {\n    range?: boolean;\n    sha?: string;\n}\n\n@command()\nexport class CopyRemoteFileUrlToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyRemoteFileUrlToClipboard);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: CopyRemoteFileUrlToClipboardCommandArgs = { range: true }\n    ): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.range = false;\n            args.sha = context.node.commit.sha;\n\n            // If it is a StatusFileNode then don't include the sha, since it hasn't been pushed yet\n            if (context.node instanceof StatusFileNode) {\n                args.sha = undefined;\n            }\n\n            return this.execute(\n                context.editor,\n                context.node.commit.isFile ? context.node.commit.uri : context.node.uri,\n                args\n            );\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyRemoteFileUrlToClipboardCommandArgs = { range: true }) {\n        if (args.sha === undefined) {\n            uri = getCommandUri(uri, editor);\n            if (uri == null) return undefined;\n\n            const gitUri = await GitUri.fromUri(uri);\n            if (!gitUri.repoPath) return undefined;\n\n            args = { ...args };\n            if (gitUri.sha === undefined) {\n                const commit = await Container.git.getLogCommitForFile(gitUri.repoPath, gitUri.fsPath, {\n                    firstIfNotFound: true\n                });\n\n                if (commit !== undefined) {\n                    args.sha = commit.sha;\n                }\n            }\n            else {\n                args.sha = gitUri.sha;\n            }\n        }\n\n        return commands.executeCommand(Commands.OpenFileInRemote, uri, { ...args, clipboard: true });\n    }\n}\n","'use strict';\nimport { env, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyShaToClipboardCommandArgs {\n    sha?: string;\n}\n\n@command()\nexport class CopyShaToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyShaToClipboard);\n    }\n\n    protected async preExecute(context: CommandContext, args: CopyShaToClipboardCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyShaToClipboardCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            args = { ...args };\n\n            // If we don't have an editor then get the sha of the last commit to the branch\n            if (uri == null) {\n                const repoPath = await Container.git.getActiveRepoPath(editor);\n                if (!repoPath) return undefined;\n\n                const log = await Container.git.getLog(repoPath, { maxCount: 1 });\n                if (!log) return undefined;\n\n                args.sha = Iterables.first(log.commits.values()).sha;\n            }\n            else if (args.sha === undefined) {\n                const blameline = (editor && editor.selection.active.line) || 0;\n                if (blameline < 0) return undefined;\n\n                try {\n                    const gitUri = await GitUri.fromUri(uri);\n                    const blame =\n                        editor && editor.document && editor.document.isDirty\n                            ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                            : await Container.git.getBlameForLine(gitUri, blameline);\n                    if (blame === undefined) return undefined;\n\n                    args.sha = blame.commit.sha;\n                }\n                catch (ex) {\n                    Logger.error(ex, 'CopyShaToClipboardCommand', `getBlameForLine(${blameline})`);\n                    return Messages.showGenericErrorMessage('Unable to copy commit id');\n                }\n            }\n\n            void (await env.clipboard.writeText(args.sha));\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    `Unable to copy commit id, xsel is not installed. Please install it via your package manager, e.g. \\`sudo apt install xsel\\``\n                );\n                return;\n            }\n\n            Logger.error(ex, 'CopyShaToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy commit id');\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt\n} from './common';\n\nexport interface DiffBranchWithBranchCommandArgs {\n    ref1?: string;\n    ref2?: string;\n}\n\n@command()\nexport class DiffBranchWithBranchCommand extends ActiveEditorCommand {\n    constructor() {\n        super([Commands.DiffHeadWithBranch, Commands.DiffWorkingWithBranch]);\n    }\n\n    protected async preExecute(context: CommandContext, args: DiffBranchWithBranchCommandArgs = {}): Promise<any> {\n        switch (context.command) {\n            case Commands.DiffHeadWithBranch:\n                args.ref2 = 'HEAD';\n                break;\n\n            case Commands.DiffWorkingWithBranch:\n                args.ref2 = '';\n                break;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffBranchWithBranchCommandArgs = {}): Promise<any> {\n        if (args.ref2 === undefined) return;\n\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Compare with branch or tag in which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            if (!args.ref1) {\n                let placeHolder;\n                switch (args.ref2) {\n                    case '':\n                        placeHolder = `Compare Working Tree with${GlyphChars.Ellipsis}`;\n                        break;\n                    case 'HEAD':\n                        placeHolder = `Compare HEAD with${GlyphChars.Ellipsis}`;\n                        break;\n                    default:\n                        placeHolder = `Compare ${args.ref2} with${GlyphChars.Ellipsis}`;\n                        break;\n                }\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(placeHolder, {\n                    allowCommitId: true\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.ref1 = pick.ref;\n                if (args.ref1 === undefined) return undefined;\n            }\n\n            await Container.compareView.compare(repoPath, args.ref1, args.ref2);\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffBranchWithBranchCommand');\n            return Messages.showGenericErrorMessage('Unable to open branch compare');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport { CompareResultsNode } from '../views/nodes';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRef\n} from './common';\n\nexport interface DiffDirectoryCommandArgs {\n    ref1?: string;\n    ref2?: string;\n}\n\n@command()\nexport class DiffDirectoryCommand extends ActiveEditorCommand {\n    constructor() {\n        super([\n            Commands.DiffDirectory,\n            Commands.DiffDirectoryWithHead,\n            Commands.ViewsOpenDirectoryDiff,\n            Commands.ViewsOpenDirectoryDiffWithWorking\n        ]);\n    }\n\n    protected async preExecute(context: CommandContext, args: DiffDirectoryCommandArgs = {}): Promise<any> {\n        switch (context.command) {\n            case Commands.DiffDirectoryWithHead:\n                args.ref1 = 'HEAD';\n                args.ref2 = undefined;\n                break;\n\n            case Commands.ViewsOpenDirectoryDiff:\n                if (context.type === 'viewItem' && context.node instanceof CompareResultsNode) {\n                    args.ref1 = context.node.ref1.ref;\n                    args.ref2 = context.node.ref2.ref;\n                }\n                break;\n\n            case Commands.ViewsOpenDirectoryDiffWithWorking:\n                if (isCommandViewContextWithRef(context)) {\n                    args.ref1 = context.node.ref;\n                    args.ref2 = undefined;\n                }\n                break;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffDirectoryCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Compare directory in which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            if (!args.ref1) {\n                args = { ...args };\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                    `Compare Working Tree with${GlyphChars.Ellipsis}`,\n                    { allowCommitId: true }\n                );\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.ref1 = pick.ref;\n                if (args.ref1 === undefined) return undefined;\n            }\n\n            await Container.git.openDirectoryDiff(repoPath, args.ref1, args.ref2);\n            return undefined;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (msg === 'No diff tool found') {\n                const result = await window.showWarningMessage(\n                    `Unable to open directory compare because there is no Git diff tool configured`,\n                    'View Git Docs'\n                );\n                if (!result) return undefined;\n\n                return commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://git-scm.com/docs/git-config#git-config-difftool')\n                );\n            }\n\n            Logger.error(ex, 'DiffDirectoryCommand');\n            return Messages.showGenericErrorMessage('Unable to open directory compare');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffLineWithPreviousCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffLineWithPreviousCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffLineWithPrevious);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffLineWithPreviousCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || GitService.isUncommitted(args.commit.sha)) {\n            const blameline = args.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n\n                args.commit = blame.commit;\n\n                // If the line is uncommitted, change the previous commit\n                if (args.commit.isUncommitted) {\n                    const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    if (status !== undefined && status.indexStatus !== undefined) {\n                        args.commit = args.commit.with({\n                            sha: GitService.stagedUncommittedSha\n                        });\n                    }\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffLineWithPreviousCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.previousSha !== undefined ? args.commit.previousSha : GitService.deletedOrMissingSha,\n                uri: args.commit.previousUri\n            },\n            rhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffLineWithWorkingCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffLineWithWorkingCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffLineWithWorking);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffLineWithWorkingCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || GitService.isUncommitted(args.commit.sha)) {\n            const blameline = args.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n\n                args.commit = blame.commit;\n\n                // If the line is uncommitted, change the previous commit\n                if (args.commit.isUncommitted) {\n                    const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    args.commit = args.commit.with({\n                        sha:\n                            status !== undefined && status.indexStatus !== undefined\n                                ? GitService.stagedUncommittedSha\n                                : args.commit.previousSha!,\n                        fileName: args.commit.previousFileName!,\n                        originalFileName: null,\n                        previousSha: null,\n                        previousFileName: null\n                    });\n                    args.line = blame.line.line + 1;\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffLineWithWorkingCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: '',\n                uri: args.commit.workingUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Range, TextDocumentShowOptions, TextEditor, Uri, ViewColumn } from 'vscode';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands } from './common';\n\nexport interface DiffWithCommandArgsRevision {\n    sha: string;\n    uri: Uri;\n    title?: string;\n}\n\nexport interface DiffWithCommandArgs {\n    lhs?: DiffWithCommandArgsRevision;\n    rhs?: DiffWithCommandArgsRevision;\n    repoPath?: string;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(args: DiffWithCommandArgs): string;\n    static getMarkdownCommandArgs(commit1: GitCommit, commit2: GitCommit): string;\n    static getMarkdownCommandArgs(argsOrCommit1: DiffWithCommandArgs | GitCommit, commit2?: GitCommit): string {\n        let args: DiffWithCommandArgs | GitCommit;\n        if (argsOrCommit1 instanceof GitCommit) {\n            const commit1 = argsOrCommit1;\n\n            if (commit2 === undefined) {\n                if (commit1.isUncommitted) {\n                    args = {\n                        repoPath: commit1.repoPath,\n                        lhs: {\n                            sha: 'HEAD',\n                            uri: commit1.uri\n                        },\n                        rhs: {\n                            sha: '',\n                            uri: commit1.uri\n                        }\n                    };\n                }\n                else {\n                    args = {\n                        repoPath: commit1.repoPath,\n                        lhs: {\n                            sha:\n                                commit1.previousSha !== undefined\n                                    ? commit1.previousSha\n                                    : GitService.deletedOrMissingSha,\n                            uri: commit1.previousUri!\n                        },\n                        rhs: {\n                            sha: commit1.sha,\n                            uri: commit1.uri\n                        }\n                    };\n                }\n            }\n            else {\n                args = {\n                    repoPath: commit1.repoPath,\n                    lhs: {\n                        sha: commit1.sha,\n                        uri: commit1.uri\n                    },\n                    rhs: {\n                        sha: commit2.sha,\n                        uri: commit2.uri\n                    }\n                };\n            }\n        }\n        else {\n            args = argsOrCommit1;\n        }\n\n        return super.getMarkdownCommandArgsCore<DiffWithCommandArgs>(Commands.DiffWith, args);\n    }\n\n    constructor() {\n        super(Commands.DiffWith);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithCommandArgs = {}): Promise<any> {\n        args = {\n            ...args,\n            lhs: { ...args.lhs },\n            rhs: { ...args.rhs },\n            showOptions: { ...args.showOptions }\n        } as DiffWithCommandArgs;\n        if (args.repoPath === undefined || args.lhs === undefined || args.rhs === undefined) return undefined;\n\n        try {\n            let lhsSha = args.lhs.sha;\n            let rhsSha = args.rhs.sha;\n\n            [args.lhs.sha, args.rhs.sha] = await Promise.all([\n                await Container.git.resolveReference(args.repoPath, args.lhs.sha, args.lhs.uri),\n                await Container.git.resolveReference(args.repoPath, args.rhs.sha, args.rhs.uri)\n            ]);\n\n            if (args.lhs.sha !== GitService.deletedOrMissingSha) {\n                lhsSha = args.lhs.sha;\n            }\n\n            if (args.rhs.sha && args.rhs.sha !== GitService.deletedOrMissingSha) {\n                // Ensure that the file still exists in this commit\n                const status = await Container.git.getFileStatusForCommit(\n                    args.repoPath,\n                    args.rhs.uri.fsPath,\n                    args.rhs.sha\n                );\n                if (status !== undefined && status.status === 'D') {\n                    args.rhs.sha = GitService.deletedOrMissingSha;\n                }\n                else {\n                    rhsSha = args.rhs.sha;\n                }\n            }\n\n            const [lhs, rhs] = await Promise.all([\n                Container.git.getVersionedUri(args.repoPath, args.lhs.uri.fsPath, args.lhs.sha),\n                Container.git.getVersionedUri(args.repoPath, args.rhs.uri.fsPath, args.rhs.sha)\n            ]);\n\n            let rhsSuffix = GitService.shortenSha(rhsSha, { uncommitted: 'Working Tree' }) || '';\n            if (rhs === undefined) {\n                if (GitService.isUncommitted(args.rhs.sha)) {\n                    rhsSuffix = 'deleted';\n                }\n                else if (rhsSuffix.length === 0 && args.rhs.sha === GitService.deletedOrMissingSha) {\n                    rhsSuffix = 'not in Working Tree';\n                }\n                else {\n                    rhsSuffix = `deleted in ${rhsSuffix}`;\n                }\n            }\n            else if (lhs === undefined) {\n                rhsSuffix = `added in ${rhsSuffix}`;\n            }\n\n            let lhsSuffix = args.lhs.sha !== GitService.deletedOrMissingSha ? GitService.shortenSha(lhsSha) || '' : '';\n            if (lhs === undefined && args.rhs.sha.length === 0) {\n                if (rhs !== undefined) {\n                    lhsSuffix = `not in ${lhsSuffix}`;\n                    rhsSuffix = '';\n                }\n                else {\n                    lhsSuffix = `deleted in ${lhsSuffix})`;\n                }\n            }\n\n            if (args.lhs.title === undefined && (lhs !== undefined || lhsSuffix.length !== 0)) {\n                args.lhs.title = `${paths.basename(args.lhs.uri.fsPath)}${lhsSuffix ? ` (${lhsSuffix})` : ''}`;\n            }\n            if (args.rhs.title === undefined) {\n                args.rhs.title = `${paths.basename(args.rhs.uri.fsPath)}${rhsSuffix ? ` (${rhsSuffix})` : ''}`;\n            }\n\n            const title =\n                args.lhs.title !== undefined && args.rhs.title !== undefined\n                    ? `${args.lhs.title} ${GlyphChars.ArrowLeftRightLong} ${args.rhs.title}`\n                    : args.lhs.title || args.rhs.title;\n\n            if (args.showOptions === undefined) {\n                args.showOptions = {};\n            }\n\n            if (args.showOptions.viewColumn === undefined) {\n                args.showOptions.viewColumn = ViewColumn.Active;\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            return await commands.executeCommand(\n                BuiltInCommands.Diff,\n                lhs === undefined\n                    ? GitUri.toRevisionUri(GitService.deletedOrMissingSha, args.lhs.uri.fsPath, args.repoPath)\n                    : lhs,\n                rhs === undefined\n                    ? GitUri.toRevisionUri(GitService.deletedOrMissingSha, args.rhs.uri.fsPath, args.repoPath)\n                    : rhs,\n                title,\n                args.showOptions\n            );\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffWithCommand', 'getVersionedFile');\n            return Messages.showGenericErrorMessage('Unable to open compare');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitUri } from '../git/gitService';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithBranchCommandArgs {\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class DiffWithBranchCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithBranch);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithBranchCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return Messages.showNoRepositoryWarningMessage(`Unable to open file compare`);\n\n        const pick = await new BranchesAndTagsQuickPick(gitUri.repoPath).show(\n            `Compare ${paths.basename(gitUri.fsPath)} with${GlyphChars.Ellipsis}`,\n            {\n                allowCommitId: true,\n                goBack: args.goBackCommand\n            }\n        );\n        if (pick === undefined) return undefined;\n\n        if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n        const ref = pick.ref;\n        if (ref === undefined) return undefined;\n\n        let renamedUri: Uri | undefined;\n        let renamedTitle: string | undefined;\n\n        // Check to see if this file has been renamed\n        const files = await Container.git.getDiffStatus(gitUri.repoPath, 'HEAD', ref, { filter: 'R' });\n        if (files !== undefined) {\n            const fileName = Strings.normalizePath(paths.relative(gitUri.repoPath, gitUri.fsPath));\n            const rename = files.find(s => s.fileName === fileName);\n            if (rename !== undefined && rename.originalFileName !== undefined) {\n                renamedUri = GitUri.resolveToUri(rename.originalFileName, gitUri.repoPath);\n                renamedTitle = `${paths.basename(rename.originalFileName)} (${GitService.shortenSha(ref)})`;\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: gitUri.repoPath,\n            lhs: {\n                sha: pick.remote ? `remotes/${ref}` : ref,\n                uri: renamedUri || (gitUri as Uri),\n                title: renamedTitle || `${paths.basename(gitUri.fsPath)} (${GitService.shortenSha(ref)})`\n            },\n            rhs: {\n                sha: '',\n                uri: gitUri as Uri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, Range, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitLogCommit, GitService, GitStatusFile, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithNextCommandArgs {\n    commit?: GitLogCommit;\n    range?: Range;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithNextCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithNext);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithNextCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n        let status: GitStatusFile | undefined;\n\n        if (args.commit === undefined || !(args.commit instanceof GitLogCommit) || args.range !== undefined) {\n            try {\n                const sha = args.commit === undefined ? gitUri.sha : args.commit.sha;\n\n                if (GitService.isStagedUncommitted(sha!)) {\n                    const diffArgs: DiffWithCommandArgs = {\n                        repoPath: gitUri.repoPath!,\n                        lhs: {\n                            sha: sha!,\n                            uri: gitUri\n                        },\n                        rhs: {\n                            sha: '',\n                            uri: gitUri\n                        },\n                        line: args.line,\n                        showOptions: args.showOptions\n                    };\n                    return commands.executeCommand(Commands.DiffWith, diffArgs);\n                }\n\n                let log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: sha !== undefined ? undefined : 2,\n                    range: args.range!,\n                    renames: true\n                });\n                if (log === undefined) {\n                    const fileName = await Container.git.findNextFileName(gitUri.repoPath!, gitUri.fsPath);\n                    if (fileName !== undefined) {\n                        log = await Container.git.getLogForFile(gitUri.repoPath, fileName, {\n                            maxCount: sha !== undefined ? undefined : 2,\n                            range: args.range!,\n                            renames: true\n                        });\n                    }\n\n                    if (log === undefined) {\n                        return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                    }\n                }\n\n                args.commit = (sha && log.commits.get(sha)) || Iterables.first(log.commits.values());\n\n                // If the sha is missing or the file is uncommitted, treat it as a DiffWithWorking\n                if (gitUri.sha === undefined) {\n                    status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    if (status !== undefined) return commands.executeCommand(Commands.DiffWithWorking, uri);\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffWithNextCommand', `getLogForFile(${gitUri.repoPath}, ${gitUri.fsPath})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        if (args.commit.nextSha === undefined) {\n            // Check if the file is staged\n            status = status || (await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath));\n            if (status !== undefined && status.indexStatus === 'M') {\n                const diffArgs: DiffWithCommandArgs = {\n                    repoPath: args.commit.repoPath,\n                    lhs: {\n                        sha: args.commit.sha,\n                        uri: args.commit.uri\n                    },\n                    rhs: {\n                        sha: GitService.stagedUncommittedSha,\n                        uri: args.commit.uri\n                    },\n                    line: args.line,\n                    showOptions: args.showOptions\n                };\n\n                return commands.executeCommand(Commands.DiffWith, diffArgs);\n            }\n\n            return commands.executeCommand(Commands.DiffWithWorking, uri);\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: args.commit.nextSha,\n                uri: args.commit.nextUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport { ActiveEditorCommand, command, CommandContext, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\nimport { DiffWithWorkingCommandArgs } from './diffWithWorking';\n\nexport interface DiffWithPreviousCommandArgs {\n    commit?: GitCommit;\n\n    inDiffEditor?: boolean;\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithPreviousCommand extends ActiveEditorCommand {\n    constructor() {\n        super([Commands.DiffWithPrevious, Commands.DiffWithPreviousInDiff]);\n    }\n\n    protected async preExecute(context: CommandContext, args: DiffWithPreviousCommandArgs = {}): Promise<any> {\n        if (context.command === Commands.DiffWithPreviousInDiff) {\n            args.inDiffEditor = true;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithPreviousCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || !args.commit.isFile) {\n            const gitUri = await GitUri.fromUri(uri);\n\n            try {\n                let sha = args.commit === undefined ? gitUri.sha : args.commit.sha;\n                if (sha === GitService.deletedOrMissingSha) {\n                    return Messages.showCommitHasNoPreviousCommitWarningMessage();\n                }\n\n                // If we are a fake \"staged\" sha, remove it\n                let isStagedUncommitted = false;\n                if (GitService.isStagedUncommitted(sha!)) {\n                    gitUri.sha = sha = undefined;\n                    isStagedUncommitted = true;\n                }\n\n                // If we are in a diff editor, assume we are on the right side, and need to move back 2 revisions\n                const originalSha = sha;\n                if (args.inDiffEditor && sha !== undefined) {\n                    sha = `${sha}^`;\n                }\n\n                args.commit = undefined;\n\n                let log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: 2,\n                    ref: sha,\n                    renames: true\n                });\n\n                if (log !== undefined) {\n                    args.commit = (sha && log.commits.get(sha)) || Iterables.first(log.commits.values());\n                }\n                else {\n                    // Only kick out if we aren't looking for the previous sha -- since renames won't return a log above\n                    if (sha === undefined || !sha.endsWith('^')) {\n                        return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                    }\n\n                    // Check for renames\n                    log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                        maxCount: 3,\n                        ref: originalSha,\n                        renames: true\n                    });\n\n                    if (log === undefined) {\n                        return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                    }\n\n                    args.commit =\n                        Iterables.next(Iterables.skip(log.commits.values(), 1)) ||\n                        Iterables.first(log.commits.values());\n\n                    if (args.commit.sha === originalSha) {\n                        return Messages.showCommitHasNoPreviousCommitWarningMessage();\n                    }\n                }\n\n                // If the sha is missing (i.e. working tree), check the file status\n                // If file is uncommitted, then treat it as a DiffWithWorking\n                if (gitUri.sha === undefined) {\n                    const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    if (status !== undefined) {\n                        if (isStagedUncommitted) {\n                            const diffArgs: DiffWithCommandArgs = {\n                                repoPath: args.commit.repoPath,\n                                lhs: {\n                                    sha: args.inDiffEditor\n                                        ? args.commit.previousSha || GitService.deletedOrMissingSha\n                                        : args.commit.sha,\n                                    uri: args.inDiffEditor ? args.commit.previousUri : args.commit.uri\n                                },\n                                rhs: {\n                                    sha: args.inDiffEditor ? args.commit.sha : GitService.stagedUncommittedSha,\n                                    uri: args.commit.uri\n                                },\n                                line: args.line,\n                                showOptions: args.showOptions\n                            };\n                            return commands.executeCommand(Commands.DiffWith, diffArgs);\n                        }\n\n                        // Check if the file is staged\n                        if (status.indexStatus !== undefined) {\n                            const diffArgs: DiffWithCommandArgs = {\n                                repoPath: args.commit.repoPath,\n                                lhs: {\n                                    sha: args.inDiffEditor ? args.commit.sha : GitService.stagedUncommittedSha,\n                                    uri: args.commit.uri\n                                },\n                                rhs: {\n                                    sha: args.inDiffEditor ? GitService.stagedUncommittedSha : '',\n                                    uri: args.commit.uri\n                                },\n                                line: args.line,\n                                showOptions: args.showOptions\n                            };\n\n                            return commands.executeCommand(Commands.DiffWith, diffArgs);\n                        }\n\n                        if (!args.inDiffEditor) {\n                            return commands.executeCommand(Commands.DiffWithWorking, uri, {\n                                commit: args.commit,\n                                showOptions: args.showOptions\n                            } as DiffWithWorkingCommandArgs);\n                        }\n                    }\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffWithPreviousCommand', `getLogForFile(${gitUri.repoPath}, ${gitUri.fsPath})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.previousSha !== undefined ? args.commit.previousSha : GitService.deletedOrMissingSha,\n                uri: args.commit.previousUri\n            },\n            rhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ChooseFromBranchesAndTagsQuickPickItem, CommandQuickPickItem, FileHistoryQuickPick } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithRevisionCommandArgs {\n    branchOrTag?: GitBranch | GitTag;\n    maxCount?: number;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class DiffWithRevisionCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithRevision);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithRevisionCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        const placeHolder = `Compare ${gitUri.getFormattedPath({\n            suffix: args.branchOrTag ? ` (${args.branchOrTag.name})` : undefined\n        })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''} with revision${\n            GlyphChars.Ellipsis\n        }`;\n\n        const progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n        try {\n            const log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                maxCount: args.maxCount,\n                ref: (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n            });\n            if (log === undefined) {\n                if (args.branchOrTag) {\n                    return window.showWarningMessage(`The file could not be found in ${args.branchOrTag.name}`);\n                }\n                return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open history compare');\n            }\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n            if (log.truncated) {\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: `$(arrow-right) Show Next Commits`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                    },\n                    Commands.DiffWithRevision,\n                    [uri, { ...args } as DiffWithRevisionCommandArgs]\n                );\n\n                const last = Iterables.last(log.commits.values());\n                if (last != null) {\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-left) Show Previous Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                        },\n                        Commands.DiffWithRevision,\n                        [new GitUri(uri, last), { ...args, nextPageCommand: npc } as DiffWithRevisionCommandArgs]\n                    );\n                }\n            }\n\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                        GlyphChars.Space\n                    }$(file-text) ${gitUri.getFormattedPath()}${\n                        args.branchOrTag\n                            ? ` from ${GlyphChars.Space}${\n                                  args.branchOrTag instanceof GitTag ? '$(tag)' : '$(git-branch)'\n                              } ${args.branchOrTag.name}`\n                            : gitUri.sha\n                            ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                            : ''\n                    }`\n                },\n                Commands.DiffWithRevision,\n                [uri, { ...args }]\n            );\n\n            const pick = await FileHistoryQuickPick.show(log, gitUri, placeHolder, {\n                pickerOnly: true,\n                progressCancellation: progressCancellation,\n                currentCommand: currentCommand,\n                nextPageCommand: args.nextPageCommand,\n                previousPageCommand: previousPageCommand,\n                showAllCommand: log.truncated\n                    ? new CommandQuickPickItem(\n                          {\n                              label: `$(sync) Show All Commits`,\n                              description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                          },\n                          Commands.DiffWithRevision,\n                          [uri, { ...args, maxCount: 0 } as DiffWithRevisionCommandArgs]\n                      )\n                    : undefined\n            });\n            if (pick === undefined) return undefined;\n\n            let ref: string;\n\n            if (pick instanceof ChooseFromBranchesAndTagsQuickPickItem) {\n                const branchOrTag = await pick.execute();\n                if (branchOrTag === undefined) return undefined;\n                if (branchOrTag instanceof CommandQuickPickItem) return branchOrTag.execute();\n\n                return commands.executeCommand(Commands.DiffWithRevision, gitUri, {\n                    ...args,\n                    branchOrTag: branchOrTag.item,\n                    goBackCommand: currentCommand\n                } as DiffWithRevisionCommandArgs);\n            }\n            else {\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                ref = pick.commit.sha;\n            }\n\n            const diffArgs: DiffWithCommandArgs = {\n                repoPath: gitUri.repoPath,\n                lhs: {\n                    sha: ref,\n                    uri: gitUri as Uri\n                },\n                rhs: {\n                    sha: '',\n                    uri: gitUri as Uri\n                },\n                line: args.line,\n                showOptions: args.showOptions\n            };\n            return await commands.executeCommand(Commands.DiffWith, diffArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffWithRevisionCommand');\n            return Messages.showGenericErrorMessage('Unable to open compare');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithWorkingCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithWorkingCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithWorking);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithWorkingCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || GitService.isUncommitted(args.commit.sha)) {\n            // If the sha is missing, just let the user know the file matches\n            if (gitUri.sha === undefined) return window.showInformationMessage('File matches the working tree');\n            if (gitUri.sha === GitService.deletedOrMissingSha) {\n                return window.showWarningMessage('Unable to open compare. File has been deleted from the working tree');\n            }\n\n            // If we are a fake \"staged\" sha, check the status\n            if (GitService.isStagedUncommitted(gitUri.sha!)) {\n                gitUri.sha = undefined;\n\n                const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                if (status !== undefined && status.indexStatus !== undefined) {\n                    const diffArgs: DiffWithCommandArgs = {\n                        repoPath: gitUri.repoPath,\n                        lhs: {\n                            sha: GitService.stagedUncommittedSha,\n                            uri: gitUri.documentUri()\n                        },\n                        rhs: {\n                            sha: '',\n                            uri: gitUri.documentUri()\n                        },\n                        line: args.line,\n                        showOptions: args.showOptions\n                    };\n\n                    return commands.executeCommand(Commands.DiffWith, diffArgs);\n                }\n            }\n\n            try {\n                args.commit = await Container.git.getLogCommitForFile(gitUri.repoPath, gitUri.fsPath, {\n                    ref: gitUri.sha,\n                    firstIfNotFound: true\n                });\n                if (args.commit === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n            }\n            catch (ex) {\n                Logger.error(\n                    ex,\n                    'DiffWithWorkingCommand',\n                    `getLogCommit(${gitUri.repoPath}, ${gitUri.fsPath}, ${gitUri.sha})`\n                );\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const [workingFileName] = await Container.git.findWorkingFileName(gitUri.fsPath, gitUri.repoPath);\n        if (workingFileName === undefined) {\n            return window.showWarningMessage('Unable to open compare. File has been deleted from the working tree');\n        }\n\n        args.commit.workingFileName = workingFileName;\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: '',\n                uri: args.commit.workingUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, SourceControlResourceState, Uri, window } from 'vscode';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Arrays } from '../system';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithFileCommit,\n    isCommandViewContextWithFileRefs\n} from './common';\n\nenum Status {\n    INDEX_MODIFIED,\n    INDEX_ADDED,\n    INDEX_DELETED,\n    INDEX_RENAMED,\n    INDEX_COPIED,\n\n    MODIFIED,\n    DELETED,\n    UNTRACKED,\n    IGNORED,\n\n    ADDED_BY_US,\n    ADDED_BY_THEM,\n    DELETED_BY_US,\n    DELETED_BY_THEM,\n    BOTH_ADDED,\n    BOTH_DELETED,\n    BOTH_MODIFIED\n}\n\nenum ResourceGroupType {\n    Merge,\n    Index,\n    WorkingTree\n}\n\ninterface Resource extends SourceControlResourceState {\n    readonly resourceGroupType: ResourceGroupType;\n    readonly type: Status;\n}\n\ninterface ExternalDiffFile {\n    uri: Uri;\n    staged: boolean;\n    ref1?: string;\n    ref2?: string;\n}\n\nexport interface ExternalDiffCommandArgs {\n    files?: ExternalDiffFile[];\n}\n\n@command()\nexport class ExternalDiffCommand extends Command {\n    constructor() {\n        super([Commands.ExternalDiff, Commands.ExternalDiffAll]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ExternalDiffCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithFileCommit(context)) {\n            args = { ...args };\n\n            const ref1 = GitService.isUncommitted(context.node.commit.previousFileSha)\n                ? ''\n                : context.node.commit.previousFileSha;\n            const ref2 = context.node.commit.isUncommitted ? '' : context.node.commit.sha;\n\n            args.files = [\n                {\n                    uri: GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath),\n                    staged: context.node.commit.isStagedUncommitted || context.node.file.indexStatus !== undefined,\n                    ref1: ref1,\n                    ref2: ref2\n                }\n            ];\n\n            return this.execute(args);\n        }\n\n        if (isCommandViewContextWithFileRefs(context)) {\n            args = { ...args };\n\n            args.files = [\n                {\n                    uri: GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath),\n                    staged: context.node.file.indexStatus !== undefined,\n                    ref1: context.node.ref1,\n                    ref2: context.node.ref2\n                }\n            ];\n\n            return this.execute(args);\n        }\n\n        if (args.files === undefined) {\n            if (context.type === 'scm-states') {\n                args = { ...args };\n                args.files = context.scmResourceStates.map(r => ({\n                    uri: r.resourceUri,\n                    staged: (r as Resource).resourceGroupType === ResourceGroupType.Index\n                }));\n            }\n            else if (context.type === 'scm-groups') {\n                args = { ...args };\n                args.files = Arrays.filterMap(context.scmResourceGroups[0].resourceStates, r =>\n                    this.isModified(r)\n                        ? {\n                              uri: r.resourceUri,\n                              staged: (r as Resource).resourceGroupType === ResourceGroupType.Index\n                          }\n                        : undefined\n                );\n            }\n        }\n\n        if (context.command === Commands.ExternalDiffAll) {\n            if (args.files === undefined) {\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Open changes from which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) {\n                    return window.showInformationMessage(\"The repository doesn't have any changes\");\n                }\n\n                args.files = [];\n\n                for (const file of status.files) {\n                    if (file.indexStatus === 'M') {\n                        args.files.push({ uri: file.uri, staged: true });\n                    }\n\n                    if (file.workingTreeStatus === 'M') {\n                        args.files.push({ uri: file.uri, staged: false });\n                    }\n                }\n            }\n        }\n\n        return this.execute(args);\n    }\n\n    private isModified(resource: SourceControlResourceState) {\n        const status = (resource as Resource).type;\n        return status === Status.BOTH_MODIFIED || status === Status.INDEX_MODIFIED || status === Status.MODIFIED;\n    }\n\n    async execute(args: ExternalDiffCommandArgs = {}) {\n        try {\n            let repoPath;\n            if (args.files === undefined) {\n                const editor = window.activeTextEditor;\n                if (editor === undefined) return undefined;\n\n                repoPath = await Container.git.getRepoPathOrActive(undefined, editor);\n                if (!repoPath) return undefined;\n\n                const uri = editor.document.uri;\n                const status = await Container.git.getStatusForFile(repoPath, uri.fsPath);\n                if (status === undefined) {\n                    return window.showInformationMessage(\"The current file doesn't have any changes\");\n                }\n\n                args.files = [];\n                if (status.indexStatus === 'M') {\n                    args.files.push({ uri: status.uri, staged: true });\n                }\n\n                if (status.workingTreeStatus === 'M') {\n                    args.files.push({ uri: status.uri, staged: false });\n                }\n            }\n            else {\n                repoPath = await Container.git.getRepoPath(args.files[0].uri.fsPath);\n                if (!repoPath) return undefined;\n            }\n\n            const tool = await Container.git.getDiffTool(repoPath);\n            if (tool === undefined) {\n                const result = await window.showWarningMessage(\n                    `Unable to open changes in diff tool. No Git diff tool is configured`,\n                    'View Git Docs'\n                );\n                if (!result) return undefined;\n\n                return commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://git-scm.com/docs/git-config#git-config-difftool')\n                );\n            }\n\n            for (const file of args.files) {\n                void Container.git.openDiffTool(repoPath, file.uri, {\n                    ref1: file.ref1,\n                    ref2: file.ref2,\n                    staged: file.staged,\n                    tool: tool\n                });\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ExternalDiffCommand');\n            return Messages.showGenericErrorMessage('Unable to open changes in diff tool');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRemote\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenBranchesInRemoteCommandArgs {\n    remote?: string;\n}\n\n@command()\nexport class OpenBranchesInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenBranchesInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenBranchesInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithRemote(context)) {\n            args = { ...args };\n            args.remote = context.node.remote.name;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenBranchesInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open branches on remote for which repository${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'branches'\n                },\n                remote: args.remote,\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenBranchesInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open branches on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithBranch\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenBranchInRemoteCommandArgs {\n    branch?: string;\n    remote?: string;\n}\n\n@command()\nexport class OpenBranchInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenBranchInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenBranchInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithBranch(context)) {\n            args = { ...args };\n            args.branch = context.node.branch.name;\n            args.remote = context.node.branch.getRemote();\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenBranchInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open branch on remote for which repository${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            if (args.branch === undefined) {\n                args = { ...args };\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                    `Open which branch on remote${GlyphChars.Ellipsis}`,\n                    {\n                        autoPick: true,\n                        filters: {\n                            branches: b => b.tracking !== undefined\n                        },\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined || pick instanceof CommandQuickPickItem) return undefined;\n\n                args.branch = pick.ref;\n            }\n\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'branch',\n                    branch: args.branch || 'HEAD'\n                },\n                remote: args.remote,\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenBranchInRemoteCommandArgs');\n            return window.showErrorMessage(\n                `Unable to open branch on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Arrays } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, getRepoPathOrPrompt, openEditor } from './common';\n\nexport interface OpenChangedFilesCommandArgs {\n    uris?: Uri[];\n}\n\n@command()\nexport class OpenChangedFilesCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenChangedFiles);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenChangedFilesCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            if (args.uris === undefined) {\n                args = { ...args };\n\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Open all files changed in which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) return window.showWarningMessage(`Unable to open changed files`);\n\n                args.uris = Arrays.filterMap(status.files, f => (f.status !== 'D' ? f.uri : undefined));\n            }\n\n            for (const uri of args.uris) {\n                await openEditor(uri, { preserveFocus: true, preview: false } as TextDocumentShowOptions);\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenChangedFilesCommand');\n            return Messages.showGenericErrorMessage('Unable to open all changed files');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenCommitInRemoteCommandArgs {\n    sha?: string;\n}\n\n@command()\nexport class OpenCommitInRemoteCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: OpenCommitInRemoteCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: OpenCommitInRemoteCommandArgs | string): string {\n        const args: OpenCommitInRemoteCommandArgs = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<OpenCommitInRemoteCommandArgs>(Commands.OpenCommitInRemote, args);\n    }\n\n    constructor() {\n        super(Commands.OpenCommitInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenCommitInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenCommitInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return undefined;\n\n        try {\n            if (args.sha === undefined) {\n                const blameline = editor == null ? 0 : editor.selection.active.line;\n                if (blameline < 0) return undefined;\n\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage(\n                        'Unable to open commit on remote provider'\n                    );\n                }\n\n                let commit = blame.commit;\n                // If the line is uncommitted, find the previous commit\n                if (commit.isUncommitted) {\n                    commit = commit.with({\n                        sha: commit.previousSha,\n                        fileName: commit.previousFileName,\n                        previousSha: null,\n                        previousFileName: null\n                    });\n                }\n\n                args.sha = commit.sha;\n            }\n\n            const remotes = await Container.git.getRemotes(gitUri.repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: RemoteResourceType.Commit,\n                    sha: args.sha\n                },\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenCommitInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open commit on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, Range, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithBranch,\n    isCommandViewContextWithCommit\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenFileInRemoteCommandArgs {\n    branch?: string;\n    clipboard?: boolean;\n    range?: boolean;\n    sha?: string;\n}\n\n@command()\nexport class OpenFileInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenFileInRemote);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: OpenFileInRemoteCommandArgs = { range: true }\n    ): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.range = false;\n            if (isCommandViewContextWithBranch(context)) {\n                args.branch = context.node.branch !== undefined ? context.node.branch.name : undefined;\n            }\n\n            return this.execute(\n                context.editor,\n                context.node.commit.isFile ? context.node.commit.uri : context.node.uri,\n                args\n            );\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenFileInRemoteCommandArgs = { range: true }) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return undefined;\n\n        if (args.branch === undefined && args.sha === undefined) {\n            const branch = await Container.git.getBranch(gitUri.repoPath);\n            if (branch === undefined || branch.tracking === undefined) {\n                const pick = await new BranchesAndTagsQuickPick(gitUri.repoPath).show(\n                    args.clipboard\n                        ? `Copy url for ${gitUri.getRelativePath()} to clipboard for which branch${GlyphChars.Ellipsis}`\n                        : `Open ${gitUri.getRelativePath()} on remote for which branch${GlyphChars.Ellipsis}`,\n                    {\n                        autoPick: true,\n                        filters: {\n                            branches: b => b.tracking !== undefined\n                        },\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined || pick instanceof CommandQuickPickItem) return undefined;\n\n                args.branch = pick.ref;\n            }\n            else {\n                args.branch = branch.name;\n            }\n        }\n\n        try {\n            const remotes = await Container.git.getRemotes(gitUri.repoPath);\n            const range =\n                args.range && editor != null\n                    ? new Range(\n                          editor.selection.start.with({ line: editor.selection.start.line + 1 }),\n                          editor.selection.end.with({ line: editor.selection.end.line + 1 })\n                      )\n                    : undefined;\n            const sha = args.sha || gitUri.sha;\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: sha === undefined ? RemoteResourceType.File : RemoteResourceType.Revision,\n                    branch: args.branch || 'HEAD',\n                    fileName: gitUri.getRelativePath(),\n                    range: range,\n                    sha: sha\n                },\n                remotes,\n                clipboard: args.clipboard\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenFileInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open file on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, commands, Range, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ChooseFromBranchesAndTagsQuickPickItem, CommandQuickPickItem, FileHistoryQuickPick } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, openEditor } from './common';\n\nexport interface OpenFileRevisionCommandArgs {\n    branchOrTag?: GitBranch | GitTag;\n    uri?: Uri;\n    maxCount?: number;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    annotationType?: FileAnnotationType;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class OpenFileRevisionCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(args: OpenFileRevisionCommandArgs): string;\n    static getMarkdownCommandArgs(uri: Uri, annotationType?: FileAnnotationType, line?: number): string;\n    static getMarkdownCommandArgs(\n        argsOrUri: OpenFileRevisionCommandArgs | Uri,\n        annotationType?: FileAnnotationType,\n        line?: number\n    ): string {\n        let args: OpenFileRevisionCommandArgs | Uri;\n        if (argsOrUri instanceof Uri) {\n            const uri = argsOrUri;\n\n            args = {\n                uri: uri,\n                line: line,\n                annotationType: annotationType\n            };\n        }\n        else {\n            args = argsOrUri;\n        }\n\n        return super.getMarkdownCommandArgsCore<OpenFileRevisionCommandArgs>(Commands.OpenFileRevision, args);\n    }\n\n    constructor() {\n        super(Commands.OpenFileRevision);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenFileRevisionCommandArgs = {}) {\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        let progressCancellation: CancellationTokenSource | undefined;\n\n        try {\n            if (args.uri == null) {\n                uri = getCommandUri(uri, editor);\n                if (uri == null) return undefined;\n\n                const gitUri = await GitUri.fromUri(uri);\n\n                const placeHolder = `Open revision of ${gitUri.getFormattedPath({\n                    suffix: args.branchOrTag ? ` (${args.branchOrTag.name})` : undefined\n                })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''}${\n                    GlyphChars.Ellipsis\n                }`;\n\n                progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n\n                const log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: args.maxCount,\n                    ref: (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n                });\n                if (log === undefined) {\n                    if (args.branchOrTag) {\n                        return window.showWarningMessage(`The file could not be found in ${args.branchOrTag.name}`);\n                    }\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open history compare');\n                }\n\n                if (progressCancellation.token.isCancellationRequested) return undefined;\n\n                let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n                if (log.truncated) {\n                    const npc = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-right) Show Next Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                        },\n                        Commands.OpenFileRevision,\n                        [uri, { ...args } as OpenFileRevisionCommandArgs]\n                    );\n\n                    const last = Iterables.last(log.commits.values());\n                    if (last != null) {\n                        previousPageCommand = new CommandQuickPickItem(\n                            {\n                                label: `$(arrow-left) Show Previous Commits`,\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                            },\n                            Commands.OpenFileRevision,\n                            [new GitUri(uri, last), { ...args, nextPageCommand: npc } as OpenFileRevisionCommandArgs]\n                        );\n                    }\n                }\n\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                            GlyphChars.Space\n                        }$(file-text) ${gitUri.getFormattedPath()}${\n                            args.branchOrTag\n                                ? ` from ${GlyphChars.Space}${\n                                      args.branchOrTag instanceof GitTag ? '$(tag)' : '$(git-branch)'\n                                  } ${args.branchOrTag.name}`\n                                : gitUri.sha\n                                ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                                : ''\n                        }`\n                    },\n                    Commands.OpenFileRevision,\n                    [uri, { ...args }]\n                );\n\n                const pick = await FileHistoryQuickPick.show(log, gitUri, placeHolder, {\n                    pickerOnly: true,\n                    progressCancellation: progressCancellation,\n                    currentCommand: currentCommand,\n                    nextPageCommand: args.nextPageCommand,\n                    previousPageCommand: previousPageCommand,\n                    showAllCommand: log.truncated\n                        ? new CommandQuickPickItem(\n                              {\n                                  label: `$(sync) Show All Commits`,\n                                  description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                              },\n                              Commands.OpenFileRevision,\n                              [uri, { ...args, maxCount: 0 } as OpenFileRevisionCommandArgs]\n                          )\n                        : undefined\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof ChooseFromBranchesAndTagsQuickPickItem) {\n                    const branchOrTag = await pick.execute();\n                    if (branchOrTag === undefined) return undefined;\n                    if (branchOrTag instanceof CommandQuickPickItem) return branchOrTag.execute();\n\n                    return commands.executeCommand(Commands.OpenFileRevision, gitUri, {\n                        ...args,\n                        branchOrTag: branchOrTag.item,\n                        goBackCommand: currentCommand\n                    } as OpenFileRevisionCommandArgs);\n                }\n                else {\n                    if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                    args.uri = GitUri.toRevisionUri(pick.commit.sha, pick.commit.uri.fsPath, pick.commit.repoPath);\n                }\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                if (args.showOptions === undefined) {\n                    args.showOptions = {};\n                }\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            const e = await openEditor(args.uri!, { ...args.showOptions, rethrow: true });\n            if (args.annotationType === undefined) return e;\n\n            return Container.fileAnnotations.show(e!, args.annotationType, args.line);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenFileRevisionCommand');\n            return Messages.showGenericErrorMessage('Unable to open file revision');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { GitLogCommit, GitRemote, GitService, RemoteResource, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, OpenRemoteCommandQuickPickItem, RemotesQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands } from './common';\n\nexport interface OpenInRemoteCommandArgs {\n    remote?: string;\n    remotes?: GitRemote[];\n    resource?: RemoteResource;\n    clipboard?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class OpenInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenInRemote);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenInRemoteCommandArgs = {}) {\n        args = { ...args };\n        if (args.remotes === undefined || args.resource === undefined) return undefined;\n\n        if (args.remote !== undefined) {\n            const remotes = args.remotes.filter(r => r.name === args.remote);\n            // Only filter if we get some results\n            if (remotes.length > 0) {\n                args.remotes = remotes;\n            }\n        }\n\n        try {\n            let remote: GitRemote | undefined;\n            if (args.remotes.length > 1) {\n                remote = args.remotes.find(r => r.default);\n            }\n            else if (args.remotes.length === 1) {\n                remote = args.remotes[0];\n            }\n\n            if (remote != null) {\n                this.ensureRemoteBranchName(args);\n                const command = new OpenRemoteCommandQuickPickItem(remote, args.resource, args.clipboard);\n                return await command.execute();\n            }\n\n            const verb = args.clipboard ? 'Copy url for' : 'Open';\n            const suffix = args.clipboard ? `to clipboard from${GlyphChars.Ellipsis}` : `on${GlyphChars.Ellipsis}`;\n            let placeHolder = '';\n            switch (args.resource.type) {\n                case RemoteResourceType.Branch:\n                    this.ensureRemoteBranchName(args);\n                    placeHolder = `${verb} ${args.resource.branch} branch ${suffix}`;\n                    break;\n\n                case RemoteResourceType.Commit:\n                    const shortSha = GitService.shortenSha(args.resource.sha);\n                    placeHolder = `${verb} commit ${shortSha} ${suffix}`;\n                    break;\n\n                case RemoteResourceType.File:\n                    placeHolder = `${verb} ${args.resource.fileName} ${suffix}`;\n                    break;\n\n                case RemoteResourceType.Revision:\n                    if (args.resource.commit !== undefined && args.resource.commit instanceof GitLogCommit) {\n                        if (args.resource.commit.status === 'D') {\n                            args.resource.sha = args.resource.commit.previousSha;\n                            placeHolder = `${verb} ${args.resource.fileName} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                                args.resource.commit.previousShortSha\n                            } ${suffix}`;\n                        }\n                        else {\n                            args.resource.sha = args.resource.commit.sha;\n                            placeHolder = `${verb} ${args.resource.fileName} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                                args.resource.commit.shortSha\n                            } ${suffix}`;\n                        }\n                    }\n                    else {\n                        const shortFileSha =\n                            args.resource.sha === undefined ? '' : GitService.shortenSha(args.resource.sha);\n                        const shaSuffix = shortFileSha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${shortFileSha}` : '';\n\n                        placeHolder = `${verb} ${args.resource.fileName}${shaSuffix} ${suffix}`;\n                    }\n                    break;\n            }\n\n            const pick = await RemotesQuickPick.show(\n                args.remotes,\n                placeHolder,\n                args.resource,\n                args.clipboard,\n                args.goBackCommand\n            );\n            if (pick === undefined) return undefined;\n\n            return await pick.execute();\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenInRemoteCommand');\n            return Messages.showGenericErrorMessage('Unable to open in remote provider');\n        }\n    }\n\n    private ensureRemoteBranchName(args: OpenInRemoteCommandArgs) {\n        if (args.remotes === undefined || args.resource === undefined || args.resource.type !== 'branch') return;\n\n        // Check to see if the remote is in the branch\n        const index = args.resource.branch.indexOf('/');\n        if (index >= 0) {\n            const remoteName = args.resource.branch.substring(0, index);\n            const remote = args.remotes.find(r => r.name === remoteName);\n            if (remote !== undefined) {\n                args.resource.branch = args.resource.branch.substring(index + 1);\n                args.remotes = [remote];\n            }\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRemote\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenRepoInRemoteCommandArgs {\n    remote?: string;\n}\n\n@command()\nexport class OpenRepoInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenRepoInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenRepoInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithRemote(context)) {\n            args = { ...args };\n            args.remote = context.node.remote.name;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenRepoInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open which repository on remote${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'repo'\n                },\n                remote: args.remote,\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenRepoInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open repository on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { Range, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, openEditor } from './common';\n\nexport interface OpenWorkingFileCommandArgs {\n    uri?: Uri;\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    annotationType?: FileAnnotationType;\n}\n\n@command()\nexport class OpenWorkingFileCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenWorkingFile);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenWorkingFileCommandArgs = {}) {\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        try {\n            if (args.uri == null) {\n                uri = getCommandUri(uri, editor);\n                if (uri == null) return undefined;\n\n                args.uri = await GitUri.fromUri(uri);\n                if (args.uri instanceof GitUri && args.uri.sha) {\n                    const [fileName, repoPath] = await Container.git.findWorkingFileName(\n                        args.uri.fsPath,\n                        args.uri.repoPath\n                    );\n                    if (fileName === undefined) {\n                        return window.showWarningMessage(\n                            'Unable to open working file. File could not be found in the working tree'\n                        );\n                    }\n\n                    args.uri = new GitUri(GitUri.resolveToUri(fileName, repoPath), repoPath);\n                }\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                if (args.showOptions === undefined) {\n                    args.showOptions = {};\n                }\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            const e = await openEditor(args.uri, { ...args.showOptions, rethrow: true });\n            if (args.annotationType === undefined) return e;\n\n            return Container.fileAnnotations.show(e!, args.annotationType, args.line);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenWorkingFileCommand');\n            return Messages.showGenericErrorMessage('Unable to open working file');\n        }\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class FetchRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.FetchRepositories);\n    }\n\n    async execute() {\n        return Container.git.fetchAll();\n    }\n}\n\n@command()\nexport class PullRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.PullRepositories);\n    }\n\n    async execute() {\n        return Container.git.pullAll();\n    }\n}\n\n@command()\nexport class PushRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.PushRepositories);\n    }\n\n    async execute() {\n        return Container.git.pushAll();\n    }\n}\n","'use strict';\nimport { ConfigurationTarget } from 'vscode';\nimport { configuration } from '../configuration';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class ResetSuppressedWarningsCommand extends Command {\n    constructor() {\n        super(Commands.ResetSuppressedWarnings);\n    }\n\n    async execute() {\n        await configuration.update(\n            configuration.name('advanced')('messages').value,\n            undefined,\n            ConfigurationTarget.Global\n        );\n    }\n}\n","'use strict';\nimport { commands, InputBoxOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitRepoSearchBy, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitsQuickPick, ShowCommitSearchResultsInViewQuickPickItem } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { SearchResultsCommitsNode } from '../views/nodes';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRepo\n} from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nconst searchByRegex = /^([@~=:#])/;\nconst symbolToSearchByMap = new Map<string, GitRepoSearchBy>([\n    ['@', GitRepoSearchBy.Author],\n    ['~', GitRepoSearchBy.ChangedLines],\n    ['=', GitRepoSearchBy.Changes],\n    [':', GitRepoSearchBy.Files],\n    ['#', GitRepoSearchBy.Sha]\n]);\n\nconst searchByToSymbolMap = new Map<GitRepoSearchBy, string>([\n    [GitRepoSearchBy.Author, '@'],\n    [GitRepoSearchBy.ChangedLines, '~'],\n    [GitRepoSearchBy.Changes, '='],\n    [GitRepoSearchBy.Files, ':'],\n    [GitRepoSearchBy.Sha, '#']\n]);\n\nexport interface SearchCommitsCommandArgs {\n    search?: string;\n    searchBy?: GitRepoSearchBy;\n    maxCount?: number;\n    prefillOnly?: boolean;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class SearchCommitsCommand extends ActiveEditorCachedCommand {\n    private _lastSearch: string | undefined;\n\n    constructor() {\n        super([Commands.SearchCommits, Commands.SearchCommitsInView]);\n    }\n\n    protected async preExecute(context: CommandContext, args: SearchCommitsCommandArgs = {}) {\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.showInView = true;\n\n            if (context.node instanceof SearchResultsCommitsNode) {\n                args.search = context.node.search;\n                args.searchBy = context.node.searchBy;\n                args.prefillOnly = true;\n            }\n\n            if (isCommandViewContextWithRepo(context)) {\n                return this.execute(context.editor, context.node.uri, args);\n            }\n        }\n        else if (context.command === Commands.SearchCommitsInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n        else {\n            // TODO: Add a user setting (default to view?)\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: SearchCommitsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Search for commits in which repository${GlyphChars.Ellipsis}`,\n            args.goBackCommand\n        );\n        if (!repoPath) return undefined;\n\n        args = { ...args };\n        const originalArgs = { ...args };\n\n        if (args.prefillOnly && args.search && args.searchBy) {\n            args.search = `${searchByToSymbolMap.get(args.searchBy) || ''}${args.search}`;\n            args.searchBy = undefined;\n        }\n\n        if (!args.search || args.searchBy == null) {\n            let selection;\n            if (!args.search) {\n                if (args.searchBy != null) {\n                    args.search = searchByToSymbolMap.get(args.searchBy);\n                    selection = [1, 1];\n                }\n                else {\n                    args.search = this._lastSearch;\n                }\n            }\n\n            if (args.showInView) {\n                await Container.searchView.show();\n            }\n\n            args.search = await window.showInputBox({\n                value: args.search,\n                prompt: `Please enter a search string`,\n                placeHolder: `Search commits by message, author (@<pattern>), files (:<path/glob>), commit id (#<sha>), changes (=<pattern>), changed lines (~<pattern>)`,\n                valueSelection: selection\n            } as InputBoxOptions);\n            if (args.search === undefined) {\n                return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n            }\n\n            this._lastSearch = originalArgs.search = args.search;\n\n            const match = searchByRegex.exec(args.search);\n            if (match && match[1]) {\n                args.searchBy = symbolToSearchByMap.get(match[1]);\n                args.search = args.search.substring(args.search[1] === ' ' ? 2 : 1);\n            }\n            else if (GitService.isShaLike(args.search)) {\n                args.searchBy = GitRepoSearchBy.Sha;\n            }\n            else {\n                args.searchBy = GitRepoSearchBy.Message;\n            }\n        }\n\n        if (args.searchBy === undefined) {\n            args.searchBy = GitRepoSearchBy.Message;\n        }\n\n        let searchLabel: string | undefined = undefined;\n        switch (args.searchBy) {\n            case GitRepoSearchBy.Author:\n                searchLabel = `commits with an author matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.ChangedLines:\n                searchLabel = `commits with changed lines matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Changes:\n                searchLabel = `commits with changes matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Files:\n                searchLabel = `commits with files matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Message:\n                searchLabel = args.search ? `commits with a message matching '${args.search}'` : 'all commits';\n                break;\n\n            case GitRepoSearchBy.Sha:\n                searchLabel = `commits with an id matching '${args.search}'`;\n                break;\n        }\n\n        if (args.showInView) {\n            void Container.searchView.search(repoPath, args.search, args.searchBy, {\n                maxCount: args.maxCount,\n                label: { label: searchLabel! }\n            });\n\n            return;\n        }\n\n        const progressCancellation = CommitsQuickPick.showProgress(searchLabel!);\n        try {\n            const log = await Container.git.getLogForSearch(repoPath, args.search, args.searchBy, {\n                maxCount: args.maxCount\n            });\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            let goBackCommand: CommandQuickPickItem | undefined =\n                args.goBackCommand ||\n                new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to commit search`\n                    },\n                    Commands.SearchCommits,\n                    [uri, originalArgs]\n                );\n\n            let commit;\n            if (args.searchBy !== GitRepoSearchBy.Sha || log === undefined || log.count !== 1) {\n                const pick = await CommitsQuickPick.show(log, searchLabel!, progressCancellation, {\n                    goBackCommand: goBackCommand,\n                    showAllCommand:\n                        log !== undefined && log.truncated\n                            ? new CommandQuickPickItem(\n                                  {\n                                      label: `$(sync) Show All Commits`,\n                                      description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                                  },\n                                  Commands.SearchCommits,\n                                  [uri, { ...args, maxCount: 0, goBackCommand: goBackCommand }]\n                              )\n                            : undefined,\n                    showInViewCommand:\n                        log !== undefined\n                            ? new ShowCommitSearchResultsInViewQuickPickItem(args.search, args.searchBy, log, {\n                                  label: searchLabel!\n                              })\n                            : undefined\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                commit = pick.commit;\n                goBackCommand = undefined;\n            }\n            else {\n                commit = Iterables.first(log.commits.values());\n            }\n\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, commit.toGitUri(), {\n                sha: commit.sha,\n                commit: commit,\n                goBackCommand:\n                    goBackCommand ||\n                    new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} to search for ${searchLabel}`\n                        },\n                        Commands.SearchCommits,\n                        [uri, args]\n                    )\n            } as ShowQuickCommitDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowCommitSearchCommand');\n            return Messages.showGenericErrorMessage('Unable to find commits');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { commands } from 'vscode';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { command, Command, Commands, getLastCommand } from './common';\n\n@command()\nexport class ShowLastQuickPickCommand extends Command {\n    constructor() {\n        super(Commands.ShowLastQuickPick);\n    }\n\n    async execute() {\n        const command = getLastCommand();\n        if (command === undefined) return undefined;\n\n        try {\n            return commands.executeCommand(command.command, ...command.args);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowLastQuickPickCommand');\n            return Messages.showGenericErrorMessage('Unable to show last quick pick');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, BranchHistoryQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickBranchHistoryCommandArgs {\n    branch?: string;\n    log?: GitLog;\n    maxCount?: number;\n    repoPath?: string;\n\n    goBackCommand?: CommandQuickPickItem;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickBranchHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickBranchHistory);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickBranchHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        args = { ...args };\n\n        let progressCancellation =\n            args.branch === undefined ? undefined : BranchHistoryQuickPick.showProgress(args.branch);\n        try {\n            const repoPath =\n                args.repoPath ||\n                (await getRepoPathOrActiveOrPrompt(\n                    gitUri,\n                    editor,\n                    `Show branch history in which repository${GlyphChars.Ellipsis}`\n                ));\n            if (!repoPath) return undefined;\n\n            if (args.branch === undefined) {\n                let goBackCommand;\n                if (!(await Container.git.getRepoPathOrActive(uri, editor))) {\n                    goBackCommand = new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to which repository`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [uri, args]\n                    );\n                }\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                    `Show history for branch${GlyphChars.Ellipsis}`,\n                    {\n                        goBack: goBackCommand,\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined) return undefined;\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.branch = pick.ref;\n                if (args.branch === undefined) return undefined;\n\n                progressCancellation = BranchHistoryQuickPick.showProgress(args.branch);\n            }\n\n            if (args.log === undefined) {\n                args.log = await Container.git.getLog(repoPath, {\n                    maxCount: args.maxCount,\n                    ref: (gitUri && gitUri.sha) || args.branch\n                });\n                if (args.log === undefined) return window.showWarningMessage(`Unable to show branch history`);\n            }\n\n            if (progressCancellation !== undefined && progressCancellation.token.isCancellationRequested) {\n                return undefined;\n            }\n\n            const pick = await BranchHistoryQuickPick.show(\n                args.log,\n                gitUri,\n                args.branch,\n                progressCancellation!,\n                args.goBackCommand,\n                args.nextPageCommand\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            // Create a command to get back to here\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${GlyphChars.Space}$(git-branch) ${\n                        args.branch\n                    } history`\n                },\n                Commands.ShowQuickBranchHistory,\n                [uri, { ...args }]\n            );\n\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, pick.commit.toGitUri(), {\n                sha: pick.commit.sha,\n                commit: pick.commit,\n                repoLog: args.log,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickBranchHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show branch history');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitLog, GitLogCommit, GitRepoSearchBy, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitQuickPick, CommitWithFileStatusQuickPickItem } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { ShowQuickCommitFileDetailsCommandArgs } from './showQuickCommitFileDetails';\n\nexport interface ShowQuickCommitDetailsCommandArgs {\n    sha?: string;\n    commit?: GitCommit | GitLogCommit;\n    repoLog?: GitLog;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCommitDetailsCommand extends ActiveEditorCachedCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: ShowQuickCommitDetailsCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: ShowQuickCommitDetailsCommandArgs | string): string {\n        const args = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<ShowQuickCommitDetailsCommandArgs>(\n            Commands.ShowQuickCommitDetails,\n            args\n        );\n    }\n\n    constructor() {\n        super([Commands.ShowCommitInView, Commands.ShowQuickCommitDetails]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ShowQuickCommitDetailsCommandArgs = {}): Promise<any> {\n        if (context.command === Commands.ShowCommitInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.sha = context.node.uri.sha;\n\n            if (isCommandViewContextWithCommit(context)) {\n                args.commit = context.node.commit;\n            }\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCommitDetailsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        let repoPath = gitUri.repoPath;\n        let workingFileName = repoPath ? paths.relative(repoPath, gitUri.fsPath) : gitUri.fsPath;\n\n        args = { ...args };\n        if (args.sha === undefined) {\n            if (editor == null) return undefined;\n\n            const blameline = editor.selection.active.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame = await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show commit details');\n                }\n\n                // Because the previous sha of an uncommitted file isn't trust worthy we just have to kick out\n                if (blame.commit.isUncommitted) {\n                    return Messages.showLineUncommittedWarningMessage('Unable to show commit details');\n                }\n\n                args.sha = blame.commit.sha;\n                repoPath = blame.commit.repoPath;\n                workingFileName = blame.commit.fileName;\n\n                args.commit = blame.commit;\n            }\n            catch (ex) {\n                Logger.error(ex, 'ShowQuickCommitDetailsCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to show commit details');\n            }\n        }\n\n        try {\n            if (args.commit === undefined || args.commit.isFile) {\n                if (args.repoLog !== undefined) {\n                    args.commit = args.repoLog.commits.get(args.sha!);\n                    // If we can't find the commit, kill the repoLog\n                    if (args.commit === undefined) {\n                        args.repoLog = undefined;\n                    }\n                }\n\n                if (args.repoLog === undefined) {\n                    const log = await Container.git.getLog(repoPath!, { maxCount: 2, ref: args.sha });\n                    if (log === undefined) {\n                        return Messages.showCommitNotFoundWarningMessage(`Unable to show commit details`);\n                    }\n\n                    args.commit = log.commits.get(args.sha!);\n                }\n            }\n\n            if (args.commit === undefined) {\n                return Messages.showCommitNotFoundWarningMessage(`Unable to show commit details`);\n            }\n\n            if (args.commit.workingFileName === undefined) {\n                args.commit.workingFileName = workingFileName;\n            }\n\n            if (args.showInView) {\n                void (await Container.searchView.search(repoPath!, args.commit.sha, GitRepoSearchBy.Sha, {\n                    label: { label: `commits with an id matching '${args.commit.shortSha}'` }\n                }));\n\n                return undefined;\n            }\n\n            if (args.goBackCommand === undefined) {\n                const branch = await Container.git.getBranch(args.commit.repoPath);\n                if (branch !== undefined) {\n                    // Create a command to get back to the branch history\n                    args.goBackCommand = new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${branch.name} history`\n                        },\n                        Commands.ShowQuickCurrentBranchHistory,\n                        [args.commit.toGitUri()]\n                    );\n                }\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                        GlyphChars.Space\n                    }$(git-commit) ${args.commit.shortSha}`\n                },\n                Commands.ShowQuickCommitDetails,\n                [args.commit.toGitUri(), args]\n            );\n\n            const pick = await CommitQuickPick.show(\n                args.commit as GitLogCommit,\n                uri,\n                args.goBackCommand,\n                currentCommand,\n                args.repoLog\n            );\n            if (pick === undefined) return undefined;\n\n            if (!(pick instanceof CommitWithFileStatusQuickPickItem)) return pick.execute();\n\n            return commands.executeCommand(Commands.ShowQuickCommitFileDetails, pick.commit.toGitUri(), {\n                commit: pick.commit,\n                sha: pick.sha,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitFileDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCommitDetailsCommand');\n            return Messages.showGenericErrorMessage('Unable to show commit details');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitLog, GitLogCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitFileQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickCommitFileDetailsCommandArgs {\n    sha?: string;\n    commit?: GitCommit | GitLogCommit;\n    fileLog?: GitLog;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCommitFileDetailsCommand extends ActiveEditorCachedCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: ShowQuickCommitFileDetailsCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: ShowQuickCommitFileDetailsCommandArgs | string): string {\n        const args = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<ShowQuickCommitFileDetailsCommandArgs>(\n            Commands.ShowQuickCommitFileDetails,\n            args\n        );\n    }\n\n    constructor() {\n        super([Commands.ShowQuickCommitFileDetails, Commands.ShowQuickRevisionDetails]);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: ShowQuickCommitFileDetailsCommandArgs = {}\n    ): Promise<any> {\n        if (context.command === Commands.ShowQuickRevisionDetails && context.editor !== undefined) {\n            args = { ...args };\n\n            const gitUri = await GitUri.fromUri(context.editor.document.uri);\n            args.sha = gitUri.sha;\n        }\n\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.sha = context.node.uri.sha;\n\n            if (isCommandViewContextWithCommit(context)) {\n                args.commit = context.node.commit;\n            }\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCommitFileDetailsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        let workingFileName = args.commit && args.commit.workingFileName;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.sha === undefined) {\n            if (editor == null) return undefined;\n\n            const blameline = editor.selection.active.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame = await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show commit file details');\n                }\n\n                // Because the previous sha of an uncommitted file isn't trust worthy we just have to kick out\n                if (blame.commit.isUncommitted) {\n                    return Messages.showLineUncommittedWarningMessage('Unable to show commit file details');\n                }\n\n                args.sha = blame.commit.sha;\n\n                args.commit = blame.commit;\n                workingFileName = paths.relative(args.commit.repoPath, gitUri.fsPath);\n            }\n            catch (ex) {\n                Logger.error(ex, 'ShowQuickCommitFileDetailsCommand', `getBlameForLine(${blameline})`);\n                return window.showErrorMessage(\n                    `Unable to show commit file details. See output channel for more details`\n                );\n            }\n        }\n\n        try {\n            if (args.commit === undefined || !args.commit.isFile) {\n                if (args.commit !== undefined) {\n                    workingFileName = undefined;\n                }\n\n                if (args.fileLog !== undefined) {\n                    args.commit = args.fileLog.commits.get(args.sha!);\n                    // If we can't find the commit, kill the fileLog\n                    if (args.commit === undefined) {\n                        args.fileLog = undefined;\n                    }\n                }\n\n                if (args.fileLog === undefined) {\n                    args.commit = await Container.git.getLogCommitForFile(\n                        args.commit === undefined ? gitUri.repoPath : args.commit.repoPath,\n                        gitUri.fsPath,\n                        { ref: args.sha }\n                    );\n                    if (args.commit === undefined) {\n                        return Messages.showCommitNotFoundWarningMessage(`Unable to show commit file details`);\n                    }\n                }\n            }\n\n            if (args.commit === undefined) {\n                return Messages.showCommitNotFoundWarningMessage(`Unable to show commit file details`);\n            }\n\n            // Attempt to the most recent commit -- so that we can find the real working filename if there was a rename\n            args.commit.workingFileName = workingFileName;\n            [args.commit.workingFileName] = await Container.git.findWorkingFileName(args.commit);\n\n            const shortSha = GitService.shortenSha(args.sha!);\n\n            if (args.goBackCommand === undefined) {\n                // Create a command to get back to the commit details\n                args.goBackCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                            GlyphChars.Space\n                        }$(git-commit) ${shortSha}`\n                    },\n                    Commands.ShowQuickCommitDetails,\n                    [\n                        args.commit.toGitUri(),\n                        {\n                            commit: args.commit,\n                            sha: args.sha\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]\n                );\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                        GlyphChars.Space\n                    }$(file-text) ${paths.basename(args.commit.fileName)} in ${\n                        GlyphChars.Space\n                    }$(git-commit) ${shortSha}`\n                },\n                Commands.ShowQuickCommitFileDetails,\n                [args.commit.toGitUri(), args]\n            );\n\n            const pick = await CommitFileQuickPick.show(\n                args.commit as GitLogCommit,\n                uri,\n                args.goBackCommand,\n                currentCommand,\n                args.fileLog\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCommitFileDetailsCommand');\n            return Messages.showGenericErrorMessage('Unable to show commit file details');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickBranchHistoryCommandArgs } from './showQuickBranchHistory';\n\nexport interface ShowQuickCurrentBranchHistoryCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCurrentBranchHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickCurrentBranchHistory);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCurrentBranchHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show current branch history for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const branch = await Container.git.getBranch(repoPath);\n            if (branch === undefined) return undefined;\n\n            return commands.executeCommand(Commands.ShowQuickBranchHistory, uri, {\n                branch: branch.name,\n                repoPath: repoPath,\n                goBackCommand: args.goBackCommand\n            } as ShowQuickBranchHistoryCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCurrentBranchHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show branch history');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Range, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitLog, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport {\n    ChooseFromBranchesAndTagsQuickPickItem,\n    CommandQuickPickItem,\n    FileHistoryQuickPick,\n    ShowFileHistoryInViewQuickPickItem\n} from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, CommandContext, Commands, getCommandUri } from './common';\nimport { ShowQuickCommitFileDetailsCommandArgs } from './showQuickCommitFileDetails';\n\nexport interface ShowQuickFileHistoryCommandArgs {\n    branchOrTag?: GitBranch | GitTag;\n    log?: GitLog;\n    maxCount?: number;\n    range?: Range;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickFileHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super([Commands.ShowFileHistoryInView, Commands.ShowQuickFileHistory]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ShowQuickFileHistoryCommandArgs = {}): Promise<any> {\n        if (context.command === Commands.ShowFileHistoryInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickFileHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return commands.executeCommand(Commands.ShowQuickCurrentBranchHistory);\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        if (args.showInView) {\n            await Container.fileHistoryView.showHistoryForUri(gitUri);\n\n            return undefined;\n        }\n\n        args = { ...args };\n\n        const placeHolder = `${gitUri.getFormattedPath({\n            suffix: args.branchOrTag ? ` (${args.branchOrTag.name})` : undefined\n        })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''}`;\n\n        const progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n\n        try {\n            if (args.log === undefined) {\n                args.log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: args.maxCount,\n                    range: args.range,\n                    ref: (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n                });\n                if (args.log === undefined) {\n                    if (args.branchOrTag) {\n                        return window.showWarningMessage(`The file could not be found in ${args.branchOrTag.name}`);\n                    }\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show file history');\n                }\n            }\n\n            if (progressCancellation !== undefined && progressCancellation.token.isCancellationRequested) {\n                return undefined;\n            }\n\n            let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n            if (args.log.truncated) {\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: `$(arrow-right) Show Next Commits`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${args.log.maxCount} newer commits`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [gitUri, { ...args, log: undefined } as ShowQuickFileHistoryCommandArgs]\n                );\n\n                const last = Iterables.last(args.log.commits.values());\n                if (last != null) {\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-left) Show Previous Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${\n                                args.log.maxCount\n                            } older commits`\n                        },\n                        Commands.ShowQuickFileHistory,\n                        [\n                            new GitUri(uri, last),\n                            { ...args, log: undefined, nextPageCommand: npc } as ShowQuickFileHistoryCommandArgs\n                        ]\n                    );\n                }\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                        GlyphChars.Space\n                    }$(file-text) ${paths.basename(gitUri.fsPath)}${\n                        args.branchOrTag\n                            ? ` from ${GlyphChars.Space}${\n                                  args.branchOrTag instanceof GitTag ? '$(tag)' : '$(git-branch)'\n                              } ${args.branchOrTag.name}`\n                            : gitUri.sha\n                            ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                            : ''\n                    }`\n                },\n                Commands.ShowQuickFileHistory,\n                [uri, args]\n            );\n\n            const pick = await FileHistoryQuickPick.show(args.log, gitUri, placeHolder, {\n                progressCancellation: progressCancellation,\n                currentCommand: currentCommand,\n                goBackCommand: args.goBackCommand,\n                nextPageCommand: args.nextPageCommand,\n                previousPageCommand: previousPageCommand,\n                showAllCommand:\n                    args.log !== undefined && args.log.truncated\n                        ? new CommandQuickPickItem(\n                              {\n                                  label: `$(sync) Show All Commits`,\n                                  description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                              },\n                              Commands.ShowQuickFileHistory,\n                              [uri, { ...args, log: undefined, maxCount: 0 }]\n                          )\n                        : undefined,\n                showInViewCommand:\n                    args.log !== undefined\n                        ? new ShowFileHistoryInViewQuickPickItem(\n                              gitUri,\n                              (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n                          )\n                        : undefined\n            });\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof ChooseFromBranchesAndTagsQuickPickItem) {\n                const branchOrTag = await pick.execute();\n                if (branchOrTag === undefined) return undefined;\n                if (branchOrTag instanceof CommandQuickPickItem) return branchOrTag.execute();\n\n                return commands.executeCommand(Commands.ShowQuickFileHistory, gitUri, {\n                    ...args,\n                    log: undefined,\n                    branchOrTag: branchOrTag.item,\n                    goBackCommand: currentCommand\n                } as ShowQuickFileHistoryCommandArgs);\n            }\n            else {\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n            }\n\n            return commands.executeCommand(Commands.ShowQuickCommitFileDetails, pick.commit.toGitUri(), {\n                commit: pick.commit,\n                fileLog: args.log,\n                sha: pick.commit.sha,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitFileDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickFileHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show file history');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, RepoStatusQuickPick } from '../quickpicks';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\n\nexport interface ShowQuickRepoStatusCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickRepoStatusCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickRepoStatus);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickRepoStatusCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show status for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const status = await Container.git.getStatusForRepo(repoPath);\n            if (status === undefined) return window.showWarningMessage(`Unable to show repository status`);\n\n            const pick = await RepoStatusQuickPick.show(status, args.goBackCommand);\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickRepoStatusCommand');\n            return Messages.showGenericErrorMessage('Unable to show repository status');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, StashListQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickStashListCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickStashListCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickStashList);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickStashListCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const progressCancellation = StashListQuickPick.showProgress('list');\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show stashed changes for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const stash = await Container.git.getStashList(repoPath);\n            if (stash === undefined) return window.showWarningMessage(`Unable to show stashed changes`);\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            // Create a command to get back to here\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to stashed changes`\n                },\n                Commands.ShowQuickStashList,\n                [\n                    uri,\n                    {\n                        goBackCommand: args.goBackCommand\n                    } as ShowQuickStashListCommandArgs\n                ]\n            );\n\n            const pick = await StashListQuickPick.show(\n                stash,\n                'list',\n                progressCancellation,\n                args.goBackCommand,\n                currentCommand\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, pick.commit.toGitUri(), {\n                commit: pick.commit,\n                sha: pick.commit.sha,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickStashListCommand');\n            return Messages.showGenericErrorMessage('Unable to show stashed changes');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, CommandContext, Commands } from './common';\n\n@command()\nexport class ShowViewCommand extends Command {\n    constructor() {\n        super([\n            Commands.ShowCompareView,\n            Commands.ShowFileHistoryView,\n            Commands.ShowLineHistoryView,\n            Commands.ShowRepositoriesView,\n            Commands.ShowSearchView\n        ]);\n    }\n\n    protected async preExecute(context: CommandContext): Promise<any> {\n        return this.execute(context.command as Commands);\n    }\n\n    execute(command: Commands) {\n        switch (command) {\n            case Commands.ShowCompareView:\n                return Container.compareView.show();\n            case Commands.ShowFileHistoryView:\n                return Container.fileHistoryView.show();\n            case Commands.ShowLineHistoryView:\n                return Container.lineHistoryView.show();\n            case Commands.ShowRepositoriesView:\n                return Container.repositoriesView.show();\n            case Commands.ShowSearchView:\n                return Container.searchView.show();\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport { MessageItem, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStashCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, StashListQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithCommit,\n    isCommandViewContextWithRepo\n} from './common';\n\nexport interface StashApplyCommandArgs {\n    confirm?: boolean;\n    deleteAfter?: boolean;\n    repoPath?: string;\n    stashItem?: { stashName: string; message: string; repoPath: string };\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashApplyCommand extends Command {\n    constructor() {\n        super(Commands.StashApply);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: StashApplyCommandArgs = { confirm: true, deleteAfter: false }\n    ) {\n        if (isCommandViewContextWithCommit<GitStashCommit>(context)) {\n            args = { ...args };\n            args.stashItem = context.node.commit;\n            return this.execute(args);\n        }\n        else if (isCommandViewContextWithRepo(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repo.path;\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashApplyCommandArgs = { confirm: true, deleteAfter: false }) {\n        args = { ...args };\n\n        if (args.stashItem === undefined || args.stashItem.stashName === undefined) {\n            if (args.repoPath === undefined) {\n                args.repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Apply stashed changes from which repository${GlyphChars.Ellipsis}`,\n                    args.goBackCommand\n                );\n            }\n            if (!args.repoPath) return undefined;\n\n            const progressCancellation = StashListQuickPick.showProgress('apply');\n\n            try {\n                const stash = await Container.git.getStashList(args.repoPath);\n                if (stash === undefined) return window.showInformationMessage(`There are no stashed changes`);\n\n                if (progressCancellation.token.isCancellationRequested) return undefined;\n\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to apply stashed changes`\n                    },\n                    Commands.StashApply,\n                    [args]\n                );\n\n                const pick = await StashListQuickPick.show(\n                    stash,\n                    'apply',\n                    progressCancellation,\n                    args.goBackCommand,\n                    currentCommand\n                );\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n                if (pick === undefined) {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n\n                args.goBackCommand = currentCommand;\n                args.stashItem = pick.commit as GitStashCommit;\n            }\n            finally {\n                progressCancellation.cancel();\n            }\n        }\n\n        try {\n            if (args.confirm) {\n                const message =\n                    args.stashItem.message.length > 80\n                        ? `${args.stashItem.message.substring(0, 80)}${GlyphChars.Ellipsis}`\n                        : args.stashItem.message;\n                const result = await window.showWarningMessage(\n                    `Apply stashed changes '${message}' to your working tree?`,\n                    { title: 'Yes, delete after applying' } as MessageItem,\n                    { title: 'Yes' } as MessageItem,\n                    { title: 'No', isCloseAffordance: true } as MessageItem\n                );\n                if (result === undefined || result.title === 'No') {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n\n                args.deleteAfter = result.title !== 'Yes';\n            }\n\n            return await Container.git.stashApply(args.stashItem.repoPath, args.stashItem.stashName, args.deleteAfter);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashApplyCommand');\n            if (ex.message.includes('Your local changes to the following files would be overwritten by merge')) {\n                return window.showWarningMessage(\n                    `Unable to apply stash. Your working tree changes would be overwritten.`\n                );\n            }\n            else if (ex.message.includes('Auto-merging') && ex.message.includes('CONFLICT')) {\n                return window.showInformationMessage(`Stash applied with conflicts`);\n            }\n            else {\n                return Messages.showGenericErrorMessage(\n                    `Unable to apply stash \\u2014 ${ex.message.trim().replace(/\\n+?/g, '; ')}`\n                );\n            }\n        }\n    }\n}\n","'use strict';\nimport { MessageItem, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStashCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport { command, Command, CommandContext, Commands, isCommandViewContextWithCommit } from './common';\n\nexport interface StashDeleteCommandArgs {\n    confirm?: boolean;\n    stashItem?: { stashName: string; message: string; repoPath: string };\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashDeleteCommand extends Command {\n    constructor() {\n        super(Commands.StashDelete);\n    }\n\n    protected async preExecute(context: CommandContext, args: StashDeleteCommandArgs = { confirm: true }) {\n        if (isCommandViewContextWithCommit<GitStashCommit>(context)) {\n            args = { ...args };\n            args.stashItem = context.node.commit;\n            return this.execute(args);\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashDeleteCommandArgs = { confirm: true }) {\n        args = { ...args };\n        if (\n            args.stashItem === undefined ||\n            args.stashItem.stashName === undefined ||\n            args.stashItem.repoPath === undefined\n        ) {\n            return undefined;\n        }\n\n        if (args.confirm === undefined) {\n            args.confirm = true;\n        }\n\n        try {\n            if (args.confirm) {\n                const message =\n                    args.stashItem.message.length > 80\n                        ? `${args.stashItem.message.substring(0, 80)}${GlyphChars.Ellipsis}`\n                        : args.stashItem.message;\n                const result = await window.showWarningMessage(\n                    `Delete stashed changes '${message}'?`,\n                    { title: 'Yes' } as MessageItem,\n                    { title: 'No', isCloseAffordance: true } as MessageItem\n                );\n                if (result === undefined || result.title !== 'Yes') {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n            }\n\n            return await Container.git.stashDelete(args.stashItem.repoPath, args.stashItem.stashName);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashDeleteCommand');\n            return Messages.showGenericErrorMessage('Unable to delete stash');\n        }\n    }\n}\n","'use strict';\nimport { InputBoxOptions, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitUri';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithFile,\n    isCommandViewContextWithRepo,\n    isCommandViewContextWithRepoPath\n} from './common';\n\nexport interface StashSaveCommandArgs {\n    message?: string;\n    repoPath?: string;\n    uris?: Uri[];\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashSaveCommand extends Command {\n    constructor() {\n        super([Commands.StashSave, Commands.StashSaveFiles]);\n    }\n\n    protected async preExecute(context: CommandContext, args: StashSaveCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithFile(context)) {\n            args = { ...args };\n            args.uris = [GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath)];\n        }\n        else if (isCommandViewContextWithRepo(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repo.path;\n        }\n        else if (isCommandViewContextWithRepoPath(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repoPath;\n        }\n        else if (context.type === 'scm-states') {\n            args = { ...args };\n            args.uris = context.scmResourceStates.map(s => s.resourceUri);\n        }\n        else if (context.type === 'scm-groups') {\n            args = { ...args };\n            args.uris = context.scmResourceGroups.reduce<Uri[]>(\n                (a, b) => a.concat(b.resourceStates.map(s => s.resourceUri)),\n                []\n            );\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashSaveCommandArgs = {}) {\n        args = { ...args };\n\n        const uri = args.uris !== undefined && args.uris.length !== 0 ? args.uris[0] : undefined;\n        if (args.repoPath === undefined) {\n            args.repoPath = await getRepoPathOrPrompt(\n                uri,\n                `Stash changes for which repository${GlyphChars.Ellipsis}`,\n                args.goBackCommand\n            );\n        }\n        if (!args.repoPath) return undefined;\n\n        try {\n            if (args.message == null) {\n                args.message = await window.showInputBox({\n                    prompt: `Please provide a stash message`,\n                    placeHolder: `Stash message`\n                } as InputBoxOptions);\n                if (args.message === undefined) {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n            }\n\n            return await Container.git.stashSave(args.repoPath, args.message, args.uris);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashSaveCommand');\n\n            const msg = ex && ex.message;\n            if (msg.includes('newer version of Git')) {\n                return window.showErrorMessage(`Unable to save stash. ${msg}`);\n            }\n            return Messages.showGenericErrorMessage('Unable to save stash');\n        }\n    }\n}\n","'use strict';\nimport { Messages } from '../messages';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class SupportGitLensCommand extends Command {\n    constructor() {\n        super(Commands.SupportGitLens);\n    }\n\n    async execute() {\n        return Messages.showSupportGitLensMessage();\n    }\n}\n","'use strict';\nimport { ConfigurationTarget } from 'vscode';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { ModesQuickPick } from '../quickpicks';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class SwitchModeCommand extends Command {\n    constructor() {\n        super(Commands.SwitchMode);\n    }\n\n    async execute() {\n        const pick = await ModesQuickPick.show();\n        if (pick === undefined) return;\n\n        const active = Container.config.mode.active;\n        if (active === pick.key) return;\n\n        // Check if we have applied any annotations and clear them if we won't be applying them again\n        if (active != null && active.length !== 0) {\n            const activeAnnotations = Container.config.modes[active].annotations;\n            if (activeAnnotations != null) {\n                const newAnnotations = pick.key != null ? Container.config.modes[pick.key].annotations : undefined;\n                if (activeAnnotations !== newAnnotations) {\n                    await Container.fileAnnotations.clearAll();\n                }\n            }\n        }\n\n        await configuration.update(configuration.name('mode')('active').value, pick.key, ConfigurationTarget.Global);\n    }\n}\n\n@command()\nexport class ToggleReviewModeCommand extends Command {\n    constructor() {\n        super(Commands.ToggleReviewMode);\n    }\n\n    async execute() {\n        if (!Object.keys(Container.config.modes).includes('review')) return;\n\n        const mode = Container.config.mode.active === 'review' ? undefined : 'review';\n        await configuration.update(configuration.name('mode')('active').value, mode, ConfigurationTarget.Global);\n    }\n}\n\n@command()\nexport class ToggleZenModeCommand extends Command {\n    constructor() {\n        super(Commands.ToggleZenMode);\n    }\n\n    async execute() {\n        if (!Object.keys(Container.config.modes).includes('zen')) return;\n\n        const mode = Container.config.mode.active === 'zen' ? undefined : 'zen';\n        await configuration.update(configuration.name('mode')('active').value, mode, ConfigurationTarget.Global);\n    }\n}\n","'use strict';\nimport { QuickPickItem, QuickPickOptions, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\n\nexport interface ModesQuickPickItem extends QuickPickItem {\n    key: string | undefined;\n}\n\nexport class ModesQuickPick {\n    static async show(): Promise<ModesQuickPickItem | undefined> {\n        const modes = Object.keys(Container.config.modes);\n        if (modes.length === 0) return undefined;\n\n        const mode = Container.config.mode.active;\n\n        const items = modes.map(key => {\n            const modeCfg = Container.config.modes[key];\n            return {\n                label: `${mode === key ? '$(check)\\u00a0\\u00a0' : '\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0'}${\n                    modeCfg.name\n                } mode`,\n                description: modeCfg.description ? `\\u00a0${GlyphChars.Dash}\\u00a0 ${modeCfg.description}` : '',\n                key: key\n            } as ModesQuickPickItem;\n        });\n\n        if (mode) {\n            items.splice(0, 0, {\n                label: `Exit ${Container.config.modes[mode].name} mode`,\n                key: undefined\n            } as ModesQuickPickItem);\n        }\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: 'select a GitLens mode to enter'\n        } as QuickPickOptions);\n\n        return pick;\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class ToggleCodeLensCommand extends Command {\n    constructor() {\n        super(Commands.ToggleCodeLens);\n    }\n\n    execute() {\n        return Container.codeLens.toggleCodeLens();\n    }\n}\n","'use strict';\nimport { commands, ExtensionContext, extensions, window, workspace } from 'vscode';\nimport { Commands, registerCommands } from './commands';\nimport { Config, configuration, Configuration } from './configuration';\nimport { CommandContext, extensionQualifiedId, GlobalState, GlyphChars, setCommandContext } from './constants';\nimport { Container } from './container';\nimport { GitCommit, GitService, GitUri } from './git/gitService';\nimport { Logger } from './logger';\nimport { Messages } from './messages';\nimport { Strings, Versions } from './system';\nimport { ModeConfig } from './ui/config';\n// import { Telemetry } from './telemetry';\n\nexport async function activate(context: ExtensionContext) {\n    const start = process.hrtime();\n\n    // Pretend we are enabled (until we know otherwise) and set the view contexts to reduce flashing on load\n    setCommandContext(CommandContext.Enabled, true);\n\n    Logger.configure(context, o => {\n        if (o instanceof GitUri) {\n            return `GitUri(${o.toString(true)}${o.repoPath ? ` repoPath=${o.repoPath}` : ''}${\n                o.sha ? ` sha=${o.sha}` : ''\n            })`;\n        }\n\n        if (o instanceof GitCommit) {\n            return `GitCommit(${o.sha ? ` sha=${o.sha}` : ''}${o.repoPath ? ` repoPath=${o.repoPath}` : ''})`;\n        }\n\n        return undefined;\n    });\n\n    const gitlens = extensions.getExtension(extensionQualifiedId)!;\n    const gitlensVersion = gitlens.packageJSON.version;\n\n    const enabled = workspace.getConfiguration('git', null!).get<boolean>('enabled', true);\n    if (!enabled) {\n        Logger.log(`GitLens(v${gitlensVersion}) was NOT activated -- \"git.enabled\": false`);\n        setCommandContext(CommandContext.Enabled, false);\n\n        void Messages.showGitDisabledErrorMessage();\n\n        return;\n    }\n\n    Configuration.configure(context);\n\n    const cfg = configuration.get<Config>();\n\n    const previousVersion = context.globalState.get<string>(GlobalState.GitLensVersion);\n    await migrateSettings(context, previousVersion);\n\n    try {\n        await GitService.initialize();\n    }\n    catch (ex) {\n        Logger.error(ex, `GitLens(v${gitlensVersion}).activate`);\n        setCommandContext(CommandContext.Enabled, false);\n\n        if (ex.message.includes('Unable to find git')) {\n            await window.showErrorMessage(\n                `GitLens was unable to find Git. Please make sure Git is installed. Also ensure that Git is either in the PATH, or that 'git.path' is pointed to its installed location.`\n            );\n        }\n\n        return;\n    }\n\n    Container.initialize(context, cfg);\n\n    registerCommands(context);\n\n    const gitVersion = GitService.getGitVersion();\n\n    // Telemetry.configure(ApplicationInsightsKey);\n\n    // const telemetryContext: { [id: string]: any } = Object.create(null);\n    // telemetryContext.version = gitlensVersion;\n    // telemetryContext['git.version'] = gitVersion;\n    // Telemetry.setContext(telemetryContext);\n\n    notifyOnUnsupportedGitVersion(gitVersion);\n    void showWelcomePage(gitlensVersion, previousVersion);\n\n    context.globalState.update(GlobalState.GitLensVersion, gitlensVersion);\n\n    // Constantly over my data cap so stop collecting initialized event\n    // Telemetry.trackEvent('initialized', Objects.flatten(cfg, 'config', true));\n\n    Logger.log(`GitLens(v${gitlensVersion}) activated ${GlyphChars.Dot} ${Strings.getDurationMilliseconds(start)} ms`);\n}\n\nexport function deactivate() {}\n\nasync function migrateSettings(context: ExtensionContext, previousVersion: string | undefined) {\n    if (previousVersion === undefined) return;\n\n    const previous = Versions.fromString(previousVersion);\n\n    try {\n        if (Versions.compare(previous, Versions.from(9, 2, 2)) !== 1) {\n            await configuration.migrate('views.avatars', configuration.name('views')('compare')('avatars').value);\n            await configuration.migrate('views.avatars', configuration.name('views')('repositories')('avatars').value);\n            await configuration.migrate('views.avatars', configuration.name('views')('search')('avatars').value);\n        }\n        else if (Versions.compare(previous, Versions.from(9, 0, 0)) !== 1) {\n            await configuration.migrate(\n                'gitExplorer.autoRefresh',\n                configuration.name('views')('repositories')('autoRefresh').value\n            );\n            await configuration.migrate(\n                'gitExplorer.branches.layout',\n                configuration.name('views')('repositories')('branches')('layout').value\n            );\n            await configuration.migrate(\n                'gitExplorer.enabled',\n                configuration.name('views')('repositories')('enabled').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.compact',\n                configuration.name('views')('repositories')('files')('compact').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.layout',\n                configuration.name('views')('repositories')('files')('layout').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.threshold',\n                configuration.name('views')('repositories')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'gitExplorer.includeWorkingTree',\n                configuration.name('views')('repositories')('includeWorkingTree').value\n            );\n            await configuration.migrate(\n                'gitExplorer.location',\n                configuration.name('views')('repositories')('location').value\n            );\n            await configuration.migrate(\n                'gitExplorer.showTrackingBranch',\n                configuration.name('views')('repositories')('showTrackingBranch').value\n            );\n\n            await configuration.migrate(\n                'historyExplorer.avatars',\n                configuration.name('views')('fileHistory')('avatars').value\n            );\n            await configuration.migrate(\n                'historyExplorer.enabled',\n                configuration.name('views')('fileHistory')('enabled').value\n            );\n            await configuration.migrate(\n                'historyExplorer.location',\n                configuration.name('views')('fileHistory')('location').value\n            );\n\n            await configuration.migrate(\n                'historyExplorer.avatars',\n                configuration.name('views')('lineHistory')('avatars').value\n            );\n            await configuration.migrate(\n                'historyExplorer.enabled',\n                configuration.name('views')('lineHistory')('enabled').value\n            );\n            await configuration.migrate(\n                'historyExplorer.location',\n                configuration.name('views')('lineHistory')('location').value\n            );\n\n            await configuration.migrate(\n                'resultsExplorer.files.compact',\n                configuration.name('views')('compare')('files')('compact').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.layout',\n                configuration.name('views')('compare')('files')('layout').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.threshold',\n                configuration.name('views')('compare')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.location',\n                configuration.name('views')('compare')('location').value\n            );\n\n            await configuration.migrate(\n                'resultsExplorer.files.compact',\n                configuration.name('views')('search')('files')('compact').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.layout',\n                configuration.name('views')('search')('files')('layout').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.threshold',\n                configuration.name('views')('search')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.location',\n                configuration.name('views')('search')('location').value\n            );\n\n            await configuration.migrate('explorers.avatars', configuration.name('views')('compare')('avatars').value);\n            await configuration.migrate(\n                'explorers.avatars',\n                configuration.name('views')('repositories')('avatars').value\n            );\n            await configuration.migrate('explorers.avatars', configuration.name('views')('search')('avatars').value);\n            await configuration.migrate(\n                'explorers.commitFileFormat',\n                configuration.name('views')('commitFileFormat').value\n            );\n            await configuration.migrate('explorers.commitFormat', configuration.name('views')('commitFormat').value);\n            await configuration.migrate(\n                'explorers.defaultItemLimit',\n                configuration.name('views')('defaultItemLimit').value\n            );\n            await configuration.migrate(\n                'explorers.stashFileFormat',\n                configuration.name('views')('stashFileFormat').value\n            );\n            await configuration.migrate('explorers.stashFormat', configuration.name('views')('stashFormat').value);\n            await configuration.migrate(\n                'explorers.statusFileFormat',\n                configuration.name('views')('statusFileFormat').value\n            );\n\n            await configuration.migrate<\n                {\n                    [key: string]: {\n                        name: string;\n                        statusBarItemName?: string;\n                        description?: string;\n                        codeLens?: boolean;\n                        currentLine?: boolean;\n                        explorers?: boolean;\n                        hovers?: boolean;\n                        statusBar?: boolean;\n                    };\n                },\n                {\n                    [key: string]: ModeConfig;\n                }\n            >('modes', configuration.name('modes').value, {\n                migrationFn: v => {\n                    const modes = Object.create(null);\n\n                    for (const k in v) {\n                        const { explorers, ...mode } = v[k];\n                        modes[k] = { ...mode, views: explorers };\n                    }\n\n                    return modes;\n                }\n            });\n        }\n    }\n    catch (ex) {\n        Logger.error(ex, 'migrateSettings');\n    }\n}\n\nfunction notifyOnUnsupportedGitVersion(version: string) {\n    if (GitService.compareGitVersion('2.2.0') !== -1) return;\n\n    // If git is less than v2.2.0\n    void Messages.showGitVersionUnsupportedErrorMessage(version);\n}\n\nasync function showWelcomePage(version: string, previousVersion: string | undefined) {\n    if (previousVersion === undefined) {\n        Logger.log(`GitLens first-time install`);\n\n        if (Container.config.showWhatsNewAfterUpgrades) {\n            await commands.executeCommand(Commands.ShowWelcomePage);\n        }\n\n        return;\n    }\n\n    if (previousVersion !== version) {\n        Logger.log(`GitLens upgraded from v${previousVersion} to v${version}`);\n    }\n\n    const [major, minor] = version.split('.');\n    const [prevMajor, prevMinor] = previousVersion.split('.');\n    if (\n        (major === prevMajor && minor === prevMinor) ||\n        // Don't notify on downgrades\n        (major < prevMajor || (major === prevMajor && minor < prevMinor))\n    ) {\n        return;\n    }\n\n    if (Container.config.showWhatsNewAfterUpgrades && major !== prevMajor) {\n        await commands.executeCommand(Commands.ShowWelcomePage);\n    }\n    else {\n        await Messages.showWhatsNewMessage(version);\n    }\n}\n"],"sourceRoot":""}